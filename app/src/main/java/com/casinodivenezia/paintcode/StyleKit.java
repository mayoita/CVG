package com.casinodivenezia.paintcode;

import android.graphics.Paint;
import android.graphics.PointF;
import android.graphics.RectF;
import android.graphics.Bitmap;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Path;



/**
 * Created by Massimo Moro on 17 May 2018.
 * Copyright Â© 2018 CMV Gioco Spa. All rights reserved.
 *
 * Generated by PaintCode
 * http://www.paintcodeapp.com
 *
 * @author Massimo Moro
 */
public class StyleKit {
    // Colors
    public static int oro = Color.argb(255, 132, 117, 82);
    public static int oroScuro = PaintCodeColor.colorByChangingValue(StyleKit.oro, 0.2f);
    public static int bianco = Color.argb(255, 255, 255, 255);
    public static int rosso = Color.argb(255, 226, 8, 8);
    public static int nero = Color.argb(255, 0, 0, 0);
    
    
    
    
    // Resizing Behavior
    public enum ResizingBehavior {
        AspectFit, //!< The content is proportionally resized to fit into the target rectangle.
        AspectFill, //!< The content is proportionally resized to completely fill the target rectangle.
        Stretch, //!< The content is stretched to match the entire target rectangle.
        Center, //!< The content is centered in the target rectangle, but it is NOT resized.
    }
    
    // Canvas Drawings
    // Icone
    
    private static class CacheForIconaDove {
        private static Paint paint = new Paint();
        private static RectF bezier2Rect = new RectF();
        private static Path bezier2Path = new Path();
        private static RectF bezierRect = new RectF();
        private static Path bezierPath = new Path();
    }
    
    
    public static void drawIconaDove(Canvas canvas, RectF frame, int color) {
        // General Declarations
        Paint paint = CacheForIconaDove.paint;
        
        // Bezier 2
        RectF bezier2Rect = CacheForIconaDove.bezier2Rect;
        bezier2Rect.set(frame.left + 38.23f,
            frame.top + 21.76f,
            frame.left + 63.54f,
            frame.top + 47.17f);
        Path bezier2Path = CacheForIconaDove.bezier2Path;
        bezier2Path.reset();
        bezier2Path.moveTo(frame.left + frame.width() * 0.50974f, frame.top + frame.height() * 0.21761f);
        bezier2Path.lineTo(frame.left + frame.width() * 0.50885f, frame.top + frame.height() * 0.21761f);
        bezier2Path.cubicTo(frame.left + frame.width() * 0.43895f, frame.top + frame.height() * 0.21761f, frame.left + frame.width() * 0.38227f, frame.top + frame.height() * 0.27449f, frame.left + frame.width() * 0.38227f, frame.top + frame.height() * 0.34465f);
        bezier2Path.cubicTo(frame.left + frame.width() * 0.38227f, frame.top + frame.height() * 0.41482f, frame.left + frame.width() * 0.43895f, frame.top + frame.height() * 0.4717f, frame.left + frame.width() * 0.50885f, frame.top + frame.height() * 0.4717f);
        bezier2Path.cubicTo(frame.left + frame.width() * 0.57876f, frame.top + frame.height() * 0.4717f, frame.left + frame.width() * 0.63543f, frame.top + frame.height() * 0.41482f, frame.left + frame.width() * 0.63543f, frame.top + frame.height() * 0.34465f);
        bezier2Path.cubicTo(frame.left + frame.width() * 0.63543f, frame.top + frame.height() * 0.34391f, frame.left + frame.width() * 0.63543f, frame.top + frame.height() * 0.34317f, frame.left + frame.width() * 0.63541f, frame.top + frame.height() * 0.34244f);
        bezier2Path.lineTo(frame.left + frame.width() * 0.63543f, frame.top + frame.height() * 0.34465f);
        bezier2Path.cubicTo(frame.left + frame.width() * 0.63543f, frame.top + frame.height() * 0.27535f, frame.left + frame.width() * 0.5801f, frame.top + frame.height() * 0.21884f, frame.left + frame.width() * 0.51106f, frame.top + frame.height() * 0.21763f);
        bezier2Path.lineTo(frame.left + frame.width() * 0.50974f, frame.top + frame.height() * 0.21761f);
        bezier2Path.close();
        bezier2Path.moveTo(frame.left + frame.width() * 0.50974f, frame.top + frame.height() * 0.43532f);
        bezier2Path.lineTo(frame.left + frame.width() * 0.50974f, frame.top + frame.height() * 0.43532f);
        bezier2Path.cubicTo(frame.left + frame.width() * 0.46051f, frame.top + frame.height() * 0.43532f, frame.left + frame.width() * 0.4206f, frame.top + frame.height() * 0.39526f, frame.left + frame.width() * 0.4206f, frame.top + frame.height() * 0.34585f);
        bezier2Path.cubicTo(frame.left + frame.width() * 0.4206f, frame.top + frame.height() * 0.29644f, frame.left + frame.width() * 0.46051f, frame.top + frame.height() * 0.25638f, frame.left + frame.width() * 0.50974f, frame.top + frame.height() * 0.25638f);
        bezier2Path.cubicTo(frame.left + frame.width() * 0.55898f, frame.top + frame.height() * 0.25638f, frame.left + frame.width() * 0.59889f, frame.top + frame.height() * 0.29644f, frame.left + frame.width() * 0.59889f, frame.top + frame.height() * 0.34585f);
        bezier2Path.lineTo(frame.left + frame.width() * 0.59889f, frame.top + frame.height() * 0.34585f);
        bezier2Path.cubicTo(frame.left + frame.width() * 0.59889f, frame.top + frame.height() * 0.39526f, frame.left + frame.width() * 0.55898f, frame.top + frame.height() * 0.43532f, frame.left + frame.width() * 0.50974f, frame.top + frame.height() * 0.43532f);
        bezier2Path.close();
        
        paint.reset();
        paint.setFlags(Paint.ANTI_ALIAS_FLAG);
        paint.setStyle(Paint.Style.FILL);
        paint.setColor(color);
        canvas.drawPath(bezier2Path, paint);
        
        // Bezier
        RectF bezierRect = CacheForIconaDove.bezierRect;
        bezierRect.set(frame.left + 15f,
            frame.top + 0f,
            frame.left + 84.33f,
            frame.top + 99.3f);
        Path bezierPath = CacheForIconaDove.bezierPath;
        bezierPath.reset();
        bezierPath.moveTo(frame.left + frame.width() * 0.74161f, frame.top + frame.height() * 0.1019f);
        bezierPath.lineTo(frame.left + frame.width() * 0.74161f, frame.top + frame.height() * 0.1019f);
        bezierPath.cubicTo(frame.left + frame.width() * 0.60631f, frame.top + frame.height() * -0.0339f, frame.left + frame.width() * 0.38694f, frame.top + frame.height() * -0.0339f, frame.left + frame.width() * 0.25164f, frame.top + frame.height() * 0.1019f);
        bezierPath.cubicTo(frame.left + frame.width() * 0.1304f, frame.top + frame.height() * 0.22328f, frame.left + frame.width() * 0.11525f, frame.top + frame.height() * 0.45202f, frame.left + frame.width() * 0.21895f, frame.top + frame.height() * 0.59039f);
        bezierPath.lineTo(frame.left + frame.width() * 0.49648f, frame.top + frame.height() * 0.993f);
        bezierPath.lineTo(frame.left + frame.width() * 0.774f, frame.top + frame.height() * 0.59099f);
        bezierPath.cubicTo(frame.left + frame.width() * 0.878f, frame.top + frame.height() * 0.45202f, frame.left + frame.width() * 0.86314f, frame.top + frame.height() * 0.22328f, frame.left + frame.width() * 0.74191f, frame.top + frame.height() * 0.1016f);
        bezierPath.lineTo(frame.left + frame.width() * 0.74161f, frame.top + frame.height() * 0.1019f);
        bezierPath.close();
        bezierPath.moveTo(frame.left + frame.width() * 0.74459f, frame.top + frame.height() * 0.57012f);
        bezierPath.lineTo(frame.left + frame.width() * 0.49677f, frame.top + frame.height() * 0.92799f);
        bezierPath.lineTo(frame.left + frame.width() * 0.24807f, frame.top + frame.height() * 0.56922f);
        bezierPath.cubicTo(frame.left + frame.width() * 0.15418f, frame.top + frame.height() * 0.44367f, frame.left + frame.width() * 0.16784f, frame.top + frame.height() * 0.23849f, frame.left + frame.width() * 0.27719f, frame.top + frame.height() * 0.12755f);
        bezierPath.lineTo(frame.left + frame.width() * 0.27632f, frame.top + frame.height() * 0.12842f);
        bezierPath.cubicTo(frame.left + frame.width() * 0.39758f, frame.top + frame.height() * 0.00671f, frame.left + frame.width() * 0.59418f, frame.top + frame.height() * 0.00671f, frame.left + frame.width() * 0.71544f, frame.top + frame.height() * 0.12842f);
        bezierPath.cubicTo(frame.left + frame.width() * 0.82392f, frame.top + frame.height() * 0.23729f, frame.left + frame.width() * 0.83729f, frame.top + frame.height() * 0.44367f, frame.left + frame.width() * 0.74429f, frame.top + frame.height() * 0.57012f);
        bezierPath.lineTo(frame.left + frame.width() * 0.74459f, frame.top + frame.height() * 0.57012f);
        bezierPath.close();
        
        paint.reset();
        paint.setFlags(Paint.ANTI_ALIAS_FLAG);
        paint.setStyle(Paint.Style.FILL);
        paint.setColor(color);
        canvas.drawPath(bezierPath, paint);
    }
    
    private static class CacheForIconaQuando {
        private static Paint paint = new Paint();
        private static RectF livello_2 = new RectF();
        private static RectF livello_12 = new RectF();
        private static RectF bezierRect = new RectF();
        private static Path bezierPath = new Path();
        private static RectF bezier2Rect = new RectF();
        private static Path bezier2Path = new Path();
    }
    
    
    public static void drawIconaQuando(Canvas canvas, RectF frame, int color) {
        // General Declarations
        Paint paint = CacheForIconaQuando.paint;
        
        // Livello_2
        {
            RectF livello_2 = CacheForIconaQuando.livello_2;
            livello_2.set(frame.left + 3.13f,
                frame.top + 2.13f,
                frame.right - 2.91f,
                frame.bottom - 3.91f);
            
            // Livello_1-2
            {
                RectF livello_12 = CacheForIconaQuando.livello_12;
                livello_12.set(livello_2.left,
                    livello_2.top,
                    livello_2.left + (float) Math.floor(livello_2.width() - 0.46f) + 0.96f,
                    livello_2.top + (float) Math.floor(livello_2.height() - 0.46f) + 0.96f);
                
                // Bezier
                RectF bezierRect = CacheForIconaQuando.bezierRect;
                bezierRect.set(livello_2.left,
                    livello_2.top,
                    livello_2.left + (float) Math.floor(livello_2.width() - 0.46f) + 0.96f,
                    livello_2.top + (float) Math.floor(livello_2.height() - 0.46f) + 0.96f);
                Path bezierPath = CacheForIconaQuando.bezierPath;
                bezierPath.reset();
                bezierPath.moveTo(livello_12.left + livello_12.width() * 0.5f, livello_12.top + livello_12.height() * 0f);
                bezierPath.lineTo(livello_12.left + livello_12.width() * 0.5f, livello_12.top + livello_12.height() * 0f);
                bezierPath.cubicTo(livello_12.left + livello_12.width() * 0.22386f, livello_12.top + livello_12.height() * 0f, livello_12.left, livello_12.top + livello_12.height() * 0.22386f, livello_12.left, livello_12.top + livello_12.height() * 0.5f);
                bezierPath.cubicTo(livello_12.left, livello_12.top + livello_12.height() * 0.77614f, livello_12.left + livello_12.width() * 0.22386f, livello_12.top + livello_12.height() * 1f, livello_12.left + livello_12.width() * 0.5f, livello_12.top + livello_12.height() * 1f);
                bezierPath.cubicTo(livello_12.left + livello_12.width() * 0.77614f, livello_12.top + livello_12.height() * 1f, livello_12.left + livello_12.width() * 1f, livello_12.top + livello_12.height() * 0.77614f, livello_12.left + livello_12.width() * 1f, livello_12.top + livello_12.height() * 0.5f);
                bezierPath.lineTo(livello_12.left + livello_12.width() * 1f, livello_12.top + livello_12.height() * 0.50059f);
                bezierPath.cubicTo(livello_12.left + livello_12.width() * 1f, livello_12.top + livello_12.height() * 0.22412f, livello_12.left + livello_12.width() * 0.77588f, livello_12.top, livello_12.left + livello_12.width() * 0.49941f, livello_12.top);
                bezierPath.lineTo(livello_12.left + livello_12.width() * 0.5f, livello_12.top + livello_12.height() * 0f);
                bezierPath.close();
                bezierPath.moveTo(livello_12.left + livello_12.width() * 0.5f, livello_12.top + livello_12.height() * 0.96698f);
                bezierPath.lineTo(livello_12.left + livello_12.width() * 0.5f, livello_12.top + livello_12.height() * 0.96698f);
                bezierPath.cubicTo(livello_12.left + livello_12.width() * 0.24209f, livello_12.top + livello_12.height() * 0.96698f, livello_12.left + livello_12.width() * 0.03302f, livello_12.top + livello_12.height() * 0.75791f, livello_12.left + livello_12.width() * 0.03302f, livello_12.top + livello_12.height() * 0.5f);
                bezierPath.cubicTo(livello_12.left + livello_12.width() * 0.03302f, livello_12.top + livello_12.height() * 0.24209f, livello_12.left + livello_12.width() * 0.24209f, livello_12.top + livello_12.height() * 0.03302f, livello_12.left + livello_12.width() * 0.5f, livello_12.top + livello_12.height() * 0.03302f);
                bezierPath.cubicTo(livello_12.left + livello_12.width() * 0.75791f, livello_12.top + livello_12.height() * 0.03302f, livello_12.left + livello_12.width() * 0.96698f, livello_12.top + livello_12.height() * 0.24209f, livello_12.left + livello_12.width() * 0.96698f, livello_12.top + livello_12.height() * 0.5f);
                bezierPath.lineTo(livello_12.left + livello_12.width() * 0.96698f, livello_12.top + livello_12.height() * 0.5f);
                bezierPath.cubicTo(livello_12.left + livello_12.width() * 0.96698f, livello_12.top + livello_12.height() * 0.75791f, livello_12.left + livello_12.width() * 0.75791f, livello_12.top + livello_12.height() * 0.96698f, livello_12.left + livello_12.width() * 0.5f, livello_12.top + livello_12.height() * 0.96698f);
                bezierPath.close();
                
                paint.reset();
                paint.setFlags(Paint.ANTI_ALIAS_FLAG);
                paint.setStyle(Paint.Style.FILL);
                paint.setColor(color);
                canvas.drawPath(bezierPath, paint);
                
                paint.reset();
                paint.setFlags(Paint.ANTI_ALIAS_FLAG);
                paint.setStrokeWidth(0.5f);
                paint.setStrokeMiter(10f);
                canvas.save();
                paint.setStyle(Paint.Style.STROKE);
                paint.setColor(color);
                canvas.drawPath(bezierPath, paint);
                canvas.restore();
                
                // Bezier 2
                RectF bezier2Rect = CacheForIconaQuando.bezier2Rect;
                bezier2Rect.set(livello_2.left + (float) Math.floor(livello_2.width() * 0.21413f + 0.38f) + 0.12f,
                    livello_2.top + (float) Math.floor(livello_2.height() * 0.10005f + 0.1f) + 0.4f,
                    livello_2.left + (float) Math.floor(livello_2.width() * 0.51455f + 0.15f) + 0.35f,
                    livello_2.top + (float) Math.floor(livello_2.height() * 0.53342f + 0.38f) + 0.12f);
                Path bezier2Path = CacheForIconaQuando.bezier2Path;
                bezier2Path.reset();
                bezier2Path.moveTo(livello_12.left + livello_12.width() * 0.49804f, livello_12.top + livello_12.height() * 0.10005f);
                bezier2Path.lineTo(livello_12.left + livello_12.width() * 0.49804f, livello_12.top + livello_12.height() * 0.10005f);
                bezier2Path.cubicTo(livello_12.left + livello_12.width() * 0.48892f, livello_12.top + livello_12.height() * 0.10005f, livello_12.left + livello_12.width() * 0.48153f, livello_12.top + livello_12.height() * 0.10744f, livello_12.left + livello_12.width() * 0.48153f, livello_12.top + livello_12.height() * 0.11656f);
                bezier2Path.lineTo(livello_12.left + livello_12.width() * 0.48153f, livello_12.top + livello_12.height() * 0.49981f);
                bezier2Path.lineTo(livello_12.left + livello_12.width() * 0.23094f, livello_12.top + livello_12.height() * 0.49981f);
                bezier2Path.lineTo(livello_12.left + livello_12.width() * 0.23094f, livello_12.top + livello_12.height() * 0.49981f);
                bezier2Path.cubicTo(livello_12.left + livello_12.width() * 0.22166f, livello_12.top + livello_12.height() * 0.49981f, livello_12.left + livello_12.width() * 0.21413f, livello_12.top + livello_12.height() * 0.50733f, livello_12.left + livello_12.width() * 0.21413f, livello_12.top + livello_12.height() * 0.51661f);
                bezier2Path.cubicTo(livello_12.left + livello_12.width() * 0.21413f, livello_12.top + livello_12.height() * 0.52589f, livello_12.left + livello_12.width() * 0.22166f, livello_12.top + livello_12.height() * 0.53342f, livello_12.left + livello_12.width() * 0.23094f, livello_12.top + livello_12.height() * 0.53342f);
                bezier2Path.lineTo(livello_12.left + livello_12.width() * 0.49804f, livello_12.top + livello_12.height() * 0.53342f);
                bezier2Path.lineTo(livello_12.left + livello_12.width() * 0.49804f, livello_12.top + livello_12.height() * 0.53342f);
                bezier2Path.cubicTo(livello_12.left + livello_12.width() * 0.50715f, livello_12.top + livello_12.height() * 0.53342f, livello_12.left + livello_12.width() * 0.51455f, livello_12.top + livello_12.height() * 0.52603f, livello_12.left + livello_12.width() * 0.51455f, livello_12.top + livello_12.height() * 0.51691f);
                bezier2Path.lineTo(livello_12.left + livello_12.width() * 0.51455f, livello_12.top + livello_12.height() * 0.11656f);
                bezier2Path.lineTo(livello_12.left + livello_12.width() * 0.51455f, livello_12.top + livello_12.height() * 0.11656f);
                bezier2Path.cubicTo(livello_12.left + livello_12.width() * 0.51455f, livello_12.top + livello_12.height() * 0.10744f, livello_12.left + livello_12.width() * 0.50715f, livello_12.top + livello_12.height() * 0.10005f, livello_12.left + livello_12.width() * 0.49804f, livello_12.top + livello_12.height() * 0.10005f);
                bezier2Path.close();
                
                paint.reset();
                paint.setFlags(Paint.ANTI_ALIAS_FLAG);
                paint.setStyle(Paint.Style.FILL);
                paint.setColor(color);
                canvas.drawPath(bezier2Path, paint);
                
                paint.reset();
                paint.setFlags(Paint.ANTI_ALIAS_FLAG);
                paint.setStrokeWidth(0.5f);
                paint.setStrokeMiter(10f);
                canvas.save();
                paint.setStyle(Paint.Style.STROKE);
                paint.setColor(color);
                canvas.drawPath(bezier2Path, paint);
                canvas.restore();
            }
        }
    }
    
    private static class CacheForEvents {
        private static Paint paint = new Paint();
        private static RectF group = new RectF();
        private static RectF group3 = new RectF();
        private static RectF bezierRect = new RectF();
        private static Path bezierPath = new Path();
        private static RectF bezier4Rect = new RectF();
        private static Path bezier4Path = new Path();
        private static RectF group2 = new RectF();
        private static RectF bezier2Rect = new RectF();
        private static Path bezier2Path = new Path();
        private static RectF bezier3Rect = new RectF();
        private static Path bezier3Path = new Path();
    }
    
    
    public static void drawEvents(Canvas canvas, RectF frame, boolean highlited) {
        // General Declarations
        Paint paint = CacheForEvents.paint;
        
        // Group
        {
            RectF group = CacheForEvents.group;
            group.set(frame.left + 17.5f,
                frame.top + 15.5f,
                frame.right - 10.99f,
                frame.bottom - 12.99f);
            
            // Group 3
            {
                RectF group3 = CacheForEvents.group3;
                group3.set(group.left,
                    group.top,
                    group.left + (float) Math.floor(group.width() * 0.99986f) + 0.5f,
                    group.top + (float) Math.floor(group.height() * 0.99983f) + 0.5f);
                
                // Bezier
                RectF bezierRect = CacheForEvents.bezierRect;
                bezierRect.set(group.left + (float) Math.floor(group.width() * 0.54737f) + 0.5f,
                    group.top + (float) Math.floor(group.height() * 0.61692f) + 0.5f,
                    group.left + (float) Math.floor(group.width() * 0.99986f) + 0.5f,
                    group.top + (float) Math.floor(group.height() * 0.99983f) + 0.5f);
                Path bezierPath = CacheForEvents.bezierPath;
                bezierPath.reset();
                bezierPath.moveTo(group3.left + group3.width() * 0.66789f, group3.top + group3.height() * 0.91381f);
                bezierPath.cubicTo(group3.left + group3.width() * 0.57006f, group3.top + group3.height() * 0.84337f, group3.left + group3.width() * 0.50813f, group3.top + group3.height() * 0.75493f, group3.left + group3.width() * 0.57609f, group3.top + group3.height() * 0.66217f);
                bezierPath.cubicTo(group3.left + group3.width() * 0.61807f, group3.top + group3.height() * 0.61206f, group3.left + group3.width() * 0.67772f, group3.top + group3.height() * 0.60646f, group3.left + group3.width() * 0.71934f, group3.top + group3.height() * 0.63165f);
                bezierPath.cubicTo(group3.left + group3.width() * 0.73756f, group3.top + group3.height() * 0.6421f, group3.left + group3.width() * 0.76879f, group3.top + group3.height() * 0.68539f, group3.left + group3.width() * 0.77588f, group3.top + group3.height() * 0.69717f);
                bezierPath.cubicTo(group3.left + group3.width() * 0.78543f, group3.top + group3.height() * 0.67952f, group3.left + group3.width() * 0.81491f, group3.top + group3.height() * 0.62653f, group3.left + group3.width() * 0.85948f, group3.top + group3.height() * 0.62089f);
                bezierPath.cubicTo(group3.left + group3.width() * 0.91173f, group3.top + group3.height() * 0.60813f, group3.left + group3.width() * 0.94971f, group3.top + group3.height() * 0.6351f, group3.left + group3.width() * 0.9745f, group3.top + group3.height() * 0.66217f);
                bezierPath.cubicTo(group3.left + group3.width() * 1.05038f, group3.top + group3.height() * 0.77903f, group3.left + group3.width() * 0.93796f, group3.top + group3.height() * 0.86748f, group3.left + group3.width() * 0.88365f, group3.top + group3.height() * 0.9105f);
                bezierPath.cubicTo(group3.left + group3.width() * 0.81378f, group3.top + group3.height() * 0.9698f, group3.left + group3.width() * 0.77588f, group3.top + group3.height(), group3.left + group3.width() * 0.77588f, group3.top + group3.height());
                bezierPath.cubicTo(group3.left + group3.width() * 0.77588f, group3.top + group3.height(), group3.left + group3.width() * 0.73059f, group3.top + group3.height() * 0.96815f, group3.left + group3.width() * 0.66789f, group3.top + group3.height() * 0.91381f);
                bezierPath.close();
                
                paint.reset();
                paint.setFlags(Paint.ANTI_ALIAS_FLAG);
                paint.setStrokeWidth(2f);
                paint.setStrokeCap(Paint.Cap.ROUND);
                paint.setStrokeMiter(10f);
                canvas.save();
                paint.setStyle(Paint.Style.STROKE);
                paint.setColor(StyleKit.bianco);
                canvas.drawPath(bezierPath, paint);
                canvas.restore();
                
                // Bezier 4
                RectF bezier4Rect = CacheForEvents.bezier4Rect;
                bezier4Rect.set(group.left,
                    group.top,
                    group.left + (float) Math.floor(group.width() * 0.94147f) + 0.5f,
                    group.top + (float) Math.floor(group.height() * 0.99983f) + 0.5f);
                Path bezier4Path = CacheForEvents.bezier4Path;
                bezier4Path.reset();
                bezier4Path.moveTo(group3.left + group3.width() * 0.69017f, group3.top + group3.height() * 0.18367f);
                bezier4Path.lineTo(group3.left + group3.width() * 0.81759f, group3.top + group3.height() * 0.18367f);
                bezier4Path.lineTo(group3.left + group3.width() * 0.81759f, group3.top);
                bezier4Path.lineTo(group3.left + group3.width() * 0.69017f, group3.top);
                bezier4Path.lineTo(group3.left + group3.width() * 0.69017f, group3.top + group3.height() * 0.18367f);
                bezier4Path.close();
                bezier4Path.moveTo(group3.left + group3.width() * 0.14865f, group3.top + group3.height() * 0.18367f);
                bezier4Path.lineTo(group3.left + group3.width() * 0.26545f, group3.top + group3.height() * 0.18367f);
                bezier4Path.lineTo(group3.left + group3.width() * 0.26545f, group3.top);
                bezier4Path.lineTo(group3.left + group3.width() * 0.14865f, group3.top);
                bezier4Path.lineTo(group3.left + group3.width() * 0.14865f, group3.top + group3.height() * 0.18367f);
                bezier4Path.close();
                bezier4Path.moveTo(group3.left + group3.width() * 0.01286f, group3.top + group3.height() * 0.24495f);
                bezier4Path.cubicTo(group3.left + group3.width() * 0.08347f, group3.top + group3.height() * 0.24495f, group3.left + group3.width() * 0.94062f, group3.top + group3.height() * 0.24495f, group3.left + group3.width() * 0.94062f, group3.top + group3.height() * 0.24495f);
                bezier4Path.lineTo(group3.left + group3.width() * 0.01286f, group3.top + group3.height() * 0.24495f);
                bezier4Path.close();
                bezier4Path.moveTo(group3.left + group3.width() * 0.32151f, group3.top + group3.height() * 0.37822f);
                bezier4Path.cubicTo(group3.left + group3.width() * 0.32151f, group3.top + group3.height() * 0.88748f, group3.left + group3.width() * 0.32151f, group3.top + group3.height() * 0.87624f, group3.left + group3.width() * 0.32151f, group3.top + group3.height() * 0.87624f);
                bezier4Path.lineTo(group3.left + group3.width() * 0.32151f, group3.top + group3.height() * 0.37822f);
                bezier4Path.close();
                bezier4Path.moveTo(group3.left + group3.width() * 0.48768f, group3.top + group3.height() * 0.37822f);
                bezier4Path.cubicTo(group3.left + group3.width() * 0.48768f, group3.top + group3.height() * 0.88765f, group3.left + group3.width() * 0.48768f, group3.top + group3.height() * 0.87624f, group3.left + group3.width() * 0.48768f, group3.top + group3.height() * 0.87624f);
                bezier4Path.lineTo(group3.left + group3.width() * 0.48768f, group3.top + group3.height() * 0.37822f);
                bezier4Path.close();
                bezier4Path.moveTo(group3.left + group3.width() * 0.65384f, group3.top + group3.height() * 0.37822f);
                bezier4Path.lineTo(group3.left + group3.width() * 0.65384f, group3.top + group3.height() * 0.55244f);
                bezier4Path.lineTo(group3.left + group3.width() * 0.65384f, group3.top + group3.height() * 0.37822f);
                bezier4Path.close();
                bezier4Path.moveTo(group3.left + group3.width() * 0.1415f, group3.top + group3.height() * 0.53904f);
                bezier4Path.cubicTo(group3.left + group3.width() * 0.82128f, group3.top + group3.height() * 0.53904f, group3.left + group3.width() * 0.81515f, group3.top + group3.height() * 0.53783f, group3.left + group3.width() * 0.81515f, group3.top + group3.height() * 0.53783f);
                bezier4Path.lineTo(group3.left + group3.width() * 0.1415f, group3.top + group3.height() * 0.53904f);
                bezier4Path.close();
                bezier4Path.moveTo(group3.left + group3.width() * 0.15535f, group3.top + group3.height() * 0.69985f);
                bezier4Path.cubicTo(group3.left + group3.width() * 0.1415f, group3.top + group3.height() * 0.69985f, group3.left + group3.width() * 0.48768f, group3.top + group3.height() * 0.69985f, group3.left + group3.width() * 0.48768f, group3.top + group3.height() * 0.69985f);
                bezier4Path.lineTo(group3.left + group3.width() * 0.15535f, group3.top + group3.height() * 0.69985f);
                bezier4Path.close();
                bezier4Path.moveTo(group3.left + group3.width() * 0.94161f, group3.top + group3.height() * 0.54054f);
                bezier4Path.lineTo(group3.left + group3.width() * 0.93593f, group3.top + group3.height() * 0.08434f);
                bezier4Path.lineTo(group3.left + group3.width() * 0.81228f, group3.top + group3.height() * 0.08673f);
                bezier4Path.moveTo(group3.left + group3.width() * 0.14865f, group3.top + group3.height() * 0.08163f);
                bezier4Path.lineTo(group3.left, group3.top + group3.height() * 0.08108f);
                bezier4Path.lineTo(group3.left, group3.top + group3.height());
                bezier4Path.lineTo(group3.left + group3.width() * 0.48465f, group3.top + group3.height());
                bezier4Path.moveTo(group3.left + group3.width() * 0.68486f, group3.top + group3.height() * 0.07653f);
                bezier4Path.lineTo(group3.left + group3.width() * 0.27844f, group3.top + group3.height() * 0.07865f);
                bezier4Path.moveTo(group3.left + group3.width() * 0.81515f, group3.top + group3.height() * 0.53783f);
                bezier4Path.lineTo(group3.left + group3.width() * 0.81515f, group3.top + group3.height() * 0.38183f);
                bezier4Path.lineTo(group3.left + group3.width() * 0.1415f, group3.top + group3.height() * 0.37822f);
                bezier4Path.lineTo(group3.left + group3.width() * 0.1415f, group3.top + group3.height() * 0.86284f);
                bezier4Path.lineTo(group3.left + group3.width() * 0.48768f, group3.top + group3.height() * 0.86284f);
                
                paint.reset();
                paint.setFlags(Paint.ANTI_ALIAS_FLAG);
                paint.setStrokeWidth(2f);
                paint.setStrokeMiter(10f);
                canvas.save();
                paint.setStyle(Paint.Style.STROKE);
                paint.setColor(StyleKit.bianco);
                canvas.drawPath(bezier4Path, paint);
                canvas.restore();
            }
            
            // Group 2
            {
                RectF group2 = CacheForEvents.group2;
                group2.set(group.left,
                    group.top,
                    group.left + (float) Math.floor(group.width() - 0.01f) + 0.51f,
                    group.top + (float) Math.floor(group.height() - 0.01f) + 0.51f);
                
                // Bezier 2
                if (highlited) {
                    RectF bezier2Rect = CacheForEvents.bezier2Rect;
                    bezier2Rect.set(group.left + (float) Math.floor(group.width() * 0.54751f - 0.01f) + 0.51f,
                        group.top + (float) Math.floor(group.height() * 0.61709f - 0.01f) + 0.51f,
                        group.left + (float) Math.floor(group.width() * 1f - 0.01f) + 0.51f,
                        group.top + (float) Math.floor(group.height() * 1f - 0.01f) + 0.51f);
                    Path bezier2Path = CacheForEvents.bezier2Path;
                    bezier2Path.reset();
                    bezier2Path.moveTo(group2.left + group2.width() * 0.66794f, group2.top + group2.height() * 0.91382f);
                    bezier2Path.cubicTo(group2.left + group2.width() * 0.57012f, group2.top + group2.height() * 0.84339f, group2.left + group2.width() * 0.5082f, group2.top + group2.height() * 0.75497f, group2.left + group2.width() * 0.57615f, group2.top + group2.height() * 0.66223f);
                    bezier2Path.cubicTo(group2.left + group2.width() * 0.61812f, group2.top + group2.height() * 0.61212f, group2.left + group2.width() * 0.67777f, group2.top + group2.height() * 0.60652f, group2.left + group2.width() * 0.71938f, group2.top + group2.height() * 0.63171f);
                    bezier2Path.cubicTo(group2.left + group2.width() * 0.7376f, group2.top + group2.height() * 0.64216f, group2.left + group2.width() * 0.76882f, group2.top + group2.height() * 0.68545f, group2.left + group2.width() * 0.77591f, group2.top + group2.height() * 0.69722f);
                    bezier2Path.cubicTo(group2.left + group2.width() * 0.78546f, group2.top + group2.height() * 0.67957f, group2.left + group2.width() * 0.81493f, group2.top + group2.height() * 0.62659f, group2.left + group2.width() * 0.8595f, group2.top + group2.height() * 0.62095f);
                    bezier2Path.cubicTo(group2.left + group2.width() * 0.91174f, group2.top + group2.height() * 0.6082f, group2.left + group2.width() * 0.94972f, group2.top + group2.height() * 0.63516f, group2.left + group2.width() * 0.9745f, group2.top + group2.height() * 0.66223f);
                    bezier2Path.cubicTo(group2.left + group2.width() * 1.05037f, group2.top + group2.height() * 0.77907f, group2.left + group2.width() * 0.93796f, group2.top + group2.height() * 0.86751f, group2.left + group2.width() * 0.88367f, group2.top + group2.height() * 0.91051f);
                    bezier2Path.cubicTo(group2.left + group2.width() * 0.81381f, group2.top + group2.height() * 0.96981f, group2.left + group2.width() * 0.77591f, group2.top + group2.height() * 1f, group2.left + group2.width() * 0.77591f, group2.top + group2.height() * 1f);
                    bezier2Path.cubicTo(group2.left + group2.width() * 0.77591f, group2.top + group2.height() * 1f, group2.left + group2.width() * 0.73063f, group2.top + group2.height() * 0.96816f, group2.left + group2.width() * 0.66794f, group2.top + group2.height() * 0.91382f);
                    bezier2Path.close();
                    
                    paint.reset();
                    paint.setFlags(Paint.ANTI_ALIAS_FLAG);
                    paint.setStyle(Paint.Style.FILL);
                    paint.setColor(StyleKit.rosso);
                    canvas.drawPath(bezier2Path, paint);
                    
                    paint.reset();
                    paint.setFlags(Paint.ANTI_ALIAS_FLAG);
                    paint.setStrokeWidth(2f);
                    paint.setStrokeCap(Paint.Cap.ROUND);
                    paint.setStrokeMiter(10f);
                    canvas.save();
                    paint.setStyle(Paint.Style.STROKE);
                    paint.setColor(StyleKit.rosso);
                    canvas.drawPath(bezier2Path, paint);
                    canvas.restore();
                }
                
                // Bezier 3
                if (highlited) {
                    RectF bezier3Rect = CacheForEvents.bezier3Rect;
                    bezier3Rect.set(group.left,
                        group.top,
                        group.left + (float) Math.floor(group.width() * 0.94147f) + 0.5f,
                        group.top + (float) Math.floor(group.height() * 0.99983f) + 0.5f);
                    Path bezier3Path = CacheForEvents.bezier3Path;
                    bezier3Path.reset();
                    bezier3Path.moveTo(group2.left + group2.width() * 0.69008f, group2.top + group2.height() * 0.18364f);
                    bezier3Path.lineTo(group2.left + group2.width() * 0.81747f, group2.top + group2.height() * 0.18364f);
                    bezier3Path.lineTo(group2.left + group2.width() * 0.81747f, group2.top);
                    bezier3Path.lineTo(group2.left + group2.width() * 0.69008f, group2.top);
                    bezier3Path.lineTo(group2.left + group2.width() * 0.69008f, group2.top + group2.height() * 0.18364f);
                    bezier3Path.close();
                    bezier3Path.moveTo(group2.left + group2.width() * 0.14863f, group2.top + group2.height() * 0.18364f);
                    bezier3Path.lineTo(group2.left + group2.width() * 0.26541f, group2.top + group2.height() * 0.18364f);
                    bezier3Path.lineTo(group2.left + group2.width() * 0.26541f, group2.top);
                    bezier3Path.lineTo(group2.left + group2.width() * 0.14863f, group2.top);
                    bezier3Path.lineTo(group2.left + group2.width() * 0.14863f, group2.top + group2.height() * 0.18364f);
                    bezier3Path.close();
                    bezier3Path.moveTo(group2.left + group2.width() * 0.01286f, group2.top + group2.height() * 0.24491f);
                    bezier3Path.cubicTo(group2.left + group2.width() * 0.08346f, group2.top + group2.height() * 0.24491f, group2.left + group2.width() * 0.94049f, group2.top + group2.height() * 0.24491f, group2.left + group2.width() * 0.94049f, group2.top + group2.height() * 0.24491f);
                    bezier3Path.lineTo(group2.left + group2.width() * 0.01286f, group2.top + group2.height() * 0.24491f);
                    bezier3Path.close();
                    bezier3Path.moveTo(group2.left + group2.width() * 0.32147f, group2.top + group2.height() * 0.37815f);
                    bezier3Path.cubicTo(group2.left + group2.width() * 0.32147f, group2.top + group2.height() * 0.88733f, group2.left + group2.width() * 0.32147f, group2.top + group2.height() * 0.87609f, group2.left + group2.width() * 0.32147f, group2.top + group2.height() * 0.87609f);
                    bezier3Path.lineTo(group2.left + group2.width() * 0.32147f, group2.top + group2.height() * 0.37815f);
                    bezier3Path.close();
                    bezier3Path.moveTo(group2.left + group2.width() * 0.48761f, group2.top + group2.height() * 0.37815f);
                    bezier3Path.cubicTo(group2.left + group2.width() * 0.48761f, group2.top + group2.height() * 0.8875f, group2.left + group2.width() * 0.48761f, group2.top + group2.height() * 0.87609f, group2.left + group2.width() * 0.48761f, group2.top + group2.height() * 0.87609f);
                    bezier3Path.lineTo(group2.left + group2.width() * 0.48761f, group2.top + group2.height() * 0.37815f);
                    bezier3Path.close();
                    bezier3Path.moveTo(group2.left + group2.width() * 0.65375f, group2.top + group2.height() * 0.37815f);
                    bezier3Path.lineTo(group2.left + group2.width() * 0.65375f, group2.top + group2.height() * 0.55234f);
                    bezier3Path.lineTo(group2.left + group2.width() * 0.65375f, group2.top + group2.height() * 0.37815f);
                    bezier3Path.close();
                    bezier3Path.moveTo(group2.left + group2.width() * 0.14148f, group2.top + group2.height() * 0.53894f);
                    bezier3Path.cubicTo(group2.left + group2.width() * 0.82116f, group2.top + group2.height() * 0.53894f, group2.left + group2.width() * 0.81503f, group2.top + group2.height() * 0.53774f, group2.left + group2.width() * 0.81503f, group2.top + group2.height() * 0.53774f);
                    bezier3Path.lineTo(group2.left + group2.width() * 0.14148f, group2.top + group2.height() * 0.53894f);
                    bezier3Path.close();
                    bezier3Path.moveTo(group2.left + group2.width() * 0.15532f, group2.top + group2.height() * 0.69974f);
                    bezier3Path.cubicTo(group2.left + group2.width() * 0.14148f, group2.top + group2.height() * 0.69974f, group2.left + group2.width() * 0.48761f, group2.top + group2.height() * 0.69974f, group2.left + group2.width() * 0.48761f, group2.top + group2.height() * 0.69974f);
                    bezier3Path.lineTo(group2.left + group2.width() * 0.15532f, group2.top + group2.height() * 0.69974f);
                    bezier3Path.close();
                    bezier3Path.moveTo(group2.left + group2.width() * 0.94147f, group2.top + group2.height() * 0.54045f);
                    bezier3Path.lineTo(group2.left + group2.width() * 0.9358f, group2.top + group2.height() * 0.08432f);
                    bezier3Path.lineTo(group2.left + group2.width() * 0.81217f, group2.top + group2.height() * 0.08672f);
                    bezier3Path.moveTo(group2.left + group2.width() * 0.14863f, group2.top + group2.height() * 0.08162f);
                    bezier3Path.lineTo(group2.left, group2.top + group2.height() * 0.08107f);
                    bezier3Path.lineTo(group2.left, group2.top + group2.height() * 0.99983f);
                    bezier3Path.lineTo(group2.left + group2.width() * 0.48458f, group2.top + group2.height() * 0.99983f);
                    bezier3Path.moveTo(group2.left + group2.width() * 0.68477f, group2.top + group2.height() * 0.07652f);
                    bezier3Path.lineTo(group2.left + group2.width() * 0.2784f, group2.top + group2.height() * 0.07864f);
                    bezier3Path.moveTo(group2.left + group2.width() * 0.81503f, group2.top + group2.height() * 0.53774f);
                    bezier3Path.lineTo(group2.left + group2.width() * 0.81503f, group2.top + group2.height() * 0.38177f);
                    bezier3Path.lineTo(group2.left + group2.width() * 0.14148f, group2.top + group2.height() * 0.37815f);
                    bezier3Path.lineTo(group2.left + group2.width() * 0.14148f, group2.top + group2.height() * 0.8627f);
                    bezier3Path.lineTo(group2.left + group2.width() * 0.48761f, group2.top + group2.height() * 0.8627f);
                    
                    paint.reset();
                    paint.setFlags(Paint.ANTI_ALIAS_FLAG);
                    paint.setStrokeWidth(2f);
                    paint.setStrokeMiter(10f);
                    canvas.save();
                    paint.setStyle(Paint.Style.STROKE);
                    paint.setColor(StyleKit.oroScuro);
                    canvas.drawPath(bezier3Path, paint);
                    canvas.restore();
                }
            }
        }
    }
    
    private static class CacheForMic {
        private static Paint paint = new Paint();
        private static RectF bezier5Rect = new RectF();
        private static Path bezier5Path = new Path();
        private static RectF bezierRect = new RectF();
        private static Path bezierPath = new Path();
    }
    
    
    public static void drawMic(Canvas canvas, RectF frame, int color, boolean highlited) {
        // General Declarations
        Paint paint = CacheForMic.paint;
        
        // Bezier 5
        RectF bezier5Rect = CacheForMic.bezier5Rect;
        bezier5Rect.set(frame.left + 26.5f,
            frame.top + 2.5f,
            frame.left + 74.5f,
            frame.top + 96.5f);
        Path bezier5Path = CacheForMic.bezier5Path;
        bezier5Path.reset();
        bezier5Path.moveTo(frame.left + 68.05f, frame.top + 20.24f);
        bezier5Path.cubicTo(frame.left + 68.06f, frame.top + 20.24f, frame.left + 68.06f, frame.top + 20.44f, frame.left + 68.06f, frame.top + 20.83f);
        bezier5Path.cubicTo(frame.left + 68.06f, frame.top + 25.07f, frame.left + 68.06f, frame.top + 50.87f, frame.left + 68.06f, frame.top + 55.12f);
        bezier5Path.cubicTo(frame.left + 68.06f, frame.top + 55.5f, frame.left + 68.06f, frame.top + 55.71f, frame.left + 68.06f, frame.top + 55.71f);
        bezier5Path.cubicTo(frame.left + 67.75f, frame.top + 65.56f, frame.left + 60.01f, frame.top + 73.44f, frame.left + 50.5f, frame.top + 73.44f);
        bezier5Path.cubicTo(frame.left + 40.99f, frame.top + 73.44f, frame.left + 33.25f, frame.top + 65.56f, frame.left + 32.95f, frame.top + 55.71f);
        bezier5Path.cubicTo(frame.left + 32.94f, frame.top + 55.71f, frame.left + 32.94f, frame.top + 55.5f, frame.left + 32.94f, frame.top + 55.12f);
        bezier5Path.cubicTo(frame.left + 32.94f, frame.top + 50.87f, frame.left + 32.94f, frame.top + 25.07f, frame.left + 32.94f, frame.top + 20.83f);
        bezier5Path.cubicTo(frame.left + 32.94f, frame.top + 20.44f, frame.left + 32.94f, frame.top + 20.24f, frame.left + 32.94f, frame.top + 20.24f);
        bezier5Path.cubicTo(frame.left + 33.05f, frame.top + 16.77f, frame.left + 34.08f, frame.top + 13.54f, frame.left + 35.79f, frame.top + 10.82f);
        bezier5Path.cubicTo(frame.left + 38.92f, frame.top + 5.81f, frame.left + 44.34f, frame.top + 2.5f, frame.left + 50.5f, frame.top + 2.5f);
        bezier5Path.cubicTo(frame.left + 60.01f, frame.top + 2.5f, frame.left + 67.75f, frame.top + 10.39f, frame.left + 68.05f, frame.top + 20.24f);
        bezier5Path.close();
        bezier5Path.moveTo(frame.left + 74.5f, frame.top + 55.71f);
        bezier5Path.cubicTo(frame.left + 74.5f, frame.top + 69.09f, frame.left + 63.75f, frame.top + 79.95f, frame.left + 50.5f, frame.top + 79.95f);
        bezier5Path.cubicTo(frame.left + 37.25f, frame.top + 79.95f, frame.left + 26.5f, frame.top + 69.09f, frame.left + 26.5f, frame.top + 55.71f);
        bezier5Path.moveTo(frame.left + 51.09f, frame.top + 79.95f);
        bezier5Path.lineTo(frame.left + 51.09f, frame.top + 96.5f);
        bezier5Path.moveTo(frame.left + 39.38f, frame.top + 96.5f);
        bezier5Path.lineTo(frame.left + 62.79f, frame.top + 96.5f);
        bezier5Path.moveTo(frame.left + 68.65f, frame.top + 49.2f);
        bezier5Path.lineTo(frame.left + 55.77f, frame.top + 49.2f);
        bezier5Path.moveTo(frame.left + 68.65f, frame.top + 37.38f);
        bezier5Path.cubicTo(frame.left + 55.77f, frame.top + 37.38f, frame.left + 55.77f, frame.top + 37.38f, frame.left + 55.77f, frame.top + 37.38f);
        bezier5Path.moveTo(frame.left + 68.65f, frame.top + 25.56f);
        bezier5Path.cubicTo(frame.left + 55.72f, frame.top + 25.56f, frame.left + 55.77f, frame.top + 25.56f, frame.left + 55.77f, frame.top + 25.56f);
        
        paint.reset();
        paint.setFlags(Paint.ANTI_ALIAS_FLAG);
        paint.setStrokeWidth(2f);
        paint.setStrokeMiter(10f);
        canvas.save();
        paint.setStyle(Paint.Style.STROKE);
        paint.setColor(color);
        canvas.drawPath(bezier5Path, paint);
        canvas.restore();
        
        // Bezier
        if (highlited) {
            RectF bezierRect = CacheForMic.bezierRect;
            bezierRect.set(frame.left + 26.5f,
                frame.top + 2.5f,
                frame.left + 74.5f,
                frame.top + 96.5f);
            Path bezierPath = CacheForMic.bezierPath;
            bezierPath.reset();
            bezierPath.moveTo(frame.left + 68.05f, frame.top + 20.24f);
            bezierPath.cubicTo(frame.left + 68.06f, frame.top + 20.24f, frame.left + 68.06f, frame.top + 20.44f, frame.left + 68.06f, frame.top + 20.83f);
            bezierPath.cubicTo(frame.left + 68.06f, frame.top + 25.07f, frame.left + 68.06f, frame.top + 50.87f, frame.left + 68.06f, frame.top + 55.12f);
            bezierPath.cubicTo(frame.left + 68.06f, frame.top + 55.5f, frame.left + 68.06f, frame.top + 55.71f, frame.left + 68.06f, frame.top + 55.71f);
            bezierPath.cubicTo(frame.left + 67.75f, frame.top + 65.56f, frame.left + 60.01f, frame.top + 73.44f, frame.left + 50.5f, frame.top + 73.44f);
            bezierPath.cubicTo(frame.left + 40.99f, frame.top + 73.44f, frame.left + 33.25f, frame.top + 65.56f, frame.left + 32.95f, frame.top + 55.71f);
            bezierPath.cubicTo(frame.left + 32.94f, frame.top + 55.71f, frame.left + 32.94f, frame.top + 55.5f, frame.left + 32.94f, frame.top + 55.12f);
            bezierPath.cubicTo(frame.left + 32.94f, frame.top + 50.87f, frame.left + 32.94f, frame.top + 25.07f, frame.left + 32.94f, frame.top + 20.83f);
            bezierPath.cubicTo(frame.left + 32.94f, frame.top + 20.44f, frame.left + 32.94f, frame.top + 20.24f, frame.left + 32.94f, frame.top + 20.24f);
            bezierPath.cubicTo(frame.left + 33.05f, frame.top + 16.77f, frame.left + 34.08f, frame.top + 13.54f, frame.left + 35.79f, frame.top + 10.82f);
            bezierPath.cubicTo(frame.left + 38.92f, frame.top + 5.81f, frame.left + 44.34f, frame.top + 2.5f, frame.left + 50.5f, frame.top + 2.5f);
            bezierPath.cubicTo(frame.left + 60.01f, frame.top + 2.5f, frame.left + 67.75f, frame.top + 10.39f, frame.left + 68.05f, frame.top + 20.24f);
            bezierPath.close();
            bezierPath.moveTo(frame.left + 74.5f, frame.top + 55.71f);
            bezierPath.cubicTo(frame.left + 74.5f, frame.top + 69.09f, frame.left + 63.75f, frame.top + 79.95f, frame.left + 50.5f, frame.top + 79.95f);
            bezierPath.cubicTo(frame.left + 37.25f, frame.top + 79.95f, frame.left + 26.5f, frame.top + 69.09f, frame.left + 26.5f, frame.top + 55.71f);
            bezierPath.moveTo(frame.left + 51.09f, frame.top + 79.95f);
            bezierPath.lineTo(frame.left + 51.09f, frame.top + 96.5f);
            bezierPath.moveTo(frame.left + 39.38f, frame.top + 96.5f);
            bezierPath.lineTo(frame.left + 62.79f, frame.top + 96.5f);
            bezierPath.moveTo(frame.left + 68.65f, frame.top + 49.2f);
            bezierPath.lineTo(frame.left + 55.77f, frame.top + 49.2f);
            bezierPath.moveTo(frame.left + 68.65f, frame.top + 37.38f);
            bezierPath.cubicTo(frame.left + 55.77f, frame.top + 37.38f, frame.left + 55.77f, frame.top + 37.38f, frame.left + 55.77f, frame.top + 37.38f);
            bezierPath.moveTo(frame.left + 68.65f, frame.top + 25.56f);
            bezierPath.cubicTo(frame.left + 55.72f, frame.top + 25.56f, frame.left + 55.77f, frame.top + 25.56f, frame.left + 55.77f, frame.top + 25.56f);
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStrokeWidth(2f);
            paint.setStrokeMiter(10f);
            canvas.save();
            paint.setStyle(Paint.Style.STROKE);
            paint.setColor(Color.RED);
            canvas.drawPath(bezierPath, paint);
            canvas.restore();
        }
    }
    
    private static class CacheForPercentuale {
        private static Paint paint = new Paint();
        private static RectF livello_12 = new RectF();
        private static RectF bezierRect = new RectF();
        private static Path bezierPath = new Path();
        private static RectF bezier2Rect = new RectF();
        private static Path bezier2Path = new Path();
        private static RectF bezier3Rect = new RectF();
        private static Path bezier3Path = new Path();
    }
    
    
    public static void drawPercentuale(Canvas canvas, RectF frame, int color) {
        // General Declarations
        Paint paint = CacheForPercentuale.paint;
        
        // Livello_1-2
        {
            RectF livello_12 = CacheForPercentuale.livello_12;
            livello_12.set(frame.left + 5f,
                frame.top + 5f,
                frame.right - 5f,
                frame.bottom - 5f);
            
            // Bezier
            RectF bezierRect = CacheForPercentuale.bezierRect;
            bezierRect.set(livello_12.left + (float) Math.floor(livello_12.width() * 0.0075f - 0.18f) + 0.68f,
                livello_12.top + (float) Math.floor(livello_12.height() * 0.0075f - 0.18f) + 0.67f,
                livello_12.left + (float) Math.floor(livello_12.width() * 0.99208f + 0.21f) + 0.29f,
                livello_12.top + (float) Math.floor(livello_12.height() * 0.9925f + 0.18f) + 0.33f);
            Path bezierPath = CacheForPercentuale.bezierPath;
            bezierPath.reset();
            bezierPath.moveTo(livello_12.left + livello_12.width() * 0.0075f, livello_12.top + livello_12.height() * 0.955f);
            bezierPath.lineTo(livello_12.left + livello_12.width() * 0.955f, livello_12.top + livello_12.height() * 0.0075f);
            bezierPath.lineTo(livello_12.left + livello_12.width() * 0.99208f, livello_12.top + livello_12.height() * 0.04458f);
            bezierPath.lineTo(livello_12.left + livello_12.width() * 0.045f, livello_12.top + livello_12.height() * 0.9925f);
            bezierPath.lineTo(livello_12.left + livello_12.width() * 0.0075f, livello_12.top + livello_12.height() * 0.955f);
            bezierPath.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(color);
            canvas.drawPath(bezierPath, paint);
            
            // Bezier 2
            RectF bezier2Rect = CacheForPercentuale.bezier2Rect;
            bezier2Rect.set(livello_12.left,
                livello_12.top,
                livello_12.left + (float) Math.floor(livello_12.width() * 0.31583f + 0.07f) + 0.43f,
                livello_12.top + (float) Math.floor(livello_12.height() * 0.31583f + 0.07f) + 0.43f);
            Path bezier2Path = CacheForPercentuale.bezier2Path;
            bezier2Path.reset();
            bezier2Path.moveTo(livello_12.left + livello_12.width() * 0.15792f, livello_12.top + livello_12.height() * 0.31583f);
            bezier2Path.lineTo(livello_12.left + livello_12.width() * 0.15792f, livello_12.top + livello_12.height() * 0.31583f);
            bezier2Path.cubicTo(livello_12.left + livello_12.width() * 0.24513f, livello_12.top + livello_12.height() * 0.31583f, livello_12.left + livello_12.width() * 0.31583f, livello_12.top + livello_12.height() * 0.24513f, livello_12.left + livello_12.width() * 0.31583f, livello_12.top + livello_12.height() * 0.15792f);
            bezier2Path.cubicTo(livello_12.left + livello_12.width() * 0.31583f, livello_12.top + livello_12.height() * 0.0707f, livello_12.left + livello_12.width() * 0.24513f, livello_12.top, livello_12.left + livello_12.width() * 0.15792f, livello_12.top);
            bezier2Path.cubicTo(livello_12.left + livello_12.width() * 0.0707f, livello_12.top, livello_12.left + livello_12.width() * 0f, livello_12.top + livello_12.height() * 0.0707f, livello_12.left + livello_12.width() * 0f, livello_12.top + livello_12.height() * 0.15792f);
            bezier2Path.lineTo(livello_12.left, livello_12.top + livello_12.height() * 0.1575f);
            bezier2Path.cubicTo(livello_12.left, livello_12.top + livello_12.height() * 0.24495f, livello_12.left + livello_12.width() * 0.07089f, livello_12.top + livello_12.height() * 0.31583f, livello_12.left + livello_12.width() * 0.15833f, livello_12.top + livello_12.height() * 0.31583f);
            bezier2Path.lineTo(livello_12.left + livello_12.width() * 0.15792f, livello_12.top + livello_12.height() * 0.31583f);
            bezier2Path.close();
            bezier2Path.moveTo(livello_12.left + livello_12.width() * 0.15792f, livello_12.top + livello_12.height() * 0.0525f);
            bezier2Path.lineTo(livello_12.left + livello_12.width() * 0.15792f, livello_12.top + livello_12.height() * 0.0525f);
            bezier2Path.cubicTo(livello_12.left + livello_12.width() * 0.21614f, livello_12.top + livello_12.height() * 0.0525f, livello_12.left + livello_12.width() * 0.26333f, livello_12.top + livello_12.height() * 0.0997f, livello_12.left + livello_12.width() * 0.26333f, livello_12.top + livello_12.height() * 0.15792f);
            bezier2Path.cubicTo(livello_12.left + livello_12.width() * 0.26333f, livello_12.top + livello_12.height() * 0.21614f, livello_12.left + livello_12.width() * 0.21614f, livello_12.top + livello_12.height() * 0.26333f, livello_12.left + livello_12.width() * 0.15792f, livello_12.top + livello_12.height() * 0.26333f);
            bezier2Path.cubicTo(livello_12.left + livello_12.width() * 0.0997f, livello_12.top + livello_12.height() * 0.26333f, livello_12.left + livello_12.width() * 0.0525f, livello_12.top + livello_12.height() * 0.21614f, livello_12.left + livello_12.width() * 0.0525f, livello_12.top + livello_12.height() * 0.15792f);
            bezier2Path.lineTo(livello_12.left + livello_12.width() * 0.0525f, livello_12.top + livello_12.height() * 0.15792f);
            bezier2Path.cubicTo(livello_12.left + livello_12.width() * 0.0525f, livello_12.top + livello_12.height() * 0.0997f, livello_12.left + livello_12.width() * 0.0997f, livello_12.top + livello_12.height() * 0.0525f, livello_12.left + livello_12.width() * 0.15792f, livello_12.top + livello_12.height() * 0.0525f);
            bezier2Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(color);
            canvas.drawPath(bezier2Path, paint);
            
            // Bezier 3
            RectF bezier3Rect = CacheForPercentuale.bezier3Rect;
            bezier3Rect.set(livello_12.left + (float) Math.floor(livello_12.width() * 0.68417f - 0.08f) + 0.58f,
                livello_12.top + (float) Math.floor(livello_12.height() * 0.68417f - 0.08f) + 0.57f,
                livello_12.left + (float) Math.floor(livello_12.width() * 1f + 0.5f) + 0f,
                livello_12.top + (float) Math.floor(livello_12.height() + 0.5f));
            Path bezier3Path = CacheForPercentuale.bezier3Path;
            bezier3Path.reset();
            bezier3Path.moveTo(livello_12.left + livello_12.width() * 0.84208f, livello_12.top + livello_12.height() * 0.68417f);
            bezier3Path.lineTo(livello_12.left + livello_12.width() * 0.84208f, livello_12.top + livello_12.height() * 0.68417f);
            bezier3Path.cubicTo(livello_12.left + livello_12.width() * 0.75487f, livello_12.top + livello_12.height() * 0.68417f, livello_12.left + livello_12.width() * 0.68417f, livello_12.top + livello_12.height() * 0.75487f, livello_12.left + livello_12.width() * 0.68417f, livello_12.top + livello_12.height() * 0.84208f);
            bezier3Path.cubicTo(livello_12.left + livello_12.width() * 0.68417f, livello_12.top + livello_12.height() * 0.9293f, livello_12.left + livello_12.width() * 0.75487f, livello_12.top + livello_12.height(), livello_12.left + livello_12.width() * 0.84208f, livello_12.top + livello_12.height());
            bezier3Path.cubicTo(livello_12.left + livello_12.width() * 0.9293f, livello_12.top + livello_12.height(), livello_12.left + livello_12.width() * 1f, livello_12.top + livello_12.height() * 0.9293f, livello_12.left + livello_12.width() * 1f, livello_12.top + livello_12.height() * 0.84208f);
            bezier3Path.lineTo(livello_12.left + livello_12.width() * 1f, livello_12.top + livello_12.height() * 0.84208f);
            bezier3Path.cubicTo(livello_12.left + livello_12.width() * 1f, livello_12.top + livello_12.height() * 0.75487f, livello_12.left + livello_12.width() * 0.9293f, livello_12.top + livello_12.height() * 0.68417f, livello_12.left + livello_12.width() * 0.84208f, livello_12.top + livello_12.height() * 0.68417f);
            bezier3Path.close();
            bezier3Path.moveTo(livello_12.left + livello_12.width() * 0.84208f, livello_12.top + livello_12.height() * 0.9475f);
            bezier3Path.lineTo(livello_12.left + livello_12.width() * 0.84208f, livello_12.top + livello_12.height() * 0.9475f);
            bezier3Path.cubicTo(livello_12.left + livello_12.width() * 0.78386f, livello_12.top + livello_12.height() * 0.9475f, livello_12.left + livello_12.width() * 0.73667f, livello_12.top + livello_12.height() * 0.9003f, livello_12.left + livello_12.width() * 0.73667f, livello_12.top + livello_12.height() * 0.84208f);
            bezier3Path.cubicTo(livello_12.left + livello_12.width() * 0.73667f, livello_12.top + livello_12.height() * 0.78386f, livello_12.left + livello_12.width() * 0.78386f, livello_12.top + livello_12.height() * 0.73667f, livello_12.left + livello_12.width() * 0.84208f, livello_12.top + livello_12.height() * 0.73667f);
            bezier3Path.cubicTo(livello_12.left + livello_12.width() * 0.9003f, livello_12.top + livello_12.height() * 0.73667f, livello_12.left + livello_12.width() * 0.9475f, livello_12.top + livello_12.height() * 0.78386f, livello_12.left + livello_12.width() * 0.9475f, livello_12.top + livello_12.height() * 0.84208f);
            bezier3Path.lineTo(livello_12.left + livello_12.width() * 0.9475f, livello_12.top + livello_12.height() * 0.84208f);
            bezier3Path.cubicTo(livello_12.left + livello_12.width() * 0.9475f, livello_12.top + livello_12.height() * 0.9003f, livello_12.left + livello_12.width() * 0.9003f, livello_12.top + livello_12.height() * 0.9475f, livello_12.left + livello_12.width() * 0.84208f, livello_12.top + livello_12.height() * 0.9475f);
            bezier3Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(color);
            canvas.drawPath(bezier3Path, paint);
        }
    }
    
    private static class CacheForSpeaking {
        private static Paint paint = new Paint();
        private static RectF bezier5Rect = new RectF();
        private static Path bezier5Path = new Path();
    }
    
    
    public static void drawSpeaking(Canvas canvas, RectF frame, int color) {
        // General Declarations
        Paint paint = CacheForSpeaking.paint;
        
        // Bezier 5
        RectF bezier5Rect = CacheForSpeaking.bezier5Rect;
        bezier5Rect.set(frame.left + 53.5f,
            frame.top + 7.5f,
            frame.left + 146f,
            frame.top + 188f);
        Path bezier5Path = CacheForSpeaking.bezier5Path;
        bezier5Path.reset();
        bezier5Path.moveTo(frame.left + frame.width() * 0.66787f, frame.top + frame.height() * 0.20778f);
        bezier5Path.cubicTo(frame.left + frame.width() * 0.66796f, frame.top + frame.height() * 0.2078f, frame.left + frame.width() * 0.66796f, frame.top + frame.height() * 0.20978f, frame.left + frame.width() * 0.66796f, frame.top + frame.height() * 0.21346f);
        bezier5Path.cubicTo(frame.left + frame.width() * 0.66796f, frame.top + frame.height() * 0.25418f, frame.left + frame.width() * 0.66796f, frame.top + frame.height() * 0.50191f, frame.left + frame.width() * 0.66796f, frame.top + frame.height() * 0.54267f);
        bezier5Path.cubicTo(frame.left + frame.width() * 0.66796f, frame.top + frame.height() * 0.54636f, frame.left + frame.width() * 0.66796f, frame.top + frame.height() * 0.54835f, frame.left + frame.width() * 0.66796f, frame.top + frame.height() * 0.54835f);
        bezier5Path.cubicTo(frame.left + frame.width() * 0.66499f, frame.top + frame.height() * 0.6429f, frame.left + frame.width() * 0.59037f, frame.top + frame.height() * 0.71863f, frame.left + frame.width() * 0.49875f, frame.top + frame.height() * 0.71863f);
        bezier5Path.cubicTo(frame.left + frame.width() * 0.40713f, frame.top + frame.height() * 0.71863f, frame.left + frame.width() * 0.33251f, frame.top + frame.height() * 0.6429f, frame.left + frame.width() * 0.32963f, frame.top + frame.height() * 0.54835f);
        bezier5Path.cubicTo(frame.left + frame.width() * 0.32954f, frame.top + frame.height() * 0.54835f, frame.left + frame.width() * 0.32954f, frame.top + frame.height() * 0.54636f, frame.left + frame.width() * 0.32954f, frame.top + frame.height() * 0.54267f);
        bezier5Path.cubicTo(frame.left + frame.width() * 0.32954f, frame.top + frame.height() * 0.50191f, frame.left + frame.width() * 0.32954f, frame.top + frame.height() * 0.25422f, frame.left + frame.width() * 0.32954f, frame.top + frame.height() * 0.21346f);
        bezier5Path.cubicTo(frame.left + frame.width() * 0.32954f, frame.top + frame.height() * 0.20978f, frame.left + frame.width() * 0.32954f, frame.top + frame.height() * 0.20778f, frame.left + frame.width() * 0.32954f, frame.top + frame.height() * 0.20778f);
        bezier5Path.cubicTo(frame.left + frame.width() * 0.33064f, frame.top + frame.height() * 0.17449f, frame.left + frame.width() * 0.34055f, frame.top + frame.height() * 0.14352f, frame.left + frame.width() * 0.35697f, frame.top + frame.height() * 0.11738f);
        bezier5Path.cubicTo(frame.left + frame.width() * 0.38717f, frame.top + frame.height() * 0.06928f, frame.left + frame.width() * 0.43939f, frame.top + frame.height() * 0.0375f, frame.left + frame.width() * 0.49875f, frame.top + frame.height() * 0.0375f);
        bezier5Path.cubicTo(frame.left + frame.width() * 0.59037f, frame.top + frame.height() * 0.0375f, frame.left + frame.width() * 0.66499f, frame.top + frame.height() * 0.11323f, frame.left + frame.width() * 0.66787f, frame.top + frame.height() * 0.20778f);
        bezier5Path.close();
        bezier5Path.moveTo(frame.left + frame.width() * 0.73f, frame.top + frame.height() * 0.54835f);
        bezier5Path.cubicTo(frame.left + frame.width() * 0.73f, frame.top + frame.height() * 0.67688f, frame.left + frame.width() * 0.62647f, frame.top + frame.height() * 0.78107f, frame.left + frame.width() * 0.49875f, frame.top + frame.height() * 0.78107f);
        bezier5Path.cubicTo(frame.left + frame.width() * 0.37103f, frame.top + frame.height() * 0.78107f, frame.left + frame.width() * 0.2675f, frame.top + frame.height() * 0.67688f, frame.left + frame.width() * 0.2675f, frame.top + frame.height() * 0.54835f);
        bezier5Path.moveTo(frame.left + frame.width() * 0.50439f, frame.top + frame.height() * 0.78107f);
        bezier5Path.lineTo(frame.left + frame.width() * 0.50439f, frame.top + frame.height() * 0.94f);
        bezier5Path.moveTo(frame.left + frame.width() * 0.39159f, frame.top + frame.height() * 0.94f);
        bezier5Path.lineTo(frame.left + frame.width() * 0.6172f, frame.top + frame.height() * 0.94f);
        bezier5Path.moveTo(frame.left + frame.width() * 0.6736f, frame.top + frame.height() * 0.48591f);
        bezier5Path.lineTo(frame.left + frame.width() * 0.54951f, frame.top + frame.height() * 0.48591f);
        bezier5Path.moveTo(frame.left + frame.width() * 0.6736f, frame.top + frame.height() * 0.37239f);
        bezier5Path.cubicTo(frame.left + frame.width() * 0.54951f, frame.top + frame.height() * 0.37239f, frame.left + frame.width() * 0.54951f, frame.top + frame.height() * 0.37239f, frame.left + frame.width() * 0.54951f, frame.top + frame.height() * 0.37239f);
        bezier5Path.moveTo(frame.left + frame.width() * 0.6736f, frame.top + frame.height() * 0.25887f);
        bezier5Path.cubicTo(frame.left + frame.width() * 0.549f, frame.top + frame.height() * 0.25887f, frame.left + frame.width() * 0.54951f, frame.top + frame.height() * 0.25887f, frame.left + frame.width() * 0.54951f, frame.top + frame.height() * 0.25887f);
        
        paint.reset();
        paint.setFlags(Paint.ANTI_ALIAS_FLAG);
        paint.setStrokeWidth(1f);
        paint.setStrokeMiter(10f);
        canvas.save();
        paint.setStyle(Paint.Style.STROKE);
        paint.setColor(color);
        canvas.drawPath(bezier5Path, paint);
        canvas.restore();
    }
    
    private static class CacheForSpeak_acceso {
        private static Paint paint = new Paint();
        private static RectF bezier5Rect = new RectF();
        private static Path bezier5Path = new Path();
        private static RectF bezierRect = new RectF();
        private static Path bezierPath = new Path();
    }
    
    
    public static void drawSpeak_acceso(Canvas canvas, RectF frame) {
        // General Declarations
        Paint paint = CacheForSpeak_acceso.paint;
        
        // Bezier 5
        RectF bezier5Rect = CacheForSpeak_acceso.bezier5Rect;
        bezier5Rect.set(frame.left + 53.5f,
            frame.top + 109.67f,
            frame.left + 146f,
            frame.top + 188f);
        Path bezier5Path = CacheForSpeak_acceso.bezier5Path;
        bezier5Path.reset();
        bezier5Path.moveTo(frame.left + frame.width() * 0.73f, frame.top + frame.height() * 0.54835f);
        bezier5Path.cubicTo(frame.left + frame.width() * 0.73f, frame.top + frame.height() * 0.63896f, frame.left + 135.71f, frame.top + 143.49f, frame.left + 120.69f, frame.top + 151.18f);
        bezier5Path.cubicTo(frame.left + 114.4f, frame.top + 154.4f, frame.left + frame.width() * 0.53643f, frame.top + frame.height() * 0.78107f, frame.left + frame.width() * 0.49875f, frame.top + frame.height() * 0.78107f);
        bezier5Path.cubicTo(frame.left + frame.width() * 0.37103f, frame.top + frame.height() * 0.78107f, frame.left + frame.width() * 0.2675f, frame.top + frame.height() * 0.67688f, frame.left + frame.width() * 0.2675f, frame.top + frame.height() * 0.54835f);
        bezier5Path.moveTo(frame.left + frame.width() * 0.50439f, frame.top + frame.height() * 0.78107f);
        bezier5Path.lineTo(frame.left + frame.width() * 0.50439f, frame.top + frame.height() * 0.94f);
        bezier5Path.moveTo(frame.left + frame.width() * 0.39159f, frame.top + frame.height() * 0.94f);
        bezier5Path.lineTo(frame.left + frame.width() * 0.6172f, frame.top + frame.height() * 0.94f);
        
        paint.reset();
        paint.setFlags(Paint.ANTI_ALIAS_FLAG);
        paint.setStrokeWidth(2f);
        paint.setStrokeMiter(10f);
        canvas.save();
        paint.setStyle(Paint.Style.STROKE);
        paint.setColor(StyleKit.rosso);
        canvas.drawPath(bezier5Path, paint);
        canvas.restore();
        
        // Bezier
        RectF bezierRect = CacheForSpeak_acceso.bezierRect;
        bezierRect.set(frame.left + 65.91f,
            frame.top + 7.5f,
            frame.left + 134.72f,
            frame.top + 143.73f);
        Path bezierPath = CacheForSpeak_acceso.bezierPath;
        bezierPath.reset();
        bezierPath.moveTo(frame.left + frame.width() * 0.66787f, frame.top + frame.height() * 0.20778f);
        bezierPath.cubicTo(frame.left + frame.width() * 0.66796f, frame.top + frame.height() * 0.2078f, frame.left + frame.width() * 0.66796f, frame.top + frame.height() * 0.20978f, frame.left + frame.width() * 0.66796f, frame.top + frame.height() * 0.21346f);
        bezierPath.cubicTo(frame.left + frame.width() * 0.66796f, frame.top + frame.height() * 0.25418f, frame.left + frame.width() * 0.66796f, frame.top + frame.height() * 0.50191f, frame.left + frame.width() * 0.66796f, frame.top + frame.height() * 0.54267f);
        bezierPath.cubicTo(frame.left + frame.width() * 0.66796f, frame.top + frame.height() * 0.54636f, frame.left + frame.width() * 0.66796f, frame.top + frame.height() * 0.54835f, frame.left + frame.width() * 0.66796f, frame.top + frame.height() * 0.54835f);
        bezierPath.cubicTo(frame.left + frame.width() * 0.66499f, frame.top + frame.height() * 0.6429f, frame.left + frame.width() * 0.59037f, frame.top + frame.height() * 0.71863f, frame.left + frame.width() * 0.49875f, frame.top + frame.height() * 0.71863f);
        bezierPath.cubicTo(frame.left + frame.width() * 0.40713f, frame.top + frame.height() * 0.71863f, frame.left + frame.width() * 0.33251f, frame.top + frame.height() * 0.6429f, frame.left + frame.width() * 0.32963f, frame.top + frame.height() * 0.54835f);
        bezierPath.cubicTo(frame.left + frame.width() * 0.32954f, frame.top + frame.height() * 0.54835f, frame.left + frame.width() * 0.32954f, frame.top + frame.height() * 0.54636f, frame.left + frame.width() * 0.32954f, frame.top + frame.height() * 0.54267f);
        bezierPath.cubicTo(frame.left + frame.width() * 0.32954f, frame.top + frame.height() * 0.50191f, frame.left + frame.width() * 0.32954f, frame.top + frame.height() * 0.25422f, frame.left + frame.width() * 0.32954f, frame.top + frame.height() * 0.21346f);
        bezierPath.cubicTo(frame.left + frame.width() * 0.32954f, frame.top + frame.height() * 0.20978f, frame.left + frame.width() * 0.32954f, frame.top + frame.height() * 0.20778f, frame.left + frame.width() * 0.32954f, frame.top + frame.height() * 0.20778f);
        bezierPath.cubicTo(frame.left + frame.width() * 0.33064f, frame.top + frame.height() * 0.17449f, frame.left + frame.width() * 0.34055f, frame.top + frame.height() * 0.14352f, frame.left + frame.width() * 0.35697f, frame.top + frame.height() * 0.11738f);
        bezierPath.cubicTo(frame.left + frame.width() * 0.38717f, frame.top + frame.height() * 0.06928f, frame.left + frame.width() * 0.43939f, frame.top + frame.height() * 0.0375f, frame.left + frame.width() * 0.49875f, frame.top + frame.height() * 0.0375f);
        bezierPath.cubicTo(frame.left + frame.width() * 0.59037f, frame.top + frame.height() * 0.0375f, frame.left + frame.width() * 0.66499f, frame.top + frame.height() * 0.11323f, frame.left + frame.width() * 0.66787f, frame.top + frame.height() * 0.20778f);
        bezierPath.close();
        bezierPath.moveTo(frame.left + frame.width() * 0.6736f, frame.top + frame.height() * 0.48591f);
        bezierPath.lineTo(frame.left + frame.width() * 0.54951f, frame.top + frame.height() * 0.48591f);
        bezierPath.moveTo(frame.left + frame.width() * 0.6736f, frame.top + frame.height() * 0.37239f);
        bezierPath.cubicTo(frame.left + frame.width() * 0.54951f, frame.top + frame.height() * 0.37239f, frame.left + frame.width() * 0.54951f, frame.top + frame.height() * 0.37239f, frame.left + frame.width() * 0.54951f, frame.top + frame.height() * 0.37239f);
        bezierPath.moveTo(frame.left + frame.width() * 0.6736f, frame.top + frame.height() * 0.25887f);
        bezierPath.cubicTo(frame.left + frame.width() * 0.549f, frame.top + frame.height() * 0.25887f, frame.left + frame.width() * 0.54951f, frame.top + frame.height() * 0.25887f, frame.left + frame.width() * 0.54951f, frame.top + frame.height() * 0.25887f);
        
        paint.reset();
        paint.setFlags(Paint.ANTI_ALIAS_FLAG);
        paint.setStyle(Paint.Style.FILL);
        paint.setColor(StyleKit.rosso);
        canvas.drawPath(bezierPath, paint);
        
        paint.reset();
        paint.setFlags(Paint.ANTI_ALIAS_FLAG);
        paint.setStrokeWidth(1f);
        paint.setStrokeMiter(10f);
        canvas.save();
        paint.setStyle(Paint.Style.STROKE);
        paint.setColor(StyleKit.rosso);
        canvas.drawPath(bezierPath, paint);
        canvas.restore();
    }
    
    private static class CacheForGiochi {
        private static Paint paint = new Paint();
        private static RectF group = new RectF();
        private static RectF bezier20Rect = new RectF();
        private static Path bezier20Path = new Path();
        private static RectF bezier5Rect = new RectF();
        private static Path bezier5Path = new Path();
        private static RectF bezier6Rect = new RectF();
        private static Path bezier6Path = new Path();
    }
    
    
    public static void drawGiochi(Canvas canvas, RectF frame, boolean highlited) {
        // General Declarations
        Paint paint = CacheForGiochi.paint;
        
        // Group
        {
            RectF group = CacheForGiochi.group;
            group.set(frame.left + 2f,
                frame.top + 4f,
                frame.right,
                frame.bottom);
            
            // Bezier 20
            RectF bezier20Rect = CacheForGiochi.bezier20Rect;
            bezier20Rect.set(group.left,
                group.top + (float) Math.floor(group.height() * 0.06633f + 0.5f),
                group.left + (float) Math.floor(group.width() * 0.9899f + 0.5f),
                group.top + (float) Math.floor(group.height() * 0.91327f + 0.5f));
            Path bezier20Path = CacheForGiochi.bezier20Path;
            bezier20Path.reset();
            bezier20Path.moveTo(group.left + group.width() * 0.08065f, group.top + group.height() * 0.31817f);
            bezier20Path.lineTo(group.left + group.width() * 0.07977f, group.top + group.height() * 0.31508f);
            bezier20Path.cubicTo(group.left + group.width() * 0.08467f, group.top + group.height() * 0.31284f, group.left + group.width() * 0.08481f, group.top + group.height() * 0.31166f, group.left + group.width() * 0.08229f, group.top + group.height() * 0.30816f);
            bezier20Path.cubicTo(group.left + group.width() * 0.08071f, group.top + group.height() * 0.3058f, group.left + group.width() * 0.07832f, group.top + group.height() * 0.30238f, group.left + group.width() * 0.07603f, group.top + group.height() * 0.29927f);
            bezier20Path.lineTo(group.left + group.width() * 0.05934f, group.top + group.height() * 0.30412f);
            bezier20Path.cubicTo(group.left + group.width() * 0.05913f, group.top + group.height() * 0.30708f, group.left + group.width() * 0.05891f, group.top + group.height() * 0.31056f, group.left + group.width() * 0.05886f, group.top + group.height() * 0.31439f);
            bezier20Path.cubicTo(group.left + group.width() * 0.05875f, group.top + group.height() * 0.319f, group.left + group.width() * 0.05936f, group.top + group.height() * 0.32012f, group.left + group.width() * 0.06594f, group.top + group.height() * 0.31908f);
            bezier20Path.lineTo(group.left + group.width() * 0.06682f, group.top + group.height() * 0.32216f);
            bezier20Path.lineTo(group.left + group.width() * 0.04733f, group.top + group.height() * 0.32782f);
            bezier20Path.lineTo(group.left + group.width() * 0.04645f, group.top + group.height() * 0.32472f);
            bezier20Path.cubicTo(group.left + group.width() * 0.05198f, group.top + group.height() * 0.32235f, group.left + group.width() * 0.05286f, group.top + group.height() * 0.32106f, group.left + group.width() * 0.05363f, group.top + group.height() * 0.31286f);
            bezier20Path.lineTo(group.left + group.width() * 0.05864f, group.top + group.height() * 0.2626f);
            bezier20Path.lineTo(group.left + group.width() * 0.06277f, group.top + group.height() * 0.26012f);
            bezier20Path.cubicTo(group.left + group.width() * 0.07268f, group.top + group.height() * 0.27388f, group.left + group.width() * 0.08242f, group.top + group.height() * 0.28763f, group.left + group.width() * 0.09234f, group.top + group.height() * 0.3011f);
            bezier20Path.cubicTo(group.left + group.width() * 0.09748f, group.top + group.height() * 0.30793f, group.left + group.width() * 0.09887f, group.top + group.height() * 0.30881f, group.left + group.width() * 0.10464f, group.top + group.height() * 0.30788f);
            bezier20Path.lineTo(group.left + group.width() * 0.10551f, group.top + group.height() * 0.31095f);
            bezier20Path.lineTo(group.left + group.width() * 0.08065f, group.top + group.height() * 0.31817f);
            bezier20Path.close();
            bezier20Path.moveTo(group.left + group.width() * 0.06119f, group.top + group.height() * 0.27789f);
            bezier20Path.lineTo(group.left + group.width() * 0.06094f, group.top + group.height() * 0.27799f);
            bezier20Path.cubicTo(group.left + group.width() * 0.06034f, group.top + group.height() * 0.2851f, group.left + group.width() * 0.05998f, group.top + group.height() * 0.29212f, group.left + group.width() * 0.05945f, group.top + group.height() * 0.29901f);
            bezier20Path.lineTo(group.left + group.width() * 0.07305f, group.top + group.height() * 0.29506f);
            bezier20Path.lineTo(group.left + group.width() * 0.06119f, group.top + group.height() * 0.27789f);
            bezier20Path.close();
            bezier20Path.moveTo(group.left + group.width() * 0.21375f, group.top + group.height() * 0.2383f);
            bezier20Path.lineTo(group.left + group.width() * 0.21352f, group.top + group.height() * 0.23509f);
            bezier20Path.cubicTo(group.left + group.width() * 0.21878f, group.top + group.height() * 0.23392f, group.left + group.width() * 0.21916f, group.top + group.height() * 0.2328f, group.left + group.width() * 0.21743f, group.top + group.height() * 0.22885f);
            bezier20Path.cubicTo(group.left + group.width() * 0.21637f, group.top + group.height() * 0.2262f, group.left + group.width() * 0.21473f, group.top + group.height() * 0.22236f, group.left + group.width() * 0.21311f, group.top + group.height() * 0.21885f);
            bezier20Path.lineTo(group.left + group.width() * 0.1958f, group.top + group.height() * 0.22009f);
            bezier20Path.cubicTo(group.left + group.width() * 0.195f, group.top + group.height() * 0.22294f, group.left + group.width() * 0.19405f, group.top + group.height() * 0.22629f, group.left + group.width() * 0.19321f, group.top + group.height() * 0.23002f);
            bezier20Path.cubicTo(group.left + group.width() * 0.19216f, group.top + group.height() * 0.23451f, group.left + group.width() * 0.19252f, group.top + group.height() * 0.23573f, group.left + group.width() * 0.19918f, group.top + group.height() * 0.2361f);
            bezier20Path.lineTo(group.left + group.width() * 0.19939f, group.top + group.height() * 0.23929f);
            bezier20Path.lineTo(group.left + group.width() * 0.17915f, group.top + group.height() * 0.24073f);
            bezier20Path.lineTo(group.left + group.width() * 0.17896f, group.top + group.height() * 0.23752f);
            bezier20Path.cubicTo(group.left + group.width() * 0.18484f, group.top + group.height() * 0.23636f, group.left + group.width() * 0.18596f, group.top + group.height() * 0.23528f, group.left + group.width() * 0.18842f, group.top + group.height() * 0.22744f);
            bezier20Path.lineTo(group.left + group.width() * 0.20366f, group.top + group.height() * 0.17931f);
            bezier20Path.lineTo(group.left + group.width() * 0.2082f, group.top + group.height() * 0.17777f);
            bezier20Path.cubicTo(group.left + group.width() * 0.21508f, group.top + group.height() * 0.1933f, group.left + group.width() * 0.22176f, group.top + group.height() * 0.20879f, group.left + group.width() * 0.2287f, group.top + group.height() * 0.22405f);
            bezier20Path.cubicTo(group.left + group.width() * 0.23232f, group.top + group.height() * 0.23182f, group.left + group.width() * 0.23349f, group.top + group.height() * 0.23297f, group.left + group.width() * 0.23934f, group.top + group.height() * 0.23327f);
            bezier20Path.lineTo(group.left + group.width() * 0.23956f, group.top + group.height() * 0.23645f);
            bezier20Path.lineTo(group.left + group.width() * 0.21375f, group.top + group.height() * 0.2383f);
            bezier20Path.close();
            bezier20Path.moveTo(group.left + group.width() * 0.20301f, group.top + group.height() * 0.19482f);
            bezier20Path.lineTo(group.left + group.width() * 0.20276f, group.top + group.height() * 0.19485f);
            bezier20Path.cubicTo(group.left + group.width() * 0.2007f, group.top + group.height() * 0.20167f, group.left + group.width() * 0.19891f, group.top + group.height() * 0.20848f, group.left + group.width() * 0.19697f, group.top + group.height() * 0.21512f);
            bezier20Path.lineTo(group.left + group.width() * 0.21107f, group.top + group.height() * 0.2141f);
            bezier20Path.lineTo(group.left + group.width() * 0.20301f, group.top + group.height() * 0.19482f);
            bezier20Path.close();
            bezier20Path.moveTo(group.left + group.width() * 0.22787f, group.top + group.height() * 0.30387f);
            bezier20Path.cubicTo(group.left + group.width() * 0.23584f, group.top + group.height() * 0.30331f, group.left + group.width() * 0.24186f, group.top + group.height() * 0.29631f, group.left + group.width() * 0.2413f, group.top + group.height() * 0.28826f);
            bezier20Path.cubicTo(group.left + group.width() * 0.24074f, group.top + group.height() * 0.2802f, group.left + group.width() * 0.23381f, group.top + group.height() * 0.27412f, group.left + group.width() * 0.22584f, group.top + group.height() * 0.27468f);
            bezier20Path.cubicTo(group.left + group.width() * 0.226f, group.top + group.height() * 0.2736f, group.left + group.width() * 0.22608f, group.top + group.height() * 0.27249f, group.left + group.width() * 0.22599f, group.top + group.height() * 0.27134f);
            bezier20Path.cubicTo(group.left + group.width() * 0.22542f, group.top + group.height() * 0.26328f, group.left + group.width() * 0.21851f, group.top + group.height() * 0.25719f, group.left + group.width() * 0.21053f, group.top + group.height() * 0.25776f);
            bezier20Path.cubicTo(group.left + group.width() * 0.20253f, group.top + group.height() * 0.25832f, group.left + group.width() * 0.19652f, group.top + group.height() * 0.26532f, group.left + group.width() * 0.19708f, group.top + group.height() * 0.27338f);
            bezier20Path.cubicTo(group.left + group.width() * 0.19715f, group.top + group.height() * 0.27453f, group.left + group.width() * 0.19737f, group.top + group.height() * 0.27562f, group.left + group.width() * 0.1977f, group.top + group.height() * 0.27667f);
            bezier20Path.cubicTo(group.left + group.width() * 0.18971f, group.top + group.height() * 0.27723f, group.left + group.width() * 0.18368f, group.top + group.height() * 0.28423f, group.left + group.width() * 0.18424f, group.top + group.height() * 0.29229f);
            bezier20Path.cubicTo(group.left + group.width() * 0.1848f, group.top + group.height() * 0.30035f, group.left + group.width() * 0.19173f, group.top + group.height() * 0.30643f, group.left + group.width() * 0.1997f, group.top + group.height() * 0.30586f);
            bezier20Path.cubicTo(group.left + group.width() * 0.20452f, group.top + group.height() * 0.30553f, group.left + group.width() * 0.2086f, group.top + group.height() * 0.30285f, group.left + group.width() * 0.21097f, group.top + group.height() * 0.29901f);
            bezier20Path.cubicTo(group.left + group.width() * 0.21107f, group.top + group.height() * 0.30049f, group.left + group.width() * 0.21119f, group.top + group.height() * 0.30213f, group.left + group.width() * 0.2113f, group.top + group.height() * 0.30378f);
            bezier20Path.cubicTo(group.left + group.width() * 0.21166f, group.top + group.height() * 0.30897f, group.left + group.width() * 0.20681f, group.top + group.height() * 0.31618f, group.left + group.width() * 0.19928f, group.top + group.height() * 0.31815f);
            bezier20Path.lineTo(group.left + group.width() * 0.22996f, group.top + group.height() * 0.31599f);
            bezier20Path.cubicTo(group.left + group.width() * 0.22226f, group.top + group.height() * 0.31508f, group.left + group.width() * 0.21645f, group.top + group.height() * 0.30863f, group.left + group.width() * 0.21609f, group.top + group.height() * 0.30344f);
            bezier20Path.cubicTo(group.left + group.width() * 0.21598f, group.top + group.height() * 0.30179f, group.left + group.width() * 0.21585f, group.top + group.height() * 0.30016f, group.left + group.width() * 0.21575f, group.top + group.height() * 0.29867f);
            bezier20Path.cubicTo(group.left + group.width() * 0.21863f, group.top + group.height() * 0.30213f, group.left + group.width() * 0.22305f, group.top + group.height() * 0.30422f, group.left + group.width() * 0.22787f, group.top + group.height() * 0.30387f);
            bezier20Path.close();
            bezier20Path.moveTo(group.left + group.width() * 0.08139f, group.top + group.height() * 0.33775f);
            bezier20Path.cubicTo(group.left + group.width() * 0.08282f, group.top + group.height() * 0.34333f, group.left + group.width() * 0.06986f, group.top + group.height() * 0.37395f, group.left + group.width() * 0.06658f, group.top + group.height() * 0.37489f);
            bezier20Path.cubicTo(group.left + group.width() * 0.06986f, group.top + group.height() * 0.37395f, group.left + group.width() * 0.09584f, group.top + group.height() * 0.39354f, group.left + group.width() * 0.09727f, group.top + group.height() * 0.39913f);
            bezier20Path.cubicTo(group.left + group.width() * 0.09584f, group.top + group.height() * 0.39354f, group.left + group.width() * 0.10879f, group.top + group.height() * 0.36293f, group.left + group.width() * 0.11207f, group.top + group.height() * 0.36199f);
            bezier20Path.cubicTo(group.left + group.width() * 0.10879f, group.top + group.height() * 0.36293f, group.left + group.width() * 0.08282f, group.top + group.height() * 0.34333f, group.left + group.width() * 0.08139f, group.top + group.height() * 0.33775f);
            bezier20Path.close();
            bezier20Path.moveTo(group.left + group.width() * 0.35756f, group.top + group.height() * 0.19063f);
            bezier20Path.lineTo(group.left + group.width() * 0.358f, group.top + group.height() * 0.18747f);
            bezier20Path.cubicTo(group.left + group.width() * 0.36338f, group.top + group.height() * 0.18741f, group.left + group.width() * 0.36398f, group.top + group.height() * 0.18639f, group.left + group.width() * 0.36311f, group.top + group.height() * 0.18217f);
            bezier20Path.cubicTo(group.left + group.width() * 0.36261f, group.top + group.height() * 0.17935f, group.left + group.width() * 0.36179f, group.top + group.height() * 0.17525f, group.left + group.width() * 0.36096f, group.top + group.height() * 0.17147f);
            bezier20Path.lineTo(group.left + group.width() * 0.34377f, group.top + group.height() * 0.16905f);
            bezier20Path.cubicTo(group.left + group.width() * 0.34238f, group.top + group.height() * 0.17167f, group.left + group.width() * 0.34077f, group.top + group.height() * 0.17476f, group.left + group.width() * 0.33918f, group.top + group.height() * 0.17822f);
            bezier20Path.cubicTo(group.left + group.width() * 0.33722f, group.top + group.height() * 0.18239f, group.left + group.width() * 0.33732f, group.top + group.height() * 0.18366f, group.left + group.width() * 0.34377f, group.top + group.height() * 0.18543f);
            bezier20Path.lineTo(group.left + group.width() * 0.34332f, group.top + group.height() * 0.18861f);
            bezier20Path.lineTo(group.left + group.width() * 0.32323f, group.top + group.height() * 0.18577f);
            bezier20Path.lineTo(group.left + group.width() * 0.32369f, group.top + group.height() * 0.18256f);
            bezier20Path.cubicTo(group.left + group.width() * 0.3297f, group.top + group.height() * 0.18267f, group.left + group.width() * 0.33101f, group.top + group.height() * 0.18186f, group.left + group.width() * 0.33503f, group.top + group.height() * 0.17469f);
            bezier20Path.lineTo(group.left + group.width() * 0.35984f, group.top + group.height() * 0.13083f);
            bezier20Path.lineTo(group.left + group.width() * 0.36461f, group.top + group.height() * 0.13026f);
            bezier20Path.cubicTo(group.left + group.width() * 0.36812f, group.top + group.height() * 0.1469f, group.left + group.width() * 0.37148f, group.top + group.height() * 0.16345f, group.left + group.width() * 0.37513f, group.top + group.height() * 0.17984f);
            bezier20Path.cubicTo(group.left + group.width() * 0.37708f, group.top + group.height() * 0.1882f, group.left + group.width() * 0.37797f, group.top + group.height() * 0.18957f, group.left + group.width() * 0.38362f, group.top + group.height() * 0.19109f);
            bezier20Path.lineTo(group.left + group.width() * 0.38318f, group.top + group.height() * 0.19424f);
            bezier20Path.lineTo(group.left + group.width() * 0.35756f, group.top + group.height() * 0.19063f);
            bezier20Path.close();
            bezier20Path.moveTo(group.left + group.width() * 0.35602f, group.top + group.height() * 0.14585f);
            bezier20Path.lineTo(group.left + group.width() * 0.35575f, group.top + group.height() * 0.14582f);
            bezier20Path.cubicTo(group.left + group.width() * 0.35233f, group.top + group.height() * 0.15207f, group.left + group.width() * 0.34918f, group.top + group.height() * 0.15835f, group.left + group.width() * 0.34594f, group.top + group.height() * 0.16443f);
            bezier20Path.lineTo(group.left + group.width() * 0.35994f, group.top + group.height() * 0.1664f);
            bezier20Path.lineTo(group.left + group.width() * 0.35602f, group.top + group.height() * 0.14585f);
            bezier20Path.close();
            bezier20Path.moveTo(group.left + group.width() * 0.98309f, group.top + group.height() * 0.21631f);
            bezier20Path.cubicTo(group.left + group.width() * 0.97611f, group.top + group.height() * 0.20359f, group.left + group.width() * 0.96467f, group.top + group.height() * 0.19439f, group.left + group.width() * 0.95089f, group.top + group.height() * 0.1904f);
            bezier20Path.lineTo(group.left + group.width() * 0.52961f, group.top + group.height() * 0.06843f);
            bezier20Path.cubicTo(group.left + group.width() * 0.52479f, group.top + group.height() * 0.06703f, group.left + group.width() * 0.51982f, group.top + group.height() * 0.06633f, group.left + group.width() * 0.51483f, group.top + group.height() * 0.06633f);
            bezier20Path.cubicTo(group.left + group.width() * 0.49091f, group.top + group.height() * 0.06633f, group.left + group.width() * 0.46961f, group.top + group.height() * 0.0825f, group.left + group.width() * 0.46303f, group.top + group.height() * 0.10568f);
            bezier20Path.lineTo(group.left + group.width() * 0.29731f, group.top + group.height() * 0.68925f);
            bezier20Path.cubicTo(group.left + group.width() * 0.29335f, group.top + group.height() * 0.70314f, group.left + group.width() * 0.29501f, group.top + group.height() * 0.7178f, group.left + group.width() * 0.302f, group.top + group.height() * 0.73054f);
            bezier20Path.cubicTo(group.left + group.width() * 0.30899f, group.top + group.height() * 0.74328f, group.left + group.width() * 0.32041f, group.top + group.height() * 0.75249f, group.left + group.width() * 0.33418f, group.top + group.height() * 0.75646f);
            bezier20Path.lineTo(group.left + group.width() * 0.5835f, group.top + group.height() * 0.82864f);
            bezier20Path.lineTo(group.left + group.width() * 0.26089f, group.top + group.height() * 0.78286f);
            bezier20Path.cubicTo(group.left + group.width() * 0.25004f, group.top + group.height() * 0.78133f, group.left + group.width() * 0.2404f, group.top + group.height() * 0.77558f, group.left + group.width() * 0.23376f, group.top + group.height() * 0.76667f);
            bezier20Path.cubicTo(group.left + group.width() * 0.22712f, group.top + group.height() * 0.75775f, group.left + group.width() * 0.22431f, group.top + group.height() * 0.74683f, group.left + group.width() * 0.22586f, group.top + group.height() * 0.73588f);
            bezier20Path.lineTo(group.left + group.width() * 0.30952f, group.top + group.height() * 0.13469f);
            bezier20Path.cubicTo(group.left + group.width() * 0.31267f, group.top + group.height() * 0.11201f, group.left + group.width() * 0.33356f, group.top + group.height() * 0.09616f, group.left + group.width() * 0.35606f, group.top + group.height() * 0.09929f);
            bezier20Path.lineTo(group.left + group.width() * 0.43836f, group.top + group.height() * 0.11098f);
            bezier20Path.cubicTo(group.left + group.width() * 0.44186f, group.top + group.height() * 0.11146f, group.left + group.width() * 0.445f, group.top + group.height() * 0.10904f, group.left + group.width() * 0.4455f, group.top + group.height() * 0.10556f);
            bezier20Path.cubicTo(group.left + group.width() * 0.44597f, group.top + group.height() * 0.10207f, group.left + group.width() * 0.44357f, group.top + group.height() * 0.09885f, group.left + group.width() * 0.44012f, group.top + group.height() * 0.09836f);
            bezier20Path.lineTo(group.left + group.width() * 0.35781f, group.top + group.height() * 0.08668f);
            bezier20Path.cubicTo(group.left + group.width() * 0.32835f, group.top + group.height() * 0.08252f, group.left + group.width() * 0.30113f, group.top + group.height() * 0.10328f, group.left + group.width() * 0.29702f, group.top + group.height() * 0.13293f);
            bezier20Path.lineTo(group.left + group.width() * 0.21336f, group.top + group.height() * 0.7341f);
            bezier20Path.cubicTo(group.left + group.width() * 0.21134f, group.top + group.height() * 0.74842f, group.left + group.width() * 0.21501f, group.top + group.height() * 0.7627f, group.left + group.width() * 0.22368f, group.top + group.height() * 0.77433f);
            bezier20Path.cubicTo(group.left + group.width() * 0.23235f, group.top + group.height() * 0.78596f, group.left + group.width() * 0.24494f, group.top + group.height() * 0.79348f, group.left + group.width() * 0.25913f, group.top + group.height() * 0.79548f);
            bezier20Path.lineTo(group.left + group.width() * 0.45266f, group.top + group.height() * 0.82295f);
            bezier20Path.lineTo(group.left + group.width() * 0.24113f, group.top + group.height() * 0.83787f);
            bezier20Path.cubicTo(group.left + group.width() * 0.2302f, group.top + group.height() * 0.83866f, group.left + group.width() * 0.21962f, group.top + group.height() * 0.83506f, group.left + group.width() * 0.21128f, group.top + group.height() * 0.82774f);
            bezier20Path.cubicTo(group.left + group.width() * 0.20294f, group.top + group.height() * 0.82042f, group.left + group.width() * 0.19795f, group.top + group.height() * 0.81032f, group.left + group.width() * 0.19721f, group.top + group.height() * 0.7993f);
            bezier20Path.lineTo(group.left + group.width() * 0.15523f, group.top + group.height() * 0.19367f);
            bezier20Path.cubicTo(group.left + group.width() * 0.15365f, group.top + group.height() * 0.1708f, group.left + group.width() * 0.17081f, group.top + group.height() * 0.1509f, group.left + group.width() * 0.19346f, group.top + group.height() * 0.14927f);
            bezier20Path.lineTo(group.left + group.width() * 0.2735f, group.top + group.height() * 0.14362f);
            bezier20Path.cubicTo(group.left + group.width() * 0.27696f, group.top + group.height() * 0.14338f, group.left + group.width() * 0.2796f, group.top + group.height() * 0.14033f, group.left + group.width() * 0.27934f, group.top + group.height() * 0.13683f);
            bezier20Path.cubicTo(group.left + group.width() * 0.27911f, group.top + group.height() * 0.13331f, group.left + group.width() * 0.27608f, group.top + group.height() * 0.13061f, group.left + group.width() * 0.2726f, group.top + group.height() * 0.13091f);
            bezier20Path.lineTo(group.left + group.width() * 0.19258f, group.top + group.height() * 0.13656f);
            bezier20Path.cubicTo(group.left + group.width() * 0.16298f, group.top + group.height() * 0.13868f, group.left + group.width() * 0.14058f, group.top + group.height() * 0.1647f, group.left + group.width() * 0.14264f, group.top + group.height() * 0.19455f);
            bezier20Path.lineTo(group.left + group.width() * 0.18461f, group.top + group.height() * 0.80017f);
            bezier20Path.cubicTo(group.left + group.width() * 0.18559f, group.top + group.height() * 0.81459f, group.left + group.width() * 0.19211f, group.top + group.height() * 0.8278f, group.left + group.width() * 0.203f, group.top + group.height() * 0.83735f);
            bezier20Path.cubicTo(group.left + group.width() * 0.2129f, group.top + group.height() * 0.84605f, group.left + group.width() * 0.22526f, group.top + group.height() * 0.85073f, group.left + group.width() * 0.23818f, group.top + group.height() * 0.85072f);
            bezier20Path.cubicTo(group.left + group.width() * 0.23945f, group.top + group.height() * 0.85072f, group.left + group.width() * 0.24073f, group.top + group.height() * 0.85068f, group.left + group.width() * 0.24202f, group.top + group.height() * 0.85058f);
            bezier20Path.lineTo(group.left + group.width() * 0.44802f, group.top + group.height() * 0.83605f);
            bezier20Path.lineTo(group.left + group.width() * 0.2309f, group.top + group.height() * 0.8989f);
            bezier20Path.cubicTo(group.left + group.width() * 0.22037f, group.top + group.height() * 0.90195f, group.left + group.width() * 0.20927f, group.top + group.height() * 0.90065f, group.left + group.width() * 0.19962f, group.top + group.height() * 0.89524f);
            bezier20Path.cubicTo(group.left + group.width() * 0.18996f, group.top + group.height() * 0.88984f, group.left + group.width() * 0.18299f, group.top + group.height() * 0.88101f, group.left + group.width() * 0.17999f, group.top + group.height() * 0.87037f);
            bezier20Path.lineTo(group.left + group.width() * 0.01422f, group.top + group.height() * 0.2868f);
            bezier20Path.cubicTo(group.left + group.width() * 0.00797f, group.top + group.height() * 0.26477f, group.left + group.width() * 0.02064f, group.top + group.height() * 0.24169f, group.left + group.width() * 0.04247f, group.top + group.height() * 0.23536f);
            bezier20Path.lineTo(group.left + group.width() * 0.12199f, group.top + group.height() * 0.21234f);
            bezier20Path.cubicTo(group.left + group.width() * 0.12534f, group.top + group.height() * 0.21137f, group.left + group.width() * 0.12728f, group.top + group.height() * 0.20783f, group.left + group.width() * 0.12632f, group.top + group.height() * 0.20445f);
            bezier20Path.cubicTo(group.left + group.width() * 0.12535f, group.top + group.height() * 0.20107f, group.left + group.width() * 0.12186f, group.top + group.height() * 0.19912f, group.left + group.width() * 0.11851f, group.top + group.height() * 0.20009f);
            bezier20Path.lineTo(group.left + group.width() * 0.03899f, group.top + group.height() * 0.2231f);
            bezier20Path.cubicTo(group.left + group.width() * 0.01046f, group.top + group.height() * 0.23139f, group.left + group.width() * -0.00609f, group.top + group.height() * 0.26153f, group.left + group.width() * 0.00209f, group.top + group.height() * 0.29031f);
            bezier20Path.lineTo(group.left + group.width() * 0.16785f, group.top + group.height() * 0.87388f);
            bezier20Path.cubicTo(group.left + group.width() * 0.17178f, group.top + group.height() * 0.88778f, group.left + group.width() * 0.18089f, group.top + group.height() * 0.89933f, group.left + group.width() * 0.19349f, group.top + group.height() * 0.90639f);
            bezier20Path.cubicTo(group.left + group.width() * 0.20163f, group.top + group.height() * 0.91095f, group.left + group.width() * 0.21055f, group.top + group.height() * 0.91327f, group.left + group.width() * 0.21957f, group.top + group.height() * 0.91327f);
            bezier20Path.cubicTo(group.left + group.width() * 0.22453f, group.top + group.height() * 0.91327f, group.left + group.width() * 0.22951f, group.top + group.height() * 0.91257f, group.left + group.width() * 0.23439f, group.top + group.height() * 0.91115f);
            bezier20Path.lineTo(group.left + group.width() * 0.50862f, group.top + group.height() * 0.83177f);
            bezier20Path.lineTo(group.left + group.width() * 0.67068f, group.top + group.height() * 0.85389f);
            bezier20Path.lineTo(group.left + group.width() * 0.75549f, group.top + group.height() * 0.87844f);
            bezier20Path.cubicTo(group.left + group.width() * 0.7603f, group.top + group.height() * 0.87983f, group.left + group.width() * 0.76525f, group.top + group.height() * 0.88054f, group.left + group.width() * 0.77022f, group.top + group.height() * 0.88054f);
            bezier20Path.cubicTo(group.left + group.width() * 0.79418f, group.top + group.height() * 0.88054f, group.left + group.width() * 0.81548f, group.top + group.height() * 0.86434f, group.left + group.width() * 0.82204f, group.top + group.height() * 0.84117f);
            bezier20Path.lineTo(group.left + group.width() * 0.98779f, group.top + group.height() * 0.25763f);
            bezier20Path.cubicTo(group.left + group.width() * 0.99176f, group.top + group.height() * 0.24371f, group.left + group.width() * 0.99008f, group.top + group.height() * 0.22904f, group.left + group.width() * 0.98309f, group.top + group.height() * 0.21631f);
            bezier20Path.close();
            bezier20Path.moveTo(group.left + group.width() * 0.97567f, group.top + group.height() * 0.25412f);
            bezier20Path.lineTo(group.left + group.width() * 0.80989f, group.top + group.height() * 0.83767f);
            bezier20Path.cubicTo(group.left + group.width() * 0.80488f, group.top + group.height() * 0.8554f, group.left + group.width() * 0.78857f, group.top + group.height() * 0.86779f, group.left + group.width() * 0.77022f, group.top + group.height() * 0.86779f);
            bezier20Path.cubicTo(group.left + group.width() * 0.76642f, group.top + group.height() * 0.86779f, group.left + group.width() * 0.76264f, group.top + group.height() * 0.86725f, group.left + group.width() * 0.75897f, group.top + group.height() * 0.86619f);
            bezier20Path.lineTo(group.left + group.width() * 0.33767f, group.top + group.height() * 0.74421f);
            bezier20Path.cubicTo(group.left + group.width() * 0.32713f, group.top + group.height() * 0.74117f, group.left + group.width() * 0.31839f, group.top + group.height() * 0.73412f, group.left + group.width() * 0.31304f, group.top + group.height() * 0.72436f);
            bezier20Path.cubicTo(group.left + group.width() * 0.30769f, group.top + group.height() * 0.71461f, group.left + group.width() * 0.30642f, group.top + group.height() * 0.70339f, group.left + group.width() * 0.30944f, group.top + group.height() * 0.69277f);
            bezier20Path.lineTo(group.left + group.width() * 0.47517f, group.top + group.height() * 0.10918f);
            bezier20Path.cubicTo(group.left + group.width() * 0.4802f, group.top + group.height() * 0.09145f, group.left + group.width() * 0.49652f, group.top + group.height() * 0.07907f, group.left + group.width() * 0.51483f, group.top + group.height() * 0.07907f);
            bezier20Path.cubicTo(group.left + group.width() * 0.51864f, group.top + group.height() * 0.07907f, group.left + group.width() * 0.52244f, group.top + group.height() * 0.07961f, group.left + group.width() * 0.52614f, group.top + group.height() * 0.08067f);
            bezier20Path.lineTo(group.left + group.width() * 0.94741f, group.top + group.height() * 0.20265f);
            bezier20Path.cubicTo(group.left + group.width() * 0.95794f, group.top + group.height() * 0.2057f, group.left + group.width() * 0.9667f, group.top + group.height() * 0.21275f, group.left + group.width() * 0.97205f, group.top + group.height() * 0.22249f);
            bezier20Path.cubicTo(group.left + group.width() * 0.97741f, group.top + group.height() * 0.23225f, group.left + group.width() * 0.97869f, group.top + group.height() * 0.24347f, group.left + group.width() * 0.97567f, group.top + group.height() * 0.25412f);
            bezier20Path.close();
            bezier20Path.moveTo(group.left + group.width() * 0.51504f, group.top + group.height() * 0.17133f);
            bezier20Path.lineTo(group.left + group.width() * 0.51591f, group.top + group.height() * 0.16826f);
            bezier20Path.cubicTo(group.left + group.width() * 0.52124f, group.top + group.height() * 0.16896f, group.left + group.width() * 0.52197f, group.top + group.height() * 0.16803f, group.left + group.width() * 0.5217f, group.top + group.height() * 0.16373f);
            bezier20Path.cubicTo(group.left + group.width() * 0.5216f, group.top + group.height() * 0.16087f, group.left + group.width() * 0.52135f, group.top + group.height() * 0.15669f, group.left + group.width() * 0.52104f, group.top + group.height() * 0.15283f);
            bezier20Path.lineTo(group.left + group.width() * 0.50435f, group.top + group.height() * 0.14802f);
            bezier20Path.cubicTo(group.left + group.width() * 0.50262f, group.top + group.height() * 0.15042f, group.left + group.width() * 0.50059f, group.top + group.height() * 0.15326f, group.left + group.width() * 0.49854f, group.top + group.height() * 0.15646f);
            bezier20Path.cubicTo(group.left + group.width() * 0.49603f, group.top + group.height() * 0.16031f, group.left + group.width() * 0.49595f, group.top + group.height() * 0.16159f, group.left + group.width() * 0.5021f, group.top + group.height() * 0.16424f);
            bezier20Path.lineTo(group.left + group.width() * 0.50121f, group.top + group.height() * 0.16732f);
            bezier20Path.lineTo(group.left + group.width() * 0.48171f, group.top + group.height() * 0.16169f);
            bezier20Path.lineTo(group.left + group.width() * 0.48261f, group.top + group.height() * 0.15858f);
            bezier20Path.cubicTo(group.left + group.width() * 0.48854f, group.top + group.height() * 0.15954f, group.left + group.width() * 0.48995f, group.top + group.height() * 0.15891f, group.left + group.width() * 0.49492f, group.top + group.height() * 0.15237f);
            bezier20Path.lineTo(group.left + group.width() * 0.52553f, group.top + group.height() * 0.11242f);
            bezier20Path.lineTo(group.left + group.width() * 0.53034f, group.top + group.height() * 0.11253f);
            bezier20Path.cubicTo(group.left + group.width() * 0.53152f, group.top + group.height() * 0.12951f, group.left + group.width() * 0.53256f, group.top + group.height() * 0.14637f, group.left + group.width() * 0.53391f, group.top + group.height() * 0.16311f);
            bezier20Path.cubicTo(group.left + group.width() * 0.53469f, group.top + group.height() * 0.17166f, group.left + group.width() * 0.5354f, group.top + group.height() * 0.17314f, group.left + group.width() * 0.54078f, group.top + group.height() * 0.17544f);
            bezier20Path.lineTo(group.left + group.width() * 0.53991f, group.top + group.height() * 0.1785f);
            bezier20Path.lineTo(group.left + group.width() * 0.51504f, group.top + group.height() * 0.17133f);
            bezier20Path.close();
            bezier20Path.moveTo(group.left + group.width() * 0.51969f, group.top + group.height() * 0.12677f);
            bezier20Path.lineTo(group.left + group.width() * 0.51942f, group.top + group.height() * 0.12671f);
            bezier20Path.cubicTo(group.left + group.width() * 0.51517f, group.top + group.height() * 0.13241f, group.left + group.width() * 0.51119f, group.top + group.height() * 0.13818f, group.left + group.width() * 0.50714f, group.top + group.height() * 0.14375f);
            bezier20Path.lineTo(group.left + group.width() * 0.52072f, group.top + group.height() * 0.14768f);
            bezier20Path.lineTo(group.left + group.width() * 0.51969f, group.top + group.height() * 0.12677f);
            bezier20Path.close();
            bezier20Path.moveTo(group.left + group.width() * 0.77006f, group.top + group.height() * 0.77555f);
            bezier20Path.lineTo(group.left + group.width() * 0.76917f, group.top + group.height() * 0.77863f);
            bezier20Path.cubicTo(group.left + group.width() * 0.76381f, group.top + group.height() * 0.77793f, group.left + group.width() * 0.7631f, group.top + group.height() * 0.77887f, group.left + group.width() * 0.76338f, group.top + group.height() * 0.78314f);
            bezier20Path.cubicTo(group.left + group.width() * 0.76349f, group.top + group.height() * 0.78602f, group.left + group.width() * 0.76372f, group.top + group.height() * 0.79015f, group.left + group.width() * 0.76409f, group.top + group.height() * 0.79409f);
            bezier20Path.lineTo(group.left + group.width() * 0.78071f, group.top + group.height() * 0.79889f);
            bezier20Path.cubicTo(group.left + group.width() * 0.78246f, group.top + group.height() * 0.79645f, group.left + group.width() * 0.7845f, group.top + group.height() * 0.79364f, group.left + group.width() * 0.78654f, group.top + group.height() * 0.79042f);
            bezier20Path.cubicTo(group.left + group.width() * 0.78905f, group.top + group.height() * 0.78657f, group.left + group.width() * 0.78912f, group.top + group.height() * 0.78526f, group.left + group.width() * 0.783f, group.top + group.height() * 0.78265f);
            bezier20Path.lineTo(group.left + group.width() * 0.78389f, group.top + group.height() * 0.77954f);
            bezier20Path.lineTo(group.left + group.width() * 0.80336f, group.top + group.height() * 0.78519f);
            bezier20Path.lineTo(group.left + group.width() * 0.80249f, group.top + group.height() * 0.78828f);
            bezier20Path.cubicTo(group.left + group.width() * 0.79654f, group.top + group.height() * 0.7873f, group.left + group.width() * 0.79512f, group.top + group.height() * 0.78795f, group.left + group.width() * 0.79016f, group.top + group.height() * 0.7945f);
            bezier20Path.lineTo(group.left + group.width() * 0.75953f, group.top + group.height() * 0.83446f);
            bezier20Path.lineTo(group.left + group.width() * 0.75478f, group.top + group.height() * 0.83435f);
            bezier20Path.cubicTo(group.left + group.width() * 0.75358f, group.top + group.height() * 0.81738f, group.left + group.width() * 0.75252f, group.top + group.height() * 0.80052f, group.left + group.width() * 0.75117f, group.top + group.height() * 0.78376f);
            bezier20Path.cubicTo(group.left + group.width() * 0.7504f, group.top + group.height() * 0.77519f, group.left + group.width() * 0.74969f, group.top + group.height() * 0.77374f, group.left + group.width() * 0.74433f, group.top + group.height() * 0.77145f);
            bezier20Path.lineTo(group.left + group.width() * 0.74519f, group.top + group.height() * 0.76835f);
            bezier20Path.lineTo(group.left + group.width() * 0.77006f, group.top + group.height() * 0.77555f);
            bezier20Path.close();
            bezier20Path.moveTo(group.left + group.width() * 0.76543f, group.top + group.height() * 0.82011f);
            bezier20Path.lineTo(group.left + group.width() * 0.76566f, group.top + group.height() * 0.82017f);
            bezier20Path.cubicTo(group.left + group.width() * 0.76993f, group.top + group.height() * 0.81447f, group.left + group.width() * 0.77391f, group.top + group.height() * 0.80869f, group.left + group.width() * 0.77797f, group.top + group.height() * 0.80314f);
            bezier20Path.lineTo(group.left + group.width() * 0.76439f, group.top + group.height() * 0.79918f);
            bezier20Path.lineTo(group.left + group.width() * 0.76543f, group.top + group.height() * 0.82011f);
            bezier20Path.close();
            bezier20Path.moveTo(group.left + group.width() * 0.68642f, group.top + group.height() * 0.57073f);
            bezier20Path.cubicTo(group.left + group.width() * 0.72373f, group.top + group.height() * 0.58152f, group.left + group.width() * 0.76264f, group.top + group.height() * 0.55976f, group.left + group.width() * 0.77333f, group.top + group.height() * 0.52212f);
            bezier20Path.cubicTo(group.left + group.width() * 0.79383f, group.top + group.height() * 0.4498f, group.left + group.width() * 0.70192f, group.top + group.height() * 0.39568f, group.left + group.width() * 0.68762f, group.top + group.height() * 0.31605f);
            bezier20Path.cubicTo(group.left + group.width() * 0.63944f, group.top + group.height() * 0.37067f, group.left + group.width() * 0.52733f, group.top + group.height() * 0.37256f, group.left + group.width() * 0.5068f, group.top + group.height() * 0.44496f);
            bezier20Path.cubicTo(group.left + group.width() * 0.4961f, group.top + group.height() * 0.4826f, group.left + group.width() * 0.51767f, group.top + group.height() * 0.52187f, group.left + group.width() * 0.55495f, group.top + group.height() * 0.53267f);
            bezier20Path.cubicTo(group.left + group.width() * 0.57664f, group.top + group.height() * 0.53895f, group.left + group.width() * 0.59865f, group.top + group.height() * 0.53399f, group.left + group.width() * 0.61558f, group.top + group.height() * 0.5215f);
            bezier20Path.cubicTo(group.left + group.width() * 0.6136f, group.top + group.height() * 0.52841f, group.left + group.width() * 0.61149f, group.top + group.height() * 0.5358f, group.left + group.width() * 0.60938f, group.top + group.height() * 0.54327f);
            bezier20Path.cubicTo(group.left + group.width() * 0.60156f, group.top + group.height() * 0.57077f, group.left + group.width() * 0.56299f, group.top + group.height() * 0.5988f, group.left + group.width() * 0.52043f, group.top + group.height() * 0.59472f);
            bezier20Path.lineTo(group.left + group.width() * 0.68316f, group.top + group.height() * 0.64183f);
            bezier20Path.cubicTo(group.left + group.width() * 0.64491f, group.top + group.height() * 0.62253f, group.left + group.width() * 0.62693f, group.top + group.height() * 0.5781f, group.left + group.width() * 0.63472f, group.top + group.height() * 0.55061f);
            bezier20Path.cubicTo(group.left + group.width() * 0.63687f, group.top + group.height() * 0.54316f, group.left + group.width() * 0.63894f, group.top + group.height() * 0.53577f, group.left + group.width() * 0.64088f, group.top + group.height() * 0.52886f);
            bezier20Path.cubicTo(group.left + group.width() * 0.64865f, group.top + group.height() * 0.54848f, group.left + group.width() * 0.66475f, group.top + group.height() * 0.56445f, group.left + group.width() * 0.68642f, group.top + group.height() * 0.57073f);
            bezier20Path.close();
            bezier20Path.moveTo(group.left + group.width() * 0.50472f, group.top + group.height() * 0.2367f);
            bezier20Path.cubicTo(group.left + group.width() * 0.51147f, group.top + group.height() * 0.23865f, group.left + group.width() * 0.51857f, group.top + group.height() * 0.23469f, group.left + group.width() * 0.5205f, group.top + group.height() * 0.22786f);
            bezier20Path.cubicTo(group.left + group.width() * 0.52422f, group.top + group.height() * 0.21473f, group.left + group.width() * 0.50753f, group.top + group.height() * 0.20489f, group.left + group.width() * 0.50492f, group.top + group.height() * 0.19041f);
            bezier20Path.cubicTo(group.left + group.width() * 0.49615f, group.top + group.height() * 0.20034f, group.left + group.width() * 0.4758f, group.top + group.height() * 0.20069f, group.left + group.width() * 0.47207f, group.top + group.height() * 0.21384f);
            bezier20Path.cubicTo(group.left + group.width() * 0.47013f, group.top + group.height() * 0.22066f, group.left + group.width() * 0.47404f, group.top + group.height() * 0.22781f, group.left + group.width() * 0.48081f, group.top + group.height() * 0.22978f);
            bezier20Path.cubicTo(group.left + group.width() * 0.48478f, group.top + group.height() * 0.23092f, group.left + group.width() * 0.48877f, group.top + group.height() * 0.23002f, group.left + group.width() * 0.49184f, group.top + group.height() * 0.22774f);
            bezier20Path.cubicTo(group.left + group.width() * 0.49147f, group.top + group.height() * 0.22899f, group.left + group.width() * 0.4911f, group.top + group.height() * 0.23035f, group.left + group.width() * 0.49072f, group.top + group.height() * 0.2317f);
            bezier20Path.cubicTo(group.left + group.width() * 0.4893f, group.top + group.height() * 0.23671f, group.left + group.width() * 0.48229f, group.top + group.height() * 0.2418f, group.left + group.width() * 0.47456f, group.top + group.height() * 0.24105f);
            bezier20Path.lineTo(group.left + group.width() * 0.50411f, group.top + group.height() * 0.24962f);
            bezier20Path.cubicTo(group.left + group.width() * 0.49717f, group.top + group.height() * 0.24611f, group.left + group.width() * 0.49391f, group.top + group.height() * 0.23803f, group.left + group.width() * 0.49531f, group.top + group.height() * 0.23304f);
            bezier20Path.cubicTo(group.left + group.width() * 0.49571f, group.top + group.height() * 0.23169f, group.left + group.width() * 0.49608f, group.top + group.height() * 0.23034f, group.left + group.width() * 0.49643f, group.top + group.height() * 0.22909f);
            bezier20Path.cubicTo(group.left + group.width() * 0.49784f, group.top + group.height() * 0.23265f, group.left + group.width() * 0.50078f, group.top + group.height() * 0.23556f, group.left + group.width() * 0.50472f, group.top + group.height() * 0.2367f);
            bezier20Path.close();
            bezier20Path.moveTo(group.left + group.width() * 0.78026f, group.top + group.height() * 0.71015f);
            bezier20Path.cubicTo(group.left + group.width() * 0.77351f, group.top + group.height() * 0.70821f, group.left + group.width() * 0.76641f, group.top + group.height() * 0.71216f, group.left + group.width() * 0.76448f, group.top + group.height() * 0.719f);
            bezier20Path.cubicTo(group.left + group.width() * 0.76075f, group.top + group.height() * 0.73214f, group.left + group.width() * 0.77746f, group.top + group.height() * 0.74198f, group.left + group.width() * 0.78005f, group.top + group.height() * 0.75645f);
            bezier20Path.cubicTo(group.left + group.width() * 0.78881f, group.top + group.height() * 0.74652f, group.left + group.width() * 0.80918f, group.top + group.height() * 0.74617f, group.left + group.width() * 0.81293f, group.top + group.height() * 0.73301f);
            bezier20Path.cubicTo(group.left + group.width() * 0.81485f, group.top + group.height() * 0.72619f, group.left + group.width() * 0.81093f, group.top + group.height() * 0.71905f, group.left + group.width() * 0.80418f, group.top + group.height() * 0.71708f);
            bezier20Path.cubicTo(group.left + group.width() * 0.8002f, group.top + group.height() * 0.71594f, group.left + group.width() * 0.79621f, group.top + group.height() * 0.71684f, group.left + group.width() * 0.79314f, group.top + group.height() * 0.71911f);
            bezier20Path.cubicTo(group.left + group.width() * 0.79351f, group.top + group.height() * 0.71785f, group.left + group.width() * 0.79388f, group.top + group.height() * 0.71651f, group.left + group.width() * 0.79427f, group.top + group.height() * 0.71516f);
            bezier20Path.cubicTo(group.left + group.width() * 0.79568f, group.top + group.height() * 0.71015f, group.left + group.width() * 0.8027f, group.top + group.height() * 0.70506f, group.left + group.width() * 0.81043f, group.top + group.height() * 0.7058f);
            bezier20Path.lineTo(group.left + group.width() * 0.78086f, group.top + group.height() * 0.69724f);
            bezier20Path.cubicTo(group.left + group.width() * 0.78781f, group.top + group.height() * 0.70074f, group.left + group.width() * 0.79107f, group.top + group.height() * 0.70882f, group.left + group.width() * 0.78966f, group.top + group.height() * 0.71383f);
            bezier20Path.cubicTo(group.left + group.width() * 0.78926f, group.top + group.height() * 0.71517f, group.left + group.width() * 0.78889f, group.top + group.height() * 0.71651f, group.left + group.width() * 0.78853f, group.top + group.height() * 0.71777f);
            bezier20Path.cubicTo(group.left + group.width() * 0.78713f, group.top + group.height() * 0.71421f, group.left + group.width() * 0.7842f, group.top + group.height() * 0.71129f, group.left + group.width() * 0.78026f, group.top + group.height() * 0.71015f);
            bezier20Path.close();
            bezier20Path.moveTo(group.left + group.width() * 0.34308f, group.top + group.height() * 0.26605f);
            bezier20Path.cubicTo(group.left + group.width() * 0.35139f, group.top + group.height() * 0.25344f, group.left + group.width() * 0.37434f, group.top + group.height() * 0.24979f, group.left + group.width() * 0.3765f, group.top + group.height() * 0.23434f);
            bezier20Path.cubicTo(group.left + group.width() * 0.37762f, group.top + group.height() * 0.22631f, group.left + group.width() * 0.37205f, group.top + group.height() * 0.21887f, group.left + group.width() * 0.36412f, group.top + group.height() * 0.21774f);
            bezier20Path.cubicTo(group.left + group.width() * 0.35725f, group.top + group.height() * 0.21676f, group.left + group.width() * 0.35086f, group.top + group.height() * 0.2208f, group.left + group.width() * 0.3485f, group.top + group.height() * 0.22705f);
            bezier20Path.cubicTo(group.left + group.width() * 0.34793f, group.top + group.height() * 0.22038f, group.left + group.width() * 0.34288f, group.top + group.height() * 0.21473f, group.left + group.width() * 0.33604f, group.top + group.height() * 0.21376f);
            bezier20Path.cubicTo(group.left + group.width() * 0.32807f, group.top + group.height() * 0.21263f, group.left + group.width() * 0.32072f, group.top + group.height() * 0.21823f, group.left + group.width() * 0.3196f, group.top + group.height() * 0.22627f);
            bezier20Path.cubicTo(group.left + group.width() * 0.31747f, group.top + group.height() * 0.24169f, group.left + group.width() * 0.33786f, group.top + group.height() * 0.25012f, group.left + group.width() * 0.34308f, group.top + group.height() * 0.26605f);
            bezier20Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.bianco);
            canvas.drawPath(bezier20Path, paint);
            
            // Bezier 5
            if (highlited) {
                RectF bezier5Rect = CacheForGiochi.bezier5Rect;
                bezier5Rect.set(group.left,
                    group.top + (float) Math.floor(group.height() * 0.06633f + 0.5f),
                    group.left + (float) Math.floor(group.width() * 0.9899f + 0.5f),
                    group.top + (float) Math.floor(group.height() * 0.91327f + 0.5f));
                Path bezier5Path = CacheForGiochi.bezier5Path;
                bezier5Path.reset();
                bezier5Path.moveTo(group.left + group.width() * 0.08065f, group.top + group.height() * 0.31817f);
                bezier5Path.lineTo(group.left + group.width() * 0.07977f, group.top + group.height() * 0.31508f);
                bezier5Path.cubicTo(group.left + group.width() * 0.08467f, group.top + group.height() * 0.31284f, group.left + group.width() * 0.08481f, group.top + group.height() * 0.31166f, group.left + group.width() * 0.08229f, group.top + group.height() * 0.30816f);
                bezier5Path.cubicTo(group.left + group.width() * 0.08071f, group.top + group.height() * 0.3058f, group.left + group.width() * 0.07832f, group.top + group.height() * 0.30238f, group.left + group.width() * 0.07603f, group.top + group.height() * 0.29927f);
                bezier5Path.lineTo(group.left + group.width() * 0.05934f, group.top + group.height() * 0.30412f);
                bezier5Path.cubicTo(group.left + group.width() * 0.05913f, group.top + group.height() * 0.30708f, group.left + group.width() * 0.05891f, group.top + group.height() * 0.31056f, group.left + group.width() * 0.05886f, group.top + group.height() * 0.31439f);
                bezier5Path.cubicTo(group.left + group.width() * 0.05875f, group.top + group.height() * 0.319f, group.left + group.width() * 0.05936f, group.top + group.height() * 0.32012f, group.left + group.width() * 0.06594f, group.top + group.height() * 0.31908f);
                bezier5Path.lineTo(group.left + group.width() * 0.06682f, group.top + group.height() * 0.32216f);
                bezier5Path.lineTo(group.left + group.width() * 0.04733f, group.top + group.height() * 0.32782f);
                bezier5Path.lineTo(group.left + group.width() * 0.04645f, group.top + group.height() * 0.32472f);
                bezier5Path.cubicTo(group.left + group.width() * 0.05198f, group.top + group.height() * 0.32235f, group.left + group.width() * 0.05286f, group.top + group.height() * 0.32106f, group.left + group.width() * 0.05363f, group.top + group.height() * 0.31286f);
                bezier5Path.lineTo(group.left + group.width() * 0.05864f, group.top + group.height() * 0.2626f);
                bezier5Path.lineTo(group.left + group.width() * 0.06277f, group.top + group.height() * 0.26012f);
                bezier5Path.cubicTo(group.left + group.width() * 0.07268f, group.top + group.height() * 0.27388f, group.left + group.width() * 0.08242f, group.top + group.height() * 0.28763f, group.left + group.width() * 0.09234f, group.top + group.height() * 0.3011f);
                bezier5Path.cubicTo(group.left + group.width() * 0.09748f, group.top + group.height() * 0.30793f, group.left + group.width() * 0.09887f, group.top + group.height() * 0.30881f, group.left + group.width() * 0.10464f, group.top + group.height() * 0.30788f);
                bezier5Path.lineTo(group.left + group.width() * 0.10551f, group.top + group.height() * 0.31095f);
                bezier5Path.lineTo(group.left + group.width() * 0.08065f, group.top + group.height() * 0.31817f);
                bezier5Path.close();
                bezier5Path.moveTo(group.left + group.width() * 0.06119f, group.top + group.height() * 0.27789f);
                bezier5Path.lineTo(group.left + group.width() * 0.06094f, group.top + group.height() * 0.27799f);
                bezier5Path.cubicTo(group.left + group.width() * 0.06034f, group.top + group.height() * 0.2851f, group.left + group.width() * 0.05998f, group.top + group.height() * 0.29212f, group.left + group.width() * 0.05945f, group.top + group.height() * 0.29901f);
                bezier5Path.lineTo(group.left + group.width() * 0.07305f, group.top + group.height() * 0.29506f);
                bezier5Path.lineTo(group.left + group.width() * 0.06119f, group.top + group.height() * 0.27789f);
                bezier5Path.close();
                bezier5Path.moveTo(group.left + group.width() * 0.21375f, group.top + group.height() * 0.2383f);
                bezier5Path.lineTo(group.left + group.width() * 0.21352f, group.top + group.height() * 0.23509f);
                bezier5Path.cubicTo(group.left + group.width() * 0.21878f, group.top + group.height() * 0.23392f, group.left + group.width() * 0.21916f, group.top + group.height() * 0.2328f, group.left + group.width() * 0.21743f, group.top + group.height() * 0.22885f);
                bezier5Path.cubicTo(group.left + group.width() * 0.21637f, group.top + group.height() * 0.2262f, group.left + group.width() * 0.21473f, group.top + group.height() * 0.22236f, group.left + group.width() * 0.21311f, group.top + group.height() * 0.21885f);
                bezier5Path.lineTo(group.left + group.width() * 0.1958f, group.top + group.height() * 0.22009f);
                bezier5Path.cubicTo(group.left + group.width() * 0.195f, group.top + group.height() * 0.22294f, group.left + group.width() * 0.19405f, group.top + group.height() * 0.22629f, group.left + group.width() * 0.19321f, group.top + group.height() * 0.23002f);
                bezier5Path.cubicTo(group.left + group.width() * 0.19216f, group.top + group.height() * 0.23451f, group.left + group.width() * 0.19252f, group.top + group.height() * 0.23573f, group.left + group.width() * 0.19918f, group.top + group.height() * 0.2361f);
                bezier5Path.lineTo(group.left + group.width() * 0.19939f, group.top + group.height() * 0.23929f);
                bezier5Path.lineTo(group.left + group.width() * 0.17915f, group.top + group.height() * 0.24073f);
                bezier5Path.lineTo(group.left + group.width() * 0.17896f, group.top + group.height() * 0.23752f);
                bezier5Path.cubicTo(group.left + group.width() * 0.18484f, group.top + group.height() * 0.23636f, group.left + group.width() * 0.18596f, group.top + group.height() * 0.23528f, group.left + group.width() * 0.18842f, group.top + group.height() * 0.22744f);
                bezier5Path.lineTo(group.left + group.width() * 0.20366f, group.top + group.height() * 0.17931f);
                bezier5Path.lineTo(group.left + group.width() * 0.2082f, group.top + group.height() * 0.17777f);
                bezier5Path.cubicTo(group.left + group.width() * 0.21508f, group.top + group.height() * 0.1933f, group.left + group.width() * 0.22176f, group.top + group.height() * 0.20879f, group.left + group.width() * 0.2287f, group.top + group.height() * 0.22405f);
                bezier5Path.cubicTo(group.left + group.width() * 0.23232f, group.top + group.height() * 0.23182f, group.left + group.width() * 0.23349f, group.top + group.height() * 0.23297f, group.left + group.width() * 0.23934f, group.top + group.height() * 0.23327f);
                bezier5Path.lineTo(group.left + group.width() * 0.23956f, group.top + group.height() * 0.23645f);
                bezier5Path.lineTo(group.left + group.width() * 0.21375f, group.top + group.height() * 0.2383f);
                bezier5Path.close();
                bezier5Path.moveTo(group.left + group.width() * 0.20301f, group.top + group.height() * 0.19482f);
                bezier5Path.lineTo(group.left + group.width() * 0.20276f, group.top + group.height() * 0.19485f);
                bezier5Path.cubicTo(group.left + group.width() * 0.2007f, group.top + group.height() * 0.20167f, group.left + group.width() * 0.19891f, group.top + group.height() * 0.20848f, group.left + group.width() * 0.19697f, group.top + group.height() * 0.21512f);
                bezier5Path.lineTo(group.left + group.width() * 0.21107f, group.top + group.height() * 0.2141f);
                bezier5Path.lineTo(group.left + group.width() * 0.20301f, group.top + group.height() * 0.19482f);
                bezier5Path.close();
                bezier5Path.moveTo(group.left + group.width() * 0.22787f, group.top + group.height() * 0.30387f);
                bezier5Path.cubicTo(group.left + group.width() * 0.23584f, group.top + group.height() * 0.30331f, group.left + group.width() * 0.24186f, group.top + group.height() * 0.29631f, group.left + group.width() * 0.2413f, group.top + group.height() * 0.28826f);
                bezier5Path.cubicTo(group.left + group.width() * 0.24074f, group.top + group.height() * 0.2802f, group.left + group.width() * 0.23381f, group.top + group.height() * 0.27412f, group.left + group.width() * 0.22584f, group.top + group.height() * 0.27468f);
                bezier5Path.cubicTo(group.left + group.width() * 0.226f, group.top + group.height() * 0.2736f, group.left + group.width() * 0.22608f, group.top + group.height() * 0.27249f, group.left + group.width() * 0.22599f, group.top + group.height() * 0.27134f);
                bezier5Path.cubicTo(group.left + group.width() * 0.22542f, group.top + group.height() * 0.26328f, group.left + group.width() * 0.21851f, group.top + group.height() * 0.25719f, group.left + group.width() * 0.21053f, group.top + group.height() * 0.25776f);
                bezier5Path.cubicTo(group.left + group.width() * 0.20253f, group.top + group.height() * 0.25832f, group.left + group.width() * 0.19652f, group.top + group.height() * 0.26532f, group.left + group.width() * 0.19708f, group.top + group.height() * 0.27338f);
                bezier5Path.cubicTo(group.left + group.width() * 0.19715f, group.top + group.height() * 0.27453f, group.left + group.width() * 0.19737f, group.top + group.height() * 0.27562f, group.left + group.width() * 0.1977f, group.top + group.height() * 0.27667f);
                bezier5Path.cubicTo(group.left + group.width() * 0.18971f, group.top + group.height() * 0.27723f, group.left + group.width() * 0.18368f, group.top + group.height() * 0.28423f, group.left + group.width() * 0.18424f, group.top + group.height() * 0.29229f);
                bezier5Path.cubicTo(group.left + group.width() * 0.1848f, group.top + group.height() * 0.30035f, group.left + group.width() * 0.19173f, group.top + group.height() * 0.30643f, group.left + group.width() * 0.1997f, group.top + group.height() * 0.30586f);
                bezier5Path.cubicTo(group.left + group.width() * 0.20452f, group.top + group.height() * 0.30553f, group.left + group.width() * 0.2086f, group.top + group.height() * 0.30285f, group.left + group.width() * 0.21097f, group.top + group.height() * 0.29901f);
                bezier5Path.cubicTo(group.left + group.width() * 0.21107f, group.top + group.height() * 0.30049f, group.left + group.width() * 0.21119f, group.top + group.height() * 0.30213f, group.left + group.width() * 0.2113f, group.top + group.height() * 0.30378f);
                bezier5Path.cubicTo(group.left + group.width() * 0.21166f, group.top + group.height() * 0.30897f, group.left + group.width() * 0.20681f, group.top + group.height() * 0.31618f, group.left + group.width() * 0.19928f, group.top + group.height() * 0.31815f);
                bezier5Path.lineTo(group.left + group.width() * 0.22996f, group.top + group.height() * 0.31599f);
                bezier5Path.cubicTo(group.left + group.width() * 0.22226f, group.top + group.height() * 0.31508f, group.left + group.width() * 0.21645f, group.top + group.height() * 0.30863f, group.left + group.width() * 0.21609f, group.top + group.height() * 0.30344f);
                bezier5Path.cubicTo(group.left + group.width() * 0.21598f, group.top + group.height() * 0.30179f, group.left + group.width() * 0.21585f, group.top + group.height() * 0.30016f, group.left + group.width() * 0.21575f, group.top + group.height() * 0.29867f);
                bezier5Path.cubicTo(group.left + group.width() * 0.21863f, group.top + group.height() * 0.30213f, group.left + group.width() * 0.22305f, group.top + group.height() * 0.30422f, group.left + group.width() * 0.22787f, group.top + group.height() * 0.30387f);
                bezier5Path.close();
                bezier5Path.moveTo(group.left + group.width() * 0.08139f, group.top + group.height() * 0.33775f);
                bezier5Path.cubicTo(group.left + group.width() * 0.08282f, group.top + group.height() * 0.34333f, group.left + group.width() * 0.06986f, group.top + group.height() * 0.37395f, group.left + group.width() * 0.06658f, group.top + group.height() * 0.37489f);
                bezier5Path.cubicTo(group.left + group.width() * 0.06986f, group.top + group.height() * 0.37395f, group.left + group.width() * 0.09584f, group.top + group.height() * 0.39354f, group.left + group.width() * 0.09727f, group.top + group.height() * 0.39913f);
                bezier5Path.cubicTo(group.left + group.width() * 0.09584f, group.top + group.height() * 0.39354f, group.left + group.width() * 0.10879f, group.top + group.height() * 0.36293f, group.left + group.width() * 0.11207f, group.top + group.height() * 0.36199f);
                bezier5Path.cubicTo(group.left + group.width() * 0.10879f, group.top + group.height() * 0.36293f, group.left + group.width() * 0.08282f, group.top + group.height() * 0.34333f, group.left + group.width() * 0.08139f, group.top + group.height() * 0.33775f);
                bezier5Path.close();
                bezier5Path.moveTo(group.left + group.width() * 0.35756f, group.top + group.height() * 0.19063f);
                bezier5Path.lineTo(group.left + group.width() * 0.358f, group.top + group.height() * 0.18747f);
                bezier5Path.cubicTo(group.left + group.width() * 0.36338f, group.top + group.height() * 0.18741f, group.left + group.width() * 0.36398f, group.top + group.height() * 0.18639f, group.left + group.width() * 0.36311f, group.top + group.height() * 0.18217f);
                bezier5Path.cubicTo(group.left + group.width() * 0.36261f, group.top + group.height() * 0.17935f, group.left + group.width() * 0.36179f, group.top + group.height() * 0.17525f, group.left + group.width() * 0.36096f, group.top + group.height() * 0.17147f);
                bezier5Path.lineTo(group.left + group.width() * 0.34377f, group.top + group.height() * 0.16905f);
                bezier5Path.cubicTo(group.left + group.width() * 0.34238f, group.top + group.height() * 0.17167f, group.left + group.width() * 0.34077f, group.top + group.height() * 0.17476f, group.left + group.width() * 0.33918f, group.top + group.height() * 0.17822f);
                bezier5Path.cubicTo(group.left + group.width() * 0.33722f, group.top + group.height() * 0.18239f, group.left + group.width() * 0.33732f, group.top + group.height() * 0.18366f, group.left + group.width() * 0.34377f, group.top + group.height() * 0.18543f);
                bezier5Path.lineTo(group.left + group.width() * 0.34332f, group.top + group.height() * 0.18861f);
                bezier5Path.lineTo(group.left + group.width() * 0.32323f, group.top + group.height() * 0.18577f);
                bezier5Path.lineTo(group.left + group.width() * 0.32369f, group.top + group.height() * 0.18256f);
                bezier5Path.cubicTo(group.left + group.width() * 0.3297f, group.top + group.height() * 0.18267f, group.left + group.width() * 0.33101f, group.top + group.height() * 0.18186f, group.left + group.width() * 0.33503f, group.top + group.height() * 0.17469f);
                bezier5Path.lineTo(group.left + group.width() * 0.35984f, group.top + group.height() * 0.13083f);
                bezier5Path.lineTo(group.left + group.width() * 0.36461f, group.top + group.height() * 0.13026f);
                bezier5Path.cubicTo(group.left + group.width() * 0.36812f, group.top + group.height() * 0.1469f, group.left + group.width() * 0.37148f, group.top + group.height() * 0.16345f, group.left + group.width() * 0.37513f, group.top + group.height() * 0.17984f);
                bezier5Path.cubicTo(group.left + group.width() * 0.37708f, group.top + group.height() * 0.1882f, group.left + group.width() * 0.37797f, group.top + group.height() * 0.18957f, group.left + group.width() * 0.38362f, group.top + group.height() * 0.19109f);
                bezier5Path.lineTo(group.left + group.width() * 0.38318f, group.top + group.height() * 0.19424f);
                bezier5Path.lineTo(group.left + group.width() * 0.35756f, group.top + group.height() * 0.19063f);
                bezier5Path.close();
                bezier5Path.moveTo(group.left + group.width() * 0.35602f, group.top + group.height() * 0.14585f);
                bezier5Path.lineTo(group.left + group.width() * 0.35575f, group.top + group.height() * 0.14582f);
                bezier5Path.cubicTo(group.left + group.width() * 0.35233f, group.top + group.height() * 0.15207f, group.left + group.width() * 0.34918f, group.top + group.height() * 0.15835f, group.left + group.width() * 0.34594f, group.top + group.height() * 0.16443f);
                bezier5Path.lineTo(group.left + group.width() * 0.35994f, group.top + group.height() * 0.1664f);
                bezier5Path.lineTo(group.left + group.width() * 0.35602f, group.top + group.height() * 0.14585f);
                bezier5Path.close();
                bezier5Path.moveTo(group.left + group.width() * 0.98309f, group.top + group.height() * 0.21631f);
                bezier5Path.cubicTo(group.left + group.width() * 0.97611f, group.top + group.height() * 0.20359f, group.left + group.width() * 0.96467f, group.top + group.height() * 0.19439f, group.left + group.width() * 0.95089f, group.top + group.height() * 0.1904f);
                bezier5Path.lineTo(group.left + group.width() * 0.52961f, group.top + group.height() * 0.06843f);
                bezier5Path.cubicTo(group.left + group.width() * 0.52479f, group.top + group.height() * 0.06703f, group.left + group.width() * 0.51982f, group.top + group.height() * 0.06633f, group.left + group.width() * 0.51483f, group.top + group.height() * 0.06633f);
                bezier5Path.cubicTo(group.left + group.width() * 0.49091f, group.top + group.height() * 0.06633f, group.left + group.width() * 0.46961f, group.top + group.height() * 0.0825f, group.left + group.width() * 0.46303f, group.top + group.height() * 0.10568f);
                bezier5Path.lineTo(group.left + group.width() * 0.29731f, group.top + group.height() * 0.68925f);
                bezier5Path.cubicTo(group.left + group.width() * 0.29335f, group.top + group.height() * 0.70314f, group.left + group.width() * 0.29501f, group.top + group.height() * 0.7178f, group.left + group.width() * 0.302f, group.top + group.height() * 0.73054f);
                bezier5Path.cubicTo(group.left + group.width() * 0.30899f, group.top + group.height() * 0.74328f, group.left + group.width() * 0.32041f, group.top + group.height() * 0.75249f, group.left + group.width() * 0.33418f, group.top + group.height() * 0.75646f);
                bezier5Path.lineTo(group.left + group.width() * 0.5835f, group.top + group.height() * 0.82864f);
                bezier5Path.lineTo(group.left + group.width() * 0.26089f, group.top + group.height() * 0.78286f);
                bezier5Path.cubicTo(group.left + group.width() * 0.25004f, group.top + group.height() * 0.78133f, group.left + group.width() * 0.2404f, group.top + group.height() * 0.77558f, group.left + group.width() * 0.23376f, group.top + group.height() * 0.76667f);
                bezier5Path.cubicTo(group.left + group.width() * 0.22712f, group.top + group.height() * 0.75775f, group.left + group.width() * 0.22431f, group.top + group.height() * 0.74683f, group.left + group.width() * 0.22586f, group.top + group.height() * 0.73588f);
                bezier5Path.lineTo(group.left + group.width() * 0.30952f, group.top + group.height() * 0.13469f);
                bezier5Path.cubicTo(group.left + group.width() * 0.31267f, group.top + group.height() * 0.11201f, group.left + group.width() * 0.33356f, group.top + group.height() * 0.09616f, group.left + group.width() * 0.35606f, group.top + group.height() * 0.09929f);
                bezier5Path.lineTo(group.left + group.width() * 0.43836f, group.top + group.height() * 0.11098f);
                bezier5Path.cubicTo(group.left + group.width() * 0.44186f, group.top + group.height() * 0.11146f, group.left + group.width() * 0.445f, group.top + group.height() * 0.10904f, group.left + group.width() * 0.4455f, group.top + group.height() * 0.10556f);
                bezier5Path.cubicTo(group.left + group.width() * 0.44597f, group.top + group.height() * 0.10207f, group.left + group.width() * 0.44357f, group.top + group.height() * 0.09885f, group.left + group.width() * 0.44012f, group.top + group.height() * 0.09836f);
                bezier5Path.lineTo(group.left + group.width() * 0.35781f, group.top + group.height() * 0.08668f);
                bezier5Path.cubicTo(group.left + group.width() * 0.32835f, group.top + group.height() * 0.08252f, group.left + group.width() * 0.30113f, group.top + group.height() * 0.10328f, group.left + group.width() * 0.29702f, group.top + group.height() * 0.13293f);
                bezier5Path.lineTo(group.left + group.width() * 0.21336f, group.top + group.height() * 0.7341f);
                bezier5Path.cubicTo(group.left + group.width() * 0.21134f, group.top + group.height() * 0.74842f, group.left + group.width() * 0.21501f, group.top + group.height() * 0.7627f, group.left + group.width() * 0.22368f, group.top + group.height() * 0.77433f);
                bezier5Path.cubicTo(group.left + group.width() * 0.23235f, group.top + group.height() * 0.78596f, group.left + group.width() * 0.24494f, group.top + group.height() * 0.79348f, group.left + group.width() * 0.25913f, group.top + group.height() * 0.79548f);
                bezier5Path.lineTo(group.left + group.width() * 0.45266f, group.top + group.height() * 0.82295f);
                bezier5Path.lineTo(group.left + group.width() * 0.24113f, group.top + group.height() * 0.83787f);
                bezier5Path.cubicTo(group.left + group.width() * 0.2302f, group.top + group.height() * 0.83866f, group.left + group.width() * 0.21962f, group.top + group.height() * 0.83506f, group.left + group.width() * 0.21128f, group.top + group.height() * 0.82774f);
                bezier5Path.cubicTo(group.left + group.width() * 0.20294f, group.top + group.height() * 0.82042f, group.left + group.width() * 0.19795f, group.top + group.height() * 0.81032f, group.left + group.width() * 0.19721f, group.top + group.height() * 0.7993f);
                bezier5Path.lineTo(group.left + group.width() * 0.15523f, group.top + group.height() * 0.19367f);
                bezier5Path.cubicTo(group.left + group.width() * 0.15365f, group.top + group.height() * 0.1708f, group.left + group.width() * 0.17081f, group.top + group.height() * 0.1509f, group.left + group.width() * 0.19346f, group.top + group.height() * 0.14927f);
                bezier5Path.lineTo(group.left + group.width() * 0.2735f, group.top + group.height() * 0.14362f);
                bezier5Path.cubicTo(group.left + group.width() * 0.27696f, group.top + group.height() * 0.14338f, group.left + group.width() * 0.2796f, group.top + group.height() * 0.14033f, group.left + group.width() * 0.27934f, group.top + group.height() * 0.13683f);
                bezier5Path.cubicTo(group.left + group.width() * 0.27911f, group.top + group.height() * 0.13331f, group.left + group.width() * 0.27608f, group.top + group.height() * 0.13061f, group.left + group.width() * 0.2726f, group.top + group.height() * 0.13091f);
                bezier5Path.lineTo(group.left + group.width() * 0.19258f, group.top + group.height() * 0.13656f);
                bezier5Path.cubicTo(group.left + group.width() * 0.16298f, group.top + group.height() * 0.13868f, group.left + group.width() * 0.14058f, group.top + group.height() * 0.1647f, group.left + group.width() * 0.14264f, group.top + group.height() * 0.19455f);
                bezier5Path.lineTo(group.left + group.width() * 0.18461f, group.top + group.height() * 0.80017f);
                bezier5Path.cubicTo(group.left + group.width() * 0.18559f, group.top + group.height() * 0.81459f, group.left + group.width() * 0.19211f, group.top + group.height() * 0.8278f, group.left + group.width() * 0.203f, group.top + group.height() * 0.83735f);
                bezier5Path.cubicTo(group.left + group.width() * 0.2129f, group.top + group.height() * 0.84605f, group.left + group.width() * 0.22526f, group.top + group.height() * 0.85073f, group.left + group.width() * 0.23818f, group.top + group.height() * 0.85072f);
                bezier5Path.cubicTo(group.left + group.width() * 0.23945f, group.top + group.height() * 0.85072f, group.left + group.width() * 0.24073f, group.top + group.height() * 0.85068f, group.left + group.width() * 0.24202f, group.top + group.height() * 0.85058f);
                bezier5Path.lineTo(group.left + group.width() * 0.44802f, group.top + group.height() * 0.83605f);
                bezier5Path.lineTo(group.left + group.width() * 0.2309f, group.top + group.height() * 0.8989f);
                bezier5Path.cubicTo(group.left + group.width() * 0.22037f, group.top + group.height() * 0.90195f, group.left + group.width() * 0.20927f, group.top + group.height() * 0.90065f, group.left + group.width() * 0.19962f, group.top + group.height() * 0.89524f);
                bezier5Path.cubicTo(group.left + group.width() * 0.18996f, group.top + group.height() * 0.88984f, group.left + group.width() * 0.18299f, group.top + group.height() * 0.88101f, group.left + group.width() * 0.17999f, group.top + group.height() * 0.87037f);
                bezier5Path.lineTo(group.left + group.width() * 0.01422f, group.top + group.height() * 0.2868f);
                bezier5Path.cubicTo(group.left + group.width() * 0.00797f, group.top + group.height() * 0.26477f, group.left + group.width() * 0.02064f, group.top + group.height() * 0.24169f, group.left + group.width() * 0.04247f, group.top + group.height() * 0.23536f);
                bezier5Path.lineTo(group.left + group.width() * 0.12199f, group.top + group.height() * 0.21234f);
                bezier5Path.cubicTo(group.left + group.width() * 0.12534f, group.top + group.height() * 0.21137f, group.left + group.width() * 0.12728f, group.top + group.height() * 0.20783f, group.left + group.width() * 0.12632f, group.top + group.height() * 0.20445f);
                bezier5Path.cubicTo(group.left + group.width() * 0.12535f, group.top + group.height() * 0.20107f, group.left + group.width() * 0.12186f, group.top + group.height() * 0.19912f, group.left + group.width() * 0.11851f, group.top + group.height() * 0.20009f);
                bezier5Path.lineTo(group.left + group.width() * 0.03899f, group.top + group.height() * 0.2231f);
                bezier5Path.cubicTo(group.left + group.width() * 0.01046f, group.top + group.height() * 0.23139f, group.left + group.width() * -0.00609f, group.top + group.height() * 0.26153f, group.left + group.width() * 0.00209f, group.top + group.height() * 0.29031f);
                bezier5Path.lineTo(group.left + group.width() * 0.16785f, group.top + group.height() * 0.87388f);
                bezier5Path.cubicTo(group.left + group.width() * 0.17178f, group.top + group.height() * 0.88778f, group.left + group.width() * 0.18089f, group.top + group.height() * 0.89933f, group.left + group.width() * 0.19349f, group.top + group.height() * 0.90639f);
                bezier5Path.cubicTo(group.left + group.width() * 0.20163f, group.top + group.height() * 0.91095f, group.left + group.width() * 0.21055f, group.top + group.height() * 0.91327f, group.left + group.width() * 0.21957f, group.top + group.height() * 0.91327f);
                bezier5Path.cubicTo(group.left + group.width() * 0.22453f, group.top + group.height() * 0.91327f, group.left + group.width() * 0.22951f, group.top + group.height() * 0.91257f, group.left + group.width() * 0.23439f, group.top + group.height() * 0.91115f);
                bezier5Path.lineTo(group.left + group.width() * 0.50862f, group.top + group.height() * 0.83177f);
                bezier5Path.lineTo(group.left + group.width() * 0.67068f, group.top + group.height() * 0.85389f);
                bezier5Path.lineTo(group.left + group.width() * 0.75549f, group.top + group.height() * 0.87844f);
                bezier5Path.cubicTo(group.left + group.width() * 0.7603f, group.top + group.height() * 0.87983f, group.left + group.width() * 0.76525f, group.top + group.height() * 0.88054f, group.left + group.width() * 0.77022f, group.top + group.height() * 0.88054f);
                bezier5Path.cubicTo(group.left + group.width() * 0.79418f, group.top + group.height() * 0.88054f, group.left + group.width() * 0.81548f, group.top + group.height() * 0.86434f, group.left + group.width() * 0.82204f, group.top + group.height() * 0.84117f);
                bezier5Path.lineTo(group.left + group.width() * 0.98779f, group.top + group.height() * 0.25763f);
                bezier5Path.cubicTo(group.left + group.width() * 0.99176f, group.top + group.height() * 0.24371f, group.left + group.width() * 0.99008f, group.top + group.height() * 0.22904f, group.left + group.width() * 0.98309f, group.top + group.height() * 0.21631f);
                bezier5Path.close();
                bezier5Path.moveTo(group.left + group.width() * 0.97567f, group.top + group.height() * 0.25412f);
                bezier5Path.lineTo(group.left + group.width() * 0.80989f, group.top + group.height() * 0.83767f);
                bezier5Path.cubicTo(group.left + group.width() * 0.80488f, group.top + group.height() * 0.8554f, group.left + group.width() * 0.78857f, group.top + group.height() * 0.86779f, group.left + group.width() * 0.77022f, group.top + group.height() * 0.86779f);
                bezier5Path.cubicTo(group.left + group.width() * 0.76642f, group.top + group.height() * 0.86779f, group.left + group.width() * 0.76264f, group.top + group.height() * 0.86725f, group.left + group.width() * 0.75897f, group.top + group.height() * 0.86619f);
                bezier5Path.lineTo(group.left + group.width() * 0.33767f, group.top + group.height() * 0.74421f);
                bezier5Path.cubicTo(group.left + group.width() * 0.32713f, group.top + group.height() * 0.74117f, group.left + group.width() * 0.31839f, group.top + group.height() * 0.73412f, group.left + group.width() * 0.31304f, group.top + group.height() * 0.72436f);
                bezier5Path.cubicTo(group.left + group.width() * 0.30769f, group.top + group.height() * 0.71461f, group.left + group.width() * 0.30642f, group.top + group.height() * 0.70339f, group.left + group.width() * 0.30944f, group.top + group.height() * 0.69277f);
                bezier5Path.lineTo(group.left + group.width() * 0.47517f, group.top + group.height() * 0.10918f);
                bezier5Path.cubicTo(group.left + group.width() * 0.4802f, group.top + group.height() * 0.09145f, group.left + group.width() * 0.49652f, group.top + group.height() * 0.07907f, group.left + group.width() * 0.51483f, group.top + group.height() * 0.07907f);
                bezier5Path.cubicTo(group.left + group.width() * 0.51864f, group.top + group.height() * 0.07907f, group.left + group.width() * 0.52244f, group.top + group.height() * 0.07961f, group.left + group.width() * 0.52614f, group.top + group.height() * 0.08067f);
                bezier5Path.lineTo(group.left + group.width() * 0.94741f, group.top + group.height() * 0.20265f);
                bezier5Path.cubicTo(group.left + group.width() * 0.95794f, group.top + group.height() * 0.2057f, group.left + group.width() * 0.9667f, group.top + group.height() * 0.21275f, group.left + group.width() * 0.97205f, group.top + group.height() * 0.22249f);
                bezier5Path.cubicTo(group.left + group.width() * 0.97741f, group.top + group.height() * 0.23225f, group.left + group.width() * 0.97869f, group.top + group.height() * 0.24347f, group.left + group.width() * 0.97567f, group.top + group.height() * 0.25412f);
                bezier5Path.close();
                bezier5Path.moveTo(group.left + group.width() * 0.51504f, group.top + group.height() * 0.17133f);
                bezier5Path.lineTo(group.left + group.width() * 0.51591f, group.top + group.height() * 0.16826f);
                bezier5Path.cubicTo(group.left + group.width() * 0.52124f, group.top + group.height() * 0.16896f, group.left + group.width() * 0.52197f, group.top + group.height() * 0.16803f, group.left + group.width() * 0.5217f, group.top + group.height() * 0.16373f);
                bezier5Path.cubicTo(group.left + group.width() * 0.5216f, group.top + group.height() * 0.16087f, group.left + group.width() * 0.52135f, group.top + group.height() * 0.15669f, group.left + group.width() * 0.52104f, group.top + group.height() * 0.15283f);
                bezier5Path.lineTo(group.left + group.width() * 0.50435f, group.top + group.height() * 0.14802f);
                bezier5Path.cubicTo(group.left + group.width() * 0.50262f, group.top + group.height() * 0.15042f, group.left + group.width() * 0.50059f, group.top + group.height() * 0.15326f, group.left + group.width() * 0.49854f, group.top + group.height() * 0.15646f);
                bezier5Path.cubicTo(group.left + group.width() * 0.49603f, group.top + group.height() * 0.16031f, group.left + group.width() * 0.49595f, group.top + group.height() * 0.16159f, group.left + group.width() * 0.5021f, group.top + group.height() * 0.16424f);
                bezier5Path.lineTo(group.left + group.width() * 0.50121f, group.top + group.height() * 0.16732f);
                bezier5Path.lineTo(group.left + group.width() * 0.48171f, group.top + group.height() * 0.16169f);
                bezier5Path.lineTo(group.left + group.width() * 0.48261f, group.top + group.height() * 0.15858f);
                bezier5Path.cubicTo(group.left + group.width() * 0.48854f, group.top + group.height() * 0.15954f, group.left + group.width() * 0.48995f, group.top + group.height() * 0.15891f, group.left + group.width() * 0.49492f, group.top + group.height() * 0.15237f);
                bezier5Path.lineTo(group.left + group.width() * 0.52553f, group.top + group.height() * 0.11242f);
                bezier5Path.lineTo(group.left + group.width() * 0.53034f, group.top + group.height() * 0.11253f);
                bezier5Path.cubicTo(group.left + group.width() * 0.53152f, group.top + group.height() * 0.12951f, group.left + group.width() * 0.53256f, group.top + group.height() * 0.14637f, group.left + group.width() * 0.53391f, group.top + group.height() * 0.16311f);
                bezier5Path.cubicTo(group.left + group.width() * 0.53469f, group.top + group.height() * 0.17166f, group.left + group.width() * 0.5354f, group.top + group.height() * 0.17314f, group.left + group.width() * 0.54078f, group.top + group.height() * 0.17544f);
                bezier5Path.lineTo(group.left + group.width() * 0.53991f, group.top + group.height() * 0.1785f);
                bezier5Path.lineTo(group.left + group.width() * 0.51504f, group.top + group.height() * 0.17133f);
                bezier5Path.close();
                bezier5Path.moveTo(group.left + group.width() * 0.51969f, group.top + group.height() * 0.12677f);
                bezier5Path.lineTo(group.left + group.width() * 0.51942f, group.top + group.height() * 0.12671f);
                bezier5Path.cubicTo(group.left + group.width() * 0.51517f, group.top + group.height() * 0.13241f, group.left + group.width() * 0.51119f, group.top + group.height() * 0.13818f, group.left + group.width() * 0.50714f, group.top + group.height() * 0.14375f);
                bezier5Path.lineTo(group.left + group.width() * 0.52072f, group.top + group.height() * 0.14768f);
                bezier5Path.lineTo(group.left + group.width() * 0.51969f, group.top + group.height() * 0.12677f);
                bezier5Path.close();
                bezier5Path.moveTo(group.left + group.width() * 0.77006f, group.top + group.height() * 0.77555f);
                bezier5Path.lineTo(group.left + group.width() * 0.76917f, group.top + group.height() * 0.77863f);
                bezier5Path.cubicTo(group.left + group.width() * 0.76381f, group.top + group.height() * 0.77793f, group.left + group.width() * 0.7631f, group.top + group.height() * 0.77887f, group.left + group.width() * 0.76338f, group.top + group.height() * 0.78314f);
                bezier5Path.cubicTo(group.left + group.width() * 0.76349f, group.top + group.height() * 0.78602f, group.left + group.width() * 0.76372f, group.top + group.height() * 0.79015f, group.left + group.width() * 0.76409f, group.top + group.height() * 0.79409f);
                bezier5Path.lineTo(group.left + group.width() * 0.78071f, group.top + group.height() * 0.79889f);
                bezier5Path.cubicTo(group.left + group.width() * 0.78246f, group.top + group.height() * 0.79645f, group.left + group.width() * 0.7845f, group.top + group.height() * 0.79364f, group.left + group.width() * 0.78654f, group.top + group.height() * 0.79042f);
                bezier5Path.cubicTo(group.left + group.width() * 0.78905f, group.top + group.height() * 0.78657f, group.left + group.width() * 0.78912f, group.top + group.height() * 0.78526f, group.left + group.width() * 0.783f, group.top + group.height() * 0.78265f);
                bezier5Path.lineTo(group.left + group.width() * 0.78389f, group.top + group.height() * 0.77954f);
                bezier5Path.lineTo(group.left + group.width() * 0.80336f, group.top + group.height() * 0.78519f);
                bezier5Path.lineTo(group.left + group.width() * 0.80249f, group.top + group.height() * 0.78828f);
                bezier5Path.cubicTo(group.left + group.width() * 0.79654f, group.top + group.height() * 0.7873f, group.left + group.width() * 0.79512f, group.top + group.height() * 0.78795f, group.left + group.width() * 0.79016f, group.top + group.height() * 0.7945f);
                bezier5Path.lineTo(group.left + group.width() * 0.75953f, group.top + group.height() * 0.83446f);
                bezier5Path.lineTo(group.left + group.width() * 0.75478f, group.top + group.height() * 0.83435f);
                bezier5Path.cubicTo(group.left + group.width() * 0.75358f, group.top + group.height() * 0.81738f, group.left + group.width() * 0.75252f, group.top + group.height() * 0.80052f, group.left + group.width() * 0.75117f, group.top + group.height() * 0.78376f);
                bezier5Path.cubicTo(group.left + group.width() * 0.7504f, group.top + group.height() * 0.77519f, group.left + group.width() * 0.74969f, group.top + group.height() * 0.77374f, group.left + group.width() * 0.74433f, group.top + group.height() * 0.77145f);
                bezier5Path.lineTo(group.left + group.width() * 0.74519f, group.top + group.height() * 0.76835f);
                bezier5Path.lineTo(group.left + group.width() * 0.77006f, group.top + group.height() * 0.77555f);
                bezier5Path.close();
                bezier5Path.moveTo(group.left + group.width() * 0.76543f, group.top + group.height() * 0.82011f);
                bezier5Path.lineTo(group.left + group.width() * 0.76566f, group.top + group.height() * 0.82017f);
                bezier5Path.cubicTo(group.left + group.width() * 0.76993f, group.top + group.height() * 0.81447f, group.left + group.width() * 0.77391f, group.top + group.height() * 0.80869f, group.left + group.width() * 0.77797f, group.top + group.height() * 0.80314f);
                bezier5Path.lineTo(group.left + group.width() * 0.76439f, group.top + group.height() * 0.79918f);
                bezier5Path.lineTo(group.left + group.width() * 0.76543f, group.top + group.height() * 0.82011f);
                bezier5Path.close();
                bezier5Path.moveTo(group.left + group.width() * 0.68642f, group.top + group.height() * 0.57073f);
                bezier5Path.cubicTo(group.left + group.width() * 0.72373f, group.top + group.height() * 0.58152f, group.left + group.width() * 0.76264f, group.top + group.height() * 0.55976f, group.left + group.width() * 0.77333f, group.top + group.height() * 0.52212f);
                bezier5Path.cubicTo(group.left + group.width() * 0.79383f, group.top + group.height() * 0.4498f, group.left + group.width() * 0.70192f, group.top + group.height() * 0.39568f, group.left + group.width() * 0.68762f, group.top + group.height() * 0.31605f);
                bezier5Path.cubicTo(group.left + group.width() * 0.63944f, group.top + group.height() * 0.37067f, group.left + group.width() * 0.52733f, group.top + group.height() * 0.37256f, group.left + group.width() * 0.5068f, group.top + group.height() * 0.44496f);
                bezier5Path.cubicTo(group.left + group.width() * 0.4961f, group.top + group.height() * 0.4826f, group.left + group.width() * 0.51767f, group.top + group.height() * 0.52187f, group.left + group.width() * 0.55495f, group.top + group.height() * 0.53267f);
                bezier5Path.cubicTo(group.left + group.width() * 0.57664f, group.top + group.height() * 0.53895f, group.left + group.width() * 0.59865f, group.top + group.height() * 0.53399f, group.left + group.width() * 0.61558f, group.top + group.height() * 0.5215f);
                bezier5Path.cubicTo(group.left + group.width() * 0.6136f, group.top + group.height() * 0.52841f, group.left + group.width() * 0.61149f, group.top + group.height() * 0.5358f, group.left + group.width() * 0.60938f, group.top + group.height() * 0.54327f);
                bezier5Path.cubicTo(group.left + group.width() * 0.60156f, group.top + group.height() * 0.57077f, group.left + group.width() * 0.56299f, group.top + group.height() * 0.5988f, group.left + group.width() * 0.52043f, group.top + group.height() * 0.59472f);
                bezier5Path.lineTo(group.left + group.width() * 0.68316f, group.top + group.height() * 0.64183f);
                bezier5Path.cubicTo(group.left + group.width() * 0.64491f, group.top + group.height() * 0.62253f, group.left + group.width() * 0.62693f, group.top + group.height() * 0.5781f, group.left + group.width() * 0.63472f, group.top + group.height() * 0.55061f);
                bezier5Path.cubicTo(group.left + group.width() * 0.63687f, group.top + group.height() * 0.54316f, group.left + group.width() * 0.63894f, group.top + group.height() * 0.53577f, group.left + group.width() * 0.64088f, group.top + group.height() * 0.52886f);
                bezier5Path.cubicTo(group.left + group.width() * 0.64865f, group.top + group.height() * 0.54848f, group.left + group.width() * 0.66475f, group.top + group.height() * 0.56445f, group.left + group.width() * 0.68642f, group.top + group.height() * 0.57073f);
                bezier5Path.close();
                bezier5Path.moveTo(group.left + group.width() * 0.50472f, group.top + group.height() * 0.2367f);
                bezier5Path.cubicTo(group.left + group.width() * 0.51147f, group.top + group.height() * 0.23865f, group.left + group.width() * 0.51857f, group.top + group.height() * 0.23469f, group.left + group.width() * 0.5205f, group.top + group.height() * 0.22786f);
                bezier5Path.cubicTo(group.left + group.width() * 0.52422f, group.top + group.height() * 0.21473f, group.left + group.width() * 0.50753f, group.top + group.height() * 0.20489f, group.left + group.width() * 0.50492f, group.top + group.height() * 0.19041f);
                bezier5Path.cubicTo(group.left + group.width() * 0.49615f, group.top + group.height() * 0.20034f, group.left + group.width() * 0.4758f, group.top + group.height() * 0.20069f, group.left + group.width() * 0.47207f, group.top + group.height() * 0.21384f);
                bezier5Path.cubicTo(group.left + group.width() * 0.47013f, group.top + group.height() * 0.22066f, group.left + group.width() * 0.47404f, group.top + group.height() * 0.22781f, group.left + group.width() * 0.48081f, group.top + group.height() * 0.22978f);
                bezier5Path.cubicTo(group.left + group.width() * 0.48478f, group.top + group.height() * 0.23092f, group.left + group.width() * 0.48877f, group.top + group.height() * 0.23002f, group.left + group.width() * 0.49184f, group.top + group.height() * 0.22774f);
                bezier5Path.cubicTo(group.left + group.width() * 0.49147f, group.top + group.height() * 0.22899f, group.left + group.width() * 0.4911f, group.top + group.height() * 0.23035f, group.left + group.width() * 0.49072f, group.top + group.height() * 0.2317f);
                bezier5Path.cubicTo(group.left + group.width() * 0.4893f, group.top + group.height() * 0.23671f, group.left + group.width() * 0.48229f, group.top + group.height() * 0.2418f, group.left + group.width() * 0.47456f, group.top + group.height() * 0.24105f);
                bezier5Path.lineTo(group.left + group.width() * 0.50411f, group.top + group.height() * 0.24962f);
                bezier5Path.cubicTo(group.left + group.width() * 0.49717f, group.top + group.height() * 0.24611f, group.left + group.width() * 0.49391f, group.top + group.height() * 0.23803f, group.left + group.width() * 0.49531f, group.top + group.height() * 0.23304f);
                bezier5Path.cubicTo(group.left + group.width() * 0.49571f, group.top + group.height() * 0.23169f, group.left + group.width() * 0.49608f, group.top + group.height() * 0.23034f, group.left + group.width() * 0.49643f, group.top + group.height() * 0.22909f);
                bezier5Path.cubicTo(group.left + group.width() * 0.49784f, group.top + group.height() * 0.23265f, group.left + group.width() * 0.50078f, group.top + group.height() * 0.23556f, group.left + group.width() * 0.50472f, group.top + group.height() * 0.2367f);
                bezier5Path.close();
                bezier5Path.moveTo(group.left + group.width() * 0.78026f, group.top + group.height() * 0.71015f);
                bezier5Path.cubicTo(group.left + group.width() * 0.77351f, group.top + group.height() * 0.70821f, group.left + group.width() * 0.76641f, group.top + group.height() * 0.71216f, group.left + group.width() * 0.76448f, group.top + group.height() * 0.719f);
                bezier5Path.cubicTo(group.left + group.width() * 0.76075f, group.top + group.height() * 0.73214f, group.left + group.width() * 0.77746f, group.top + group.height() * 0.74198f, group.left + group.width() * 0.78005f, group.top + group.height() * 0.75645f);
                bezier5Path.cubicTo(group.left + group.width() * 0.78881f, group.top + group.height() * 0.74652f, group.left + group.width() * 0.80918f, group.top + group.height() * 0.74617f, group.left + group.width() * 0.81293f, group.top + group.height() * 0.73301f);
                bezier5Path.cubicTo(group.left + group.width() * 0.81485f, group.top + group.height() * 0.72619f, group.left + group.width() * 0.81093f, group.top + group.height() * 0.71905f, group.left + group.width() * 0.80418f, group.top + group.height() * 0.71708f);
                bezier5Path.cubicTo(group.left + group.width() * 0.8002f, group.top + group.height() * 0.71594f, group.left + group.width() * 0.79621f, group.top + group.height() * 0.71684f, group.left + group.width() * 0.79314f, group.top + group.height() * 0.71911f);
                bezier5Path.cubicTo(group.left + group.width() * 0.79351f, group.top + group.height() * 0.71785f, group.left + group.width() * 0.79388f, group.top + group.height() * 0.71651f, group.left + group.width() * 0.79427f, group.top + group.height() * 0.71516f);
                bezier5Path.cubicTo(group.left + group.width() * 0.79568f, group.top + group.height() * 0.71015f, group.left + group.width() * 0.8027f, group.top + group.height() * 0.70506f, group.left + group.width() * 0.81043f, group.top + group.height() * 0.7058f);
                bezier5Path.lineTo(group.left + group.width() * 0.78086f, group.top + group.height() * 0.69724f);
                bezier5Path.cubicTo(group.left + group.width() * 0.78781f, group.top + group.height() * 0.70074f, group.left + group.width() * 0.79107f, group.top + group.height() * 0.70882f, group.left + group.width() * 0.78966f, group.top + group.height() * 0.71383f);
                bezier5Path.cubicTo(group.left + group.width() * 0.78926f, group.top + group.height() * 0.71517f, group.left + group.width() * 0.78889f, group.top + group.height() * 0.71651f, group.left + group.width() * 0.78853f, group.top + group.height() * 0.71777f);
                bezier5Path.cubicTo(group.left + group.width() * 0.78713f, group.top + group.height() * 0.71421f, group.left + group.width() * 0.7842f, group.top + group.height() * 0.71129f, group.left + group.width() * 0.78026f, group.top + group.height() * 0.71015f);
                bezier5Path.close();
                bezier5Path.moveTo(group.left + group.width() * 0.34308f, group.top + group.height() * 0.26605f);
                bezier5Path.cubicTo(group.left + group.width() * 0.35139f, group.top + group.height() * 0.25344f, group.left + group.width() * 0.37434f, group.top + group.height() * 0.24979f, group.left + group.width() * 0.3765f, group.top + group.height() * 0.23434f);
                bezier5Path.cubicTo(group.left + group.width() * 0.37762f, group.top + group.height() * 0.22631f, group.left + group.width() * 0.37205f, group.top + group.height() * 0.21887f, group.left + group.width() * 0.36412f, group.top + group.height() * 0.21774f);
                bezier5Path.cubicTo(group.left + group.width() * 0.35725f, group.top + group.height() * 0.21676f, group.left + group.width() * 0.35086f, group.top + group.height() * 0.2208f, group.left + group.width() * 0.3485f, group.top + group.height() * 0.22705f);
                bezier5Path.cubicTo(group.left + group.width() * 0.34793f, group.top + group.height() * 0.22038f, group.left + group.width() * 0.34288f, group.top + group.height() * 0.21473f, group.left + group.width() * 0.33604f, group.top + group.height() * 0.21376f);
                bezier5Path.cubicTo(group.left + group.width() * 0.32807f, group.top + group.height() * 0.21263f, group.left + group.width() * 0.32072f, group.top + group.height() * 0.21823f, group.left + group.width() * 0.3196f, group.top + group.height() * 0.22627f);
                bezier5Path.cubicTo(group.left + group.width() * 0.31747f, group.top + group.height() * 0.24169f, group.left + group.width() * 0.33786f, group.top + group.height() * 0.25012f, group.left + group.width() * 0.34308f, group.top + group.height() * 0.26605f);
                bezier5Path.close();
                
                paint.reset();
                paint.setFlags(Paint.ANTI_ALIAS_FLAG);
                paint.setStyle(Paint.Style.FILL);
                paint.setColor(StyleKit.oroScuro);
                canvas.drawPath(bezier5Path, paint);
            }
            
            // Bezier 6
            if (highlited) {
                RectF bezier6Rect = CacheForGiochi.bezier6Rect;
                bezier6Rect.set(group.left + (float) Math.floor(group.width() * 0.04423f - 0.26f) + 0.76f,
                    group.top + (float) Math.floor(group.height() * 0.12862f + 0.29f) + 0.21f,
                    group.left + (float) Math.floor(group.width() * 0.38384f - 0.5f) + 1f,
                    group.top + (float) Math.floor(group.height() * 0.39796f - 0.5f) + 1f);
                Path bezier6Path = CacheForGiochi.bezier6Path;
                bezier6Path.reset();
                bezier6Path.moveTo(group.left + group.width() * 0.07942f, group.top + group.height() * 0.33647f);
                bezier6Path.cubicTo(group.left + group.width() * 0.08087f, group.top + group.height() * 0.34205f, group.left + group.width() * 0.06781f, group.top + group.height() * 0.37273f, group.left + group.width() * 0.06451f, group.top + group.height() * 0.37368f);
                bezier6Path.cubicTo(group.left + group.width() * 0.06781f, group.top + group.height() * 0.37273f, group.left + group.width() * 0.09397f, group.top + group.height() * 0.39236f, group.left + group.width() * 0.09541f, group.top + group.height() * 0.39796f);
                bezier6Path.cubicTo(group.left + group.width() * 0.09397f, group.top + group.height() * 0.39236f, group.left + group.width() * 0.10702f, group.top + group.height() * 0.36169f, group.left + group.width() * 0.11032f, group.top + group.height() * 0.36075f);
                bezier6Path.cubicTo(group.left + group.width() * 0.10702f, group.top + group.height() * 0.36169f, group.left + group.width() * 0.08087f, group.top + group.height() * 0.34205f, group.left + group.width() * 0.07942f, group.top + group.height() * 0.33647f);
                bezier6Path.close();
                bezier6Path.moveTo(group.left + group.width() * 0.34301f, group.top + group.height() * 0.26464f);
                bezier6Path.cubicTo(group.left + group.width() * 0.35138f, group.top + group.height() * 0.25201f, group.left + group.width() * 0.3745f, group.top + group.height() * 0.24836f, group.left + group.width() * 0.37667f, group.top + group.height() * 0.23289f);
                bezier6Path.cubicTo(group.left + group.width() * 0.37779f, group.top + group.height() * 0.22483f, group.left + group.width() * 0.37219f, group.top + group.height() * 0.21739f, group.left + group.width() * 0.3642f, group.top + group.height() * 0.21625f);
                bezier6Path.cubicTo(group.left + group.width() * 0.35728f, group.top + group.height() * 0.21527f, group.left + group.width() * 0.35085f, group.top + group.height() * 0.21932f, group.left + group.width() * 0.34846f, group.top + group.height() * 0.22557f);
                bezier6Path.cubicTo(group.left + group.width() * 0.3479f, group.top + group.height() * 0.2189f, group.left + group.width() * 0.34281f, group.top + group.height() * 0.21323f, group.left + group.width() * 0.33592f, group.top + group.height() * 0.21226f);
                bezier6Path.cubicTo(group.left + group.width() * 0.32789f, group.top + group.height() * 0.21113f, group.left + group.width() * 0.32048f, group.top + group.height() * 0.21675f, group.left + group.width() * 0.31935f, group.top + group.height() * 0.2248f);
                bezier6Path.cubicTo(group.left + group.width() * 0.31721f, group.top + group.height() * 0.24025f, group.left + group.width() * 0.33775f, group.top + group.height() * 0.24869f, group.left + group.width() * 0.34301f, group.top + group.height() * 0.26464f);
                bezier6Path.close();
                bezier6Path.moveTo(group.left + group.width() * 0.35577f, group.top + group.height() * 0.14421f);
                bezier6Path.cubicTo(group.left + group.width() * 0.35232f, group.top + group.height() * 0.15047f, group.left + group.width() * 0.34915f, group.top + group.height() * 0.15676f, group.left + group.width() * 0.34589f, group.top + group.height() * 0.16285f);
                bezier6Path.lineTo(group.left + group.width() * 0.35998f, group.top + group.height() * 0.16483f);
                bezier6Path.lineTo(group.left + group.width() * 0.35604f, group.top + group.height() * 0.14424f);
                bezier6Path.lineTo(group.left + group.width() * 0.35577f, group.top + group.height() * 0.14421f);
                bezier6Path.close();
                bezier6Path.moveTo(group.left + group.width() * 0.37529f, group.top + group.height() * 0.17828f);
                bezier6Path.cubicTo(group.left + group.width() * 0.37725f, group.top + group.height() * 0.18666f, group.left + group.width() * 0.37815f, group.top + group.height() * 0.18803f, group.left + group.width() * 0.38384f, group.top + group.height() * 0.18955f);
                bezier6Path.lineTo(group.left + group.width() * 0.3834f, group.top + group.height() * 0.19271f);
                bezier6Path.lineTo(group.left + group.width() * 0.35759f, group.top + group.height() * 0.18909f);
                bezier6Path.lineTo(group.left + group.width() * 0.35803f, group.top + group.height() * 0.18593f);
                bezier6Path.cubicTo(group.left + group.width() * 0.36345f, group.top + group.height() * 0.18587f, group.left + group.width() * 0.36406f, group.top + group.height() * 0.18485f, group.left + group.width() * 0.36318f, group.top + group.height() * 0.18062f);
                bezier6Path.cubicTo(group.left + group.width() * 0.36268f, group.top + group.height() * 0.1778f, group.left + group.width() * 0.36186f, group.top + group.height() * 0.17369f, group.left + group.width() * 0.36102f, group.top + group.height() * 0.1699f);
                bezier6Path.lineTo(group.left + group.width() * 0.3437f, group.top + group.height() * 0.16747f);
                bezier6Path.cubicTo(group.left + group.width() * 0.3423f, group.top + group.height() * 0.1701f, group.left + group.width() * 0.34068f, group.top + group.height() * 0.1732f, group.left + group.width() * 0.33908f, group.top + group.height() * 0.17667f);
                bezier6Path.cubicTo(group.left + group.width() * 0.33864f, group.top + group.height() * 0.1776f, group.left + group.width() * 0.3383f, group.top + group.height() * 0.17838f, group.left + group.width() * 0.33812f, group.top + group.height() * 0.17906f);
                bezier6Path.cubicTo(group.left + group.width() * 0.33747f, group.top + group.height() * 0.18143f, group.left + group.width() * 0.33865f, group.top + group.height() * 0.18251f, group.left + group.width() * 0.3437f, group.top + group.height() * 0.18388f);
                bezier6Path.lineTo(group.left + group.width() * 0.34325f, group.top + group.height() * 0.18707f);
                bezier6Path.lineTo(group.left + group.width() * 0.32302f, group.top + group.height() * 0.18422f);
                bezier6Path.lineTo(group.left + group.width() * 0.32347f, group.top + group.height() * 0.18102f);
                bezier6Path.cubicTo(group.left + group.width() * 0.32813f, group.top + group.height() * 0.1811f, group.left + group.width() * 0.32999f, group.top + group.height() * 0.18064f, group.left + group.width() * 0.33244f, group.top + group.height() * 0.17715f);
                bezier6Path.cubicTo(group.left + group.width() * 0.33317f, group.top + group.height() * 0.1761f, group.left + group.width() * 0.33397f, group.top + group.height() * 0.17478f, group.left + group.width() * 0.3349f, group.top + group.height() * 0.17313f);
                bezier6Path.lineTo(group.left + group.width() * 0.35989f, group.top + group.height() * 0.12919f);
                bezier6Path.lineTo(group.left + group.width() * 0.36469f, group.top + group.height() * 0.12862f);
                bezier6Path.cubicTo(group.left + group.width() * 0.36823f, group.top + group.height() * 0.14529f, group.left + group.width() * 0.37161f, group.top + group.height() * 0.16187f, group.left + group.width() * 0.37529f, group.top + group.height() * 0.17828f);
                bezier6Path.close();
                bezier6Path.moveTo(group.left + group.width() * 0.05907f, group.top + group.height() * 0.27651f);
                bezier6Path.cubicTo(group.left + group.width() * 0.05822f, group.top + group.height() * 0.28372f, group.left + group.width() * 0.05785f, group.top + group.height() * 0.29076f, group.left + group.width() * 0.05733f, group.top + group.height() * 0.29767f);
                bezier6Path.lineTo(group.left + group.width() * 0.07102f, group.top + group.height() * 0.2937f);
                bezier6Path.lineTo(group.left + group.width() * 0.05907f, group.top + group.height() * 0.27651f);
                bezier6Path.close();
                bezier6Path.moveTo(group.left + group.width() * 0.09045f, group.top + group.height() * 0.29975f);
                bezier6Path.cubicTo(group.left + group.width() * 0.09562f, group.top + group.height() * 0.3066f, group.left + group.width() * 0.09702f, group.top + group.height() * 0.30748f, group.left + group.width() * 0.10284f, group.top + group.height() * 0.30654f);
                bezier6Path.lineTo(group.left + group.width() * 0.10372f, group.top + group.height() * 0.30963f);
                bezier6Path.lineTo(group.left + group.width() * 0.07868f, group.top + group.height() * 0.31685f);
                bezier6Path.lineTo(group.left + group.width() * 0.07779f, group.top + group.height() * 0.31376f);
                bezier6Path.cubicTo(group.left + group.width() * 0.08272f, group.top + group.height() * 0.31152f, group.left + group.width() * 0.08287f, group.top + group.height() * 0.31033f, group.left + group.width() * 0.08033f, group.top + group.height() * 0.30683f);
                bezier6Path.cubicTo(group.left + group.width() * 0.07874f, group.top + group.height() * 0.30446f, group.left + group.width() * 0.07633f, group.top + group.height() * 0.30104f, group.left + group.width() * 0.07402f, group.top + group.height() * 0.29792f);
                bezier6Path.cubicTo(group.left + group.width() * 0.07402f, group.top + group.height() * 0.29792f, group.left + group.width() * 0.07374f, group.top + group.height() * 0.29801f, group.left + group.width() * 0.07324f, group.top + group.height() * 0.29815f);
                bezier6Path.cubicTo(group.left + group.width() * 0.06992f, group.top + group.height() * 0.29911f, group.left + group.width() * 0.05721f, group.top + group.height() * 0.30278f, group.left + group.width() * 0.05721f, group.top + group.height() * 0.30278f);
                bezier6Path.cubicTo(group.left + group.width() * 0.057f, group.top + group.height() * 0.30574f, group.left + group.width() * 0.05677f, group.top + group.height() * 0.30923f, group.left + group.width() * 0.05673f, group.top + group.height() * 0.31306f);
                bezier6Path.cubicTo(group.left + group.width() * 0.05661f, group.top + group.height() * 0.31769f, group.left + group.width() * 0.05723f, group.top + group.height() * 0.31881f, group.left + group.width() * 0.06386f, group.top + group.height() * 0.31777f);
                bezier6Path.lineTo(group.left + group.width() * 0.06474f, group.top + group.height() * 0.32085f);
                bezier6Path.lineTo(group.left + group.width() * 0.04511f, group.top + group.height() * 0.32652f);
                bezier6Path.lineTo(group.left + group.width() * 0.04423f, group.top + group.height() * 0.32341f);
                bezier6Path.cubicTo(group.left + group.width() * 0.0498f, group.top + group.height() * 0.32104f, group.left + group.width() * 0.05068f, group.top + group.height() * 0.31975f, group.left + group.width() * 0.05146f, group.top + group.height() * 0.31154f);
                bezier6Path.lineTo(group.left + group.width() * 0.0565f, group.top + group.height() * 0.26119f);
                bezier6Path.cubicTo(group.left + group.width() * 0.0565f, group.top + group.height() * 0.26119f, group.left + group.width() * 0.05966f, group.top + group.height() * 0.2593f, group.left + group.width() * 0.06047f, group.top + group.height() * 0.25882f);
                bezier6Path.cubicTo(group.left + group.width() * 0.07064f, group.top + group.height() * 0.27249f, group.left + group.width() * 0.08046f, group.top + group.height() * 0.28626f, group.left + group.width() * 0.09045f, group.top + group.height() * 0.29975f);
                bezier6Path.close();
                
                paint.reset();
                paint.setFlags(Paint.ANTI_ALIAS_FLAG);
                paint.setStyle(Paint.Style.FILL);
                paint.setColor(StyleKit.rosso);
                canvas.drawPath(bezier6Path, paint);
            }
        }
    }
    
    private static class CacheForEventi {
        private static Paint paint = new Paint();
        private static RectF group3 = new RectF();
        private static RectF bezier2Rect = new RectF();
        private static Path bezier2Path = new Path();
        private static RectF group2 = new RectF();
        private static RectF bezier3Rect = new RectF();
        private static Path bezier3Path = new Path();
        private static RectF bezier4Rect = new RectF();
        private static Path bezier4Path = new Path();
    }
    
    
    public static void drawEventi(Canvas canvas, RectF frame, boolean highlited) {
        // General Declarations
        Paint paint = CacheForEventi.paint;
        
        // Local Colors
        int fillColor6 = Color.argb(255, 52, 52, 52);
        
        // Group
        {
            // Empty.
        }
        
        // Group 3
        {
            RectF group3 = CacheForEventi.group3;
            group3.set(frame.left + 2f,
                frame.top + 6.74f,
                frame.right - 2.39f,
                frame.bottom - 3.96f);
            
            // Bezier 2
            RectF bezier2Rect = CacheForEventi.bezier2Rect;
            bezier2Rect.set(group3.left,
                group3.top + (float) Math.floor(group3.height() * 0.12287f + 0.24f) + 0.26f,
                group3.left + (float) Math.floor(group3.width() - 0.11f) + 0.61f,
                group3.top + (float) Math.floor(group3.height() * 0.86258f + 0.22f) + 0.28f);
            Path bezier2Path = CacheForEventi.bezier2Path;
            bezier2Path.reset();
            bezier2Path.moveTo(group3.left + group3.width() * 0.73942f, group3.top + group3.height() * 0.15724f);
            bezier2Path.lineTo(group3.left + group3.width() * 0.67727f, group3.top + group3.height() * 0.15724f);
            bezier2Path.lineTo(group3.left + group3.width() * 0.70835f, group3.top + group3.height() * 0.17816f);
            bezier2Path.lineTo(group3.left + group3.width() * 0.73942f, group3.top + group3.height() * 0.15724f);
            bezier2Path.close();
            bezier2Path.moveTo(group3.left + group3.width() * 0.53225f, group3.top + group3.height() * 0.15724f);
            bezier2Path.lineTo(group3.left + group3.width() * 0.4701f, group3.top + group3.height() * 0.15724f);
            bezier2Path.lineTo(group3.left + group3.width() * 0.50117f, group3.top + group3.height() * 0.17816f);
            bezier2Path.lineTo(group3.left + group3.width() * 0.53225f, group3.top + group3.height() * 0.15724f);
            bezier2Path.close();
            bezier2Path.moveTo(group3.left + group3.width() * 0.32508f, group3.top + group3.height() * 0.15724f);
            bezier2Path.lineTo(group3.left + group3.width() * 0.26294f, group3.top + group3.height() * 0.15724f);
            bezier2Path.lineTo(group3.left + group3.width() * 0.29401f, group3.top + group3.height() * 0.17816f);
            bezier2Path.lineTo(group3.left + group3.width() * 0.32508f, group3.top + group3.height() * 0.15724f);
            bezier2Path.close();
            bezier2Path.moveTo(group3.left + group3.width() * 0.79671f, group3.top + group3.height() * 0.15869f);
            bezier2Path.lineTo(group3.left + group3.width() * 0.73807f, group3.top + group3.height() * 0.19816f);
            bezier2Path.lineTo(group3.left + group3.width() * 0.79671f, group3.top + group3.height() * 0.23763f);
            bezier2Path.lineTo(group3.left + group3.width() * 0.79671f, group3.top + group3.height() * 0.19905f);
            bezier2Path.lineTo(group3.left + group3.width() * 0.79671f, group3.top + group3.height() * 0.15869f);
            bezier2Path.close();
            bezier2Path.moveTo(group3.left + group3.width() * 0.61999f, group3.top + group3.height() * 0.1587f);
            bezier2Path.lineTo(group3.left + group3.width() * 0.61999f, group3.top + group3.height() * 0.23763f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.61999f, group3.top + group3.height() * 0.23763f, group3.left + group3.width() * 0.64748f, group3.top + group3.height() * 0.21913f, group3.left + group3.width() * 0.66481f, group3.top + group3.height() * 0.20746f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.67279f, group3.top + group3.height() * 0.20209f, group3.left + group3.width() * 0.67862f, group3.top + group3.height() * 0.19816f, group3.left + group3.width() * 0.67862f, group3.top + group3.height() * 0.19816f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.67862f, group3.top + group3.height() * 0.19816f, group3.left + group3.width() * 0.67465f, group3.top + group3.height() * 0.19549f, group3.left + group3.width() * 0.66877f, group3.top + group3.height() * 0.19153f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.65206f, group3.top + group3.height() * 0.18028f, group3.left + group3.width() * 0.61999f, group3.top + group3.height() * 0.1587f, group3.left + group3.width() * 0.61999f, group3.top + group3.height() * 0.1587f);
            bezier2Path.close();
            bezier2Path.moveTo(group3.left + group3.width() * 0.41282f, group3.top + group3.height() * 0.1587f);
            bezier2Path.lineTo(group3.left + group3.width() * 0.41282f, group3.top + group3.height() * 0.23763f);
            bezier2Path.lineTo(group3.left + group3.width() * 0.47146f, group3.top + group3.height() * 0.19816f);
            bezier2Path.lineTo(group3.left + group3.width() * 0.41282f, group3.top + group3.height() * 0.1587f);
            bezier2Path.close();
            bezier2Path.moveTo(group3.left + group3.width() * 0.20565f, group3.top + group3.height() * 0.1587f);
            bezier2Path.lineTo(group3.left + group3.width() * 0.20565f, group3.top + group3.height() * 0.16521f);
            bezier2Path.lineTo(group3.left + group3.width() * 0.20565f, group3.top + group3.height() * 0.23763f);
            bezier2Path.lineTo(group3.left + group3.width() * 0.26429f, group3.top + group3.height() * 0.19816f);
            bezier2Path.lineTo(group3.left + group3.width() * 0.20565f, group3.top + group3.height() * 0.1587f);
            bezier2Path.close();
            bezier2Path.moveTo(group3.left + group3.width() * 0.58954f, group3.top + group3.height() * 0.15869f);
            bezier2Path.lineTo(group3.left + group3.width() * 0.53091f, group3.top + group3.height() * 0.19816f);
            bezier2Path.lineTo(group3.left + group3.width() * 0.58954f, group3.top + group3.height() * 0.23763f);
            bezier2Path.lineTo(group3.left + group3.width() * 0.58954f, group3.top + group3.height() * 0.15869f);
            bezier2Path.close();
            bezier2Path.moveTo(group3.left + group3.width() * 0.38237f, group3.top + group3.height() * 0.15869f);
            bezier2Path.lineTo(group3.left + group3.width() * 0.32374f, group3.top + group3.height() * 0.19816f);
            bezier2Path.lineTo(group3.left + group3.width() * 0.38237f, group3.top + group3.height() * 0.23763f);
            bezier2Path.lineTo(group3.left + group3.width() * 0.38237f, group3.top + group3.height() * 0.15869f);
            bezier2Path.close();
            bezier2Path.moveTo(group3.left + group3.width() * 0.70835f, group3.top + group3.height() * 0.21817f);
            bezier2Path.lineTo(group3.left + group3.width() * 0.67727f, group3.top + group3.height() * 0.23909f);
            bezier2Path.lineTo(group3.left + group3.width() * 0.73942f, group3.top + group3.height() * 0.23909f);
            bezier2Path.lineTo(group3.left + group3.width() * 0.70835f, group3.top + group3.height() * 0.21817f);
            bezier2Path.close();
            bezier2Path.moveTo(group3.left + group3.width() * 0.50118f, group3.top + group3.height() * 0.21817f);
            bezier2Path.lineTo(group3.left + group3.width() * 0.4701f, group3.top + group3.height() * 0.23909f);
            bezier2Path.lineTo(group3.left + group3.width() * 0.53225f, group3.top + group3.height() * 0.23909f);
            bezier2Path.lineTo(group3.left + group3.width() * 0.50118f, group3.top + group3.height() * 0.21817f);
            bezier2Path.close();
            bezier2Path.moveTo(group3.left + group3.width() * 0.29401f, group3.top + group3.height() * 0.21817f);
            bezier2Path.lineTo(group3.left + group3.width() * 0.26294f, group3.top + group3.height() * 0.23909f);
            bezier2Path.lineTo(group3.left + group3.width() * 0.32509f, group3.top + group3.height() * 0.23909f);
            bezier2Path.lineTo(group3.left + group3.width() * 0.29401f, group3.top + group3.height() * 0.21817f);
            bezier2Path.close();
            bezier2Path.moveTo(group3.left + group3.width() * 0.9265f, group3.top + group3.height() * 0.59746f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.91968f, group3.top + group3.height() * 0.59746f, group3.left + group3.width() * 0.91416f, group3.top + group3.height() * 0.6037f, group3.left + group3.width() * 0.91416f, group3.top + group3.height() * 0.61139f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.91416f, group3.top + group3.height() * 0.61908f, group3.left + group3.width() * 0.91968f, group3.top + group3.height() * 0.62531f, group3.left + group3.width() * 0.9265f, group3.top + group3.height() * 0.62531f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.93331f, group3.top + group3.height() * 0.62531f, group3.left + group3.width() * 0.93884f, group3.top + group3.height() * 0.61908f, group3.left + group3.width() * 0.93884f, group3.top + group3.height() * 0.61139f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.93884f, group3.top + group3.height() * 0.6037f, group3.left + group3.width() * 0.93331f, group3.top + group3.height() * 0.59746f, group3.left + group3.width() * 0.9265f, group3.top + group3.height() * 0.59746f);
            bezier2Path.close();
            bezier2Path.moveTo(group3.left + group3.width() * 0.0735f, group3.top + group3.height() * 0.59746f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.06669f, group3.top + group3.height() * 0.59746f, group3.left + group3.width() * 0.06116f, group3.top + group3.height() * 0.6037f, group3.left + group3.width() * 0.06116f, group3.top + group3.height() * 0.61139f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.06116f, group3.top + group3.height() * 0.61908f, group3.left + group3.width() * 0.06669f, group3.top + group3.height() * 0.62531f, group3.left + group3.width() * 0.0735f, group3.top + group3.height() * 0.62531f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.08032f, group3.top + group3.height() * 0.62531f, group3.left + group3.width() * 0.08584f, group3.top + group3.height() * 0.61908f, group3.left + group3.width() * 0.08584f, group3.top + group3.height() * 0.61139f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.08584f, group3.top + group3.height() * 0.6037f, group3.left + group3.width() * 0.08032f, group3.top + group3.height() * 0.59746f, group3.left + group3.width() * 0.0735f, group3.top + group3.height() * 0.59746f);
            bezier2Path.close();
            bezier2Path.moveTo(group3.left + group3.width() * 0.95537f, group3.top + group3.height() * 0.61139f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.95537f, group3.top + group3.height() * 0.62935f, group3.left + group3.width() * 0.94242f, group3.top + group3.height() * 0.64397f, group3.left + group3.width() * 0.9265f, group3.top + group3.height() * 0.64397f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.91058f, group3.top + group3.height() * 0.64397f, group3.left + group3.width() * 0.89763f, group3.top + group3.height() * 0.62935f, group3.left + group3.width() * 0.89763f, group3.top + group3.height() * 0.61139f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.89763f, group3.top + group3.height() * 0.59342f, group3.left + group3.width() * 0.91058f, group3.top + group3.height() * 0.57881f, group3.left + group3.width() * 0.9265f, group3.top + group3.height() * 0.57881f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.94242f, group3.top + group3.height() * 0.57881f, group3.left + group3.width() * 0.95537f, group3.top + group3.height() * 0.59342f, group3.left + group3.width() * 0.95537f, group3.top + group3.height() * 0.61139f);
            bezier2Path.close();
            bezier2Path.moveTo(group3.left + group3.width() * 0.10237f, group3.top + group3.height() * 0.61139f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.10237f, group3.top + group3.height() * 0.62935f, group3.left + group3.width() * 0.08942f, group3.top + group3.height() * 0.64397f, group3.left + group3.width() * 0.0735f, group3.top + group3.height() * 0.64397f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.05758f, group3.top + group3.height() * 0.64397f, group3.left + group3.width() * 0.04463f, group3.top + group3.height() * 0.62935f, group3.left + group3.width() * 0.04463f, group3.top + group3.height() * 0.61139f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.04463f, group3.top + group3.height() * 0.59342f, group3.left + group3.width() * 0.05758f, group3.top + group3.height() * 0.57881f, group3.left + group3.width() * 0.0735f, group3.top + group3.height() * 0.57881f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.08942f, group3.top + group3.height() * 0.57881f, group3.left + group3.width() * 0.10237f, group3.top + group3.height() * 0.59342f, group3.left + group3.width() * 0.10237f, group3.top + group3.height() * 0.61139f);
            bezier2Path.close();
            bezier2Path.moveTo(group3.left + group3.width() * 0.9265f, group3.top + group3.height() * 0.55591f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.89938f, group3.top + group3.height() * 0.55591f, group3.left + group3.width() * 0.87732f, group3.top + group3.height() * 0.5808f, group3.left + group3.width() * 0.87732f, group3.top + group3.height() * 0.61139f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.87732f, group3.top + group3.height() * 0.64199f, group3.left + group3.width() * 0.89938f, group3.top + group3.height() * 0.66688f, group3.left + group3.width() * 0.9265f, group3.top + group3.height() * 0.66688f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.95361f, group3.top + group3.height() * 0.66688f, group3.left + group3.width() * 0.97567f, group3.top + group3.height() * 0.64199f, group3.left + group3.width() * 0.97567f, group3.top + group3.height() * 0.61139f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.97567f, group3.top + group3.height() * 0.5808f, group3.left + group3.width() * 0.95361f, group3.top + group3.height() * 0.55591f, group3.left + group3.width() * 0.9265f, group3.top + group3.height() * 0.55591f);
            bezier2Path.close();
            bezier2Path.moveTo(group3.left + group3.width() * 0.0735f, group3.top + group3.height() * 0.55591f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.04639f, group3.top + group3.height() * 0.55591f, group3.left + group3.width() * 0.02433f, group3.top + group3.height() * 0.5808f, group3.left + group3.width() * 0.02433f, group3.top + group3.height() * 0.61139f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.02433f, group3.top + group3.height() * 0.64199f, group3.left + group3.width() * 0.04639f, group3.top + group3.height() * 0.66688f, group3.left + group3.width() * 0.0735f, group3.top + group3.height() * 0.66688f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.10062f, group3.top + group3.height() * 0.66688f, group3.left + group3.width() * 0.12267f, group3.top + group3.height() * 0.64199f, group3.left + group3.width() * 0.12267f, group3.top + group3.height() * 0.61139f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.12267f, group3.top + group3.height() * 0.5808f, group3.left + group3.width() * 0.10062f, group3.top + group3.height() * 0.55591f, group3.left + group3.width() * 0.0735f, group3.top + group3.height() * 0.55591f);
            bezier2Path.close();
            bezier2Path.moveTo(group3.left + group3.width() * 0.82716f, group3.top + group3.height() * 0.12288f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.82716f, group3.top + group3.height() * 0.12287f, group3.left + group3.width() * 0.82716f, group3.top + group3.height() * 0.68103f, group3.left + group3.width() * 0.82716f, group3.top + group3.height() * 0.68103f);
            bezier2Path.lineTo(group3.left + group3.width() * 0.79671f, group3.top + group3.height() * 0.68103f);
            bezier2Path.lineTo(group3.left + group3.width() * 0.79671f, group3.top + group3.height() * 0.27345f);
            bezier2Path.lineTo(group3.left + group3.width() * 0.72851f, group3.top + group3.height() * 0.27345f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.72987f, group3.top + group3.height() * 0.27964f, group3.left + group3.width() * 0.72999f, group3.top + group3.height() * 0.28679f, group3.left + group3.width() * 0.72856f, group3.top + group3.height() * 0.29413f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.72487f, group3.top + group3.height() * 0.31314f, group3.left + group3.width() * 0.68174f, group3.top + group3.height() * 0.30246f, group3.left + group3.width() * 0.68543f, group3.top + group3.height() * 0.28345f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.68613f, group3.top + group3.height() * 0.27988f, group3.left + group3.width() * 0.68713f, group3.top + group3.height() * 0.27653f, group3.left + group3.width() * 0.68839f, group3.top + group3.height() * 0.27345f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.68839f, group3.top + group3.height() * 0.27345f, group3.left + group3.width() * 0.67298f, group3.top + group3.height() * 0.27345f, group3.left + group3.width() * 0.64842f, group3.top + group3.height() * 0.27345f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.61735f, group3.top + group3.height() * 0.27345f, group3.left + group3.width() * 0.57162f, group3.top + group3.height() * 0.27345f, group3.left + group3.width() * 0.5239f, group3.top + group3.height() * 0.27345f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.52458f, group3.top + group3.height() * 0.27684f, group3.left + group3.width() * 0.52494f, group3.top + group3.height() * 0.28045f, group3.left + group3.width() * 0.52494f, group3.top + group3.height() * 0.2842f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.52494f, group3.top + group3.height() * 0.30367f, group3.left + group3.width() * 0.48079f, group3.top + group3.height() * 0.30367f, group3.left + group3.width() * 0.48079f, group3.top + group3.height() * 0.2842f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.48079f, group3.top + group3.height() * 0.28045f, group3.left + group3.width() * 0.48115f, group3.top + group3.height() * 0.27684f, group3.left + group3.width() * 0.48183f, group3.top + group3.height() * 0.27345f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.3951f, group3.top + group3.height() * 0.27345f, group3.left + group3.width() * 0.31397f, group3.top + group3.height() * 0.27345f, group3.left + group3.width() * 0.31397f, group3.top + group3.height() * 0.27345f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.31523f, group3.top + group3.height() * 0.27653f, group3.left + group3.width() * 0.31623f, group3.top + group3.height() * 0.27988f, group3.left + group3.width() * 0.31693f, group3.top + group3.height() * 0.28345f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.32063f, group3.top + group3.height() * 0.30246f, group3.left + group3.width() * 0.2775f, group3.top + group3.height() * 0.31314f, group3.left + group3.width() * 0.2738f, group3.top + group3.height() * 0.29413f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.27237f, group3.top + group3.height() * 0.28679f, group3.left + group3.width() * 0.27249f, group3.top + group3.height() * 0.27964f, group3.left + group3.width() * 0.27385f, group3.top + group3.height() * 0.27345f);
            bezier2Path.lineTo(group3.left + group3.width() * 0.20565f, group3.top + group3.height() * 0.27345f);
            bezier2Path.lineTo(group3.left + group3.width() * 0.20565f, group3.top + group3.height() * 0.68103f);
            bezier2Path.lineTo(group3.left + group3.width() * 0.1752f, group3.top + group3.height() * 0.68103f);
            bezier2Path.lineTo(group3.left + group3.width() * 0.1752f, group3.top + group3.height() * 0.12287f);
            bezier2Path.lineTo(group3.left + group3.width() * 0.82716f, group3.top + group3.height() * 0.12287f);
            bezier2Path.lineTo(group3.left + group3.width() * 0.82716f, group3.top + group3.height() * 0.12288f);
            bezier2Path.close();
            bezier2Path.moveTo(group3.left + group3.width() * 0.70055f, group3.top + group3.height() * 0.32193f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.70055f, group3.top + group3.height() * 0.32193f, group3.left + group3.width() * 0.66824f, group3.top + group3.height() * 0.68103f, group3.left + group3.width() * 0.66824f, group3.top + group3.height() * 0.68103f);
            bezier2Path.lineTo(group3.left + group3.width() * 0.59124f, group3.top + group3.height() * 0.68103f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.59124f, group3.top + group3.height() * 0.68103f, group3.left + group3.width() * 0.70014f, group3.top + group3.height() * 0.32328f, group3.left + group3.width() * 0.70055f, group3.top + group3.height() * 0.32193f);
            bezier2Path.close();
            bezier2Path.moveTo(group3.left + group3.width() * 0.50286f, group3.top + group3.height() * 0.31814f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.50286f, group3.top + group3.height() * 0.31814f, group3.left + group3.width() * 0.53996f, group3.top + group3.height() * 0.68103f, group3.left + group3.width() * 0.53996f, group3.top + group3.height() * 0.68103f);
            bezier2Path.lineTo(group3.left + group3.width() * 0.46577f, group3.top + group3.height() * 0.68103f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.46577f, group3.top + group3.height() * 0.68103f, group3.left + group3.width() * 0.50272f, group3.top + group3.height() * 0.31953f, group3.left + group3.width() * 0.50286f, group3.top + group3.height() * 0.31814f);
            bezier2Path.close();
            bezier2Path.moveTo(group3.left + group3.width() * 0.30181f, group3.top + group3.height() * 0.32193f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.30181f, group3.top + group3.height() * 0.32193f, group3.left + group3.width() * 0.41112f, group3.top + group3.height() * 0.68103f, group3.left + group3.width() * 0.41112f, group3.top + group3.height() * 0.68103f);
            bezier2Path.lineTo(group3.left + group3.width() * 0.33413f, group3.top + group3.height() * 0.68103f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.33413f, group3.top + group3.height() * 0.68103f, group3.left + group3.width() * 0.30194f, group3.top + group3.height() * 0.32335f, group3.left + group3.width() * 0.30181f, group3.top + group3.height() * 0.32193f);
            bezier2Path.close();
            bezier2Path.moveTo(group3.left + group3.width() * 0.9265f, group3.top + group3.height() * 0.7427f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.91758f, group3.top + group3.height() * 0.7427f, group3.left + group3.width() * 0.91035f, group3.top + group3.height() * 0.75086f, group3.left + group3.width() * 0.91035f, group3.top + group3.height() * 0.76092f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.91035f, group3.top + group3.height() * 0.77099f, group3.left + group3.width() * 0.91758f, group3.top + group3.height() * 0.77915f, group3.left + group3.width() * 0.9265f, group3.top + group3.height() * 0.77915f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.93542f, group3.top + group3.height() * 0.77915f, group3.left + group3.width() * 0.94264f, group3.top + group3.height() * 0.77099f, group3.left + group3.width() * 0.94264f, group3.top + group3.height() * 0.76092f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.94264f, group3.top + group3.height() * 0.75086f, group3.left + group3.width() * 0.93542f, group3.top + group3.height() * 0.7427f, group3.left + group3.width() * 0.9265f, group3.top + group3.height() * 0.7427f);
            bezier2Path.close();
            bezier2Path.moveTo(group3.left + group3.width() * 0.0735f, group3.top + group3.height() * 0.7427f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.06458f, group3.top + group3.height() * 0.7427f, group3.left + group3.width() * 0.05736f, group3.top + group3.height() * 0.75086f, group3.left + group3.width() * 0.05736f, group3.top + group3.height() * 0.76092f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.05736f, group3.top + group3.height() * 0.77099f, group3.left + group3.width() * 0.06458f, group3.top + group3.height() * 0.77915f, group3.left + group3.width() * 0.0735f, group3.top + group3.height() * 0.77915f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.08242f, group3.top + group3.height() * 0.77915f, group3.left + group3.width() * 0.08965f, group3.top + group3.height() * 0.77099f, group3.left + group3.width() * 0.08965f, group3.top + group3.height() * 0.76092f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.08965f, group3.top + group3.height() * 0.75086f, group3.left + group3.width() * 0.08242f, group3.top + group3.height() * 0.7427f, group3.left + group3.width() * 0.0735f, group3.top + group3.height() * 0.7427f);
            bezier2Path.close();
            bezier2Path.moveTo(group3.left + group3.width() * 0.9674f, group3.top + group3.height() * 0.76092f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.9674f, group3.top + group3.height() * 0.78637f, group3.left + group3.width() * 0.94905f, group3.top + group3.height() * 0.80708f, group3.left + group3.width() * 0.9265f, group3.top + group3.height() * 0.80708f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.90394f, group3.top + group3.height() * 0.80708f, group3.left + group3.width() * 0.88559f, group3.top + group3.height() * 0.78637f, group3.left + group3.width() * 0.88559f, group3.top + group3.height() * 0.76092f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.88559f, group3.top + group3.height() * 0.73547f, group3.left + group3.width() * 0.90394f, group3.top + group3.height() * 0.71476f, group3.left + group3.width() * 0.9265f, group3.top + group3.height() * 0.71476f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.94905f, group3.top + group3.height() * 0.71476f, group3.left + group3.width() * 0.9674f, group3.top + group3.height() * 0.73547f, group3.left + group3.width() * 0.9674f, group3.top + group3.height() * 0.76092f);
            bezier2Path.close();
            bezier2Path.moveTo(group3.left + group3.width() * 0.11441f, group3.top + group3.height() * 0.76092f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.11441f, group3.top + group3.height() * 0.78637f, group3.left + group3.width() * 0.09606f, group3.top + group3.height() * 0.80708f, group3.left + group3.width() * 0.0735f, group3.top + group3.height() * 0.80708f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.07233f, group3.top + group3.height() * 0.80708f, group3.left + group3.width() * 0.07116f, group3.top + group3.height() * 0.80703f, group3.left + group3.width() * 0.07001f, group3.top + group3.height() * 0.80692f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.04908f, group3.top + group3.height() * 0.80491f, group3.left + group3.width() * 0.0326f, group3.top + group3.height() * 0.78505f, group3.left + group3.width() * 0.0326f, group3.top + group3.height() * 0.76092f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.0326f, group3.top + group3.height() * 0.73547f, group3.left + group3.width() * 0.05095f, group3.top + group3.height() * 0.71476f, group3.left + group3.width() * 0.0735f, group3.top + group3.height() * 0.71476f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.09606f, group3.top + group3.height() * 0.71476f, group3.left + group3.width() * 0.11441f, group3.top + group3.height() * 0.73547f, group3.left + group3.width() * 0.11441f, group3.top + group3.height() * 0.76092f);
            bezier2Path.close();
            bezier2Path.moveTo(group3.left + group3.width() * 0.9265f, group3.top + group3.height() * 0.69185f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.89275f, group3.top + group3.height() * 0.69185f, group3.left + group3.width() * 0.86529f, group3.top + group3.height() * 0.72283f, group3.left + group3.width() * 0.86529f, group3.top + group3.height() * 0.76092f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.86529f, group3.top + group3.height() * 0.79901f, group3.left + group3.width() * 0.89275f, group3.top + group3.height() * 0.83f, group3.left + group3.width() * 0.9265f, group3.top + group3.height() * 0.83f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.96025f, group3.top + group3.height() * 0.83f, group3.left + group3.width() * 0.9877f, group3.top + group3.height() * 0.79901f, group3.left + group3.width() * 0.9877f, group3.top + group3.height() * 0.76092f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.9877f, group3.top + group3.height() * 0.72283f, group3.left + group3.width() * 0.96025f, group3.top + group3.height() * 0.69185f, group3.left + group3.width() * 0.9265f, group3.top + group3.height() * 0.69185f);
            bezier2Path.close();
            bezier2Path.moveTo(group3.left + group3.width() * 0.0735f, group3.top + group3.height() * 0.69185f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.03975f, group3.top + group3.height() * 0.69185f, group3.left + group3.width() * 0.0123f, group3.top + group3.height() * 0.72283f, group3.left + group3.width() * 0.0123f, group3.top + group3.height() * 0.76092f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.0123f, group3.top + group3.height() * 0.79684f, group3.left + group3.width() * 0.03673f, group3.top + group3.height() * 0.82646f, group3.left + group3.width() * 0.06783f, group3.top + group3.height() * 0.8297f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.0697f, group3.top + group3.height() * 0.8299f, group3.left + group3.width() * 0.07159f, group3.top + group3.height() * 0.83f, group3.left + group3.width() * 0.0735f, group3.top + group3.height() * 0.83f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.10725f, group3.top + group3.height() * 0.83f, group3.left + group3.width() * 0.13471f, group3.top + group3.height() * 0.79901f, group3.left + group3.width() * 0.13471f, group3.top + group3.height() * 0.76092f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.13471f, group3.top + group3.height() * 0.72283f, group3.left + group3.width() * 0.10725f, group3.top + group3.height() * 0.69185f, group3.left + group3.width() * 0.0735f, group3.top + group3.height() * 0.69185f);
            bezier2Path.close();
            bezier2Path.moveTo(group3.left + group3.width() * 1f, group3.top + group3.height() * 0.5382f);
            bezier2Path.lineTo(group3.left + group3.width() * 1f, group3.top + group3.height() * 0.84769f);
            bezier2Path.cubicTo(group3.left + group3.width() * 1f, group3.top + group3.height() * 0.8559f, group3.left + group3.width() * 0.99411f, group3.top + group3.height() * 0.86254f, group3.left + group3.width() * 0.98684f, group3.top + group3.height() * 0.86254f);
            bezier2Path.lineTo(group3.left + group3.width() * 0.86615f, group3.top + group3.height() * 0.86254f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.85889f, group3.top + group3.height() * 0.86254f, group3.left + group3.width() * 0.85299f, group3.top + group3.height() * 0.8559f, group3.left + group3.width() * 0.85299f, group3.top + group3.height() * 0.84769f);
            bezier2Path.lineTo(group3.left + group3.width() * 0.85299f, group3.top + group3.height() * 0.5382f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.85299f, group3.top + group3.height() * 0.53f, group3.left + group3.width() * 0.85889f, group3.top + group3.height() * 0.52335f, group3.left + group3.width() * 0.86615f, group3.top + group3.height() * 0.52335f);
            bezier2Path.lineTo(group3.left + group3.width() * 0.98684f, group3.top + group3.height() * 0.52335f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.99411f, group3.top + group3.height() * 0.52335f, group3.left + group3.width() * 1f, group3.top + group3.height() * 0.53f, group3.left + group3.width() * 1f, group3.top + group3.height() * 0.5382f);
            bezier2Path.close();
            bezier2Path.moveTo(group3.left + group3.width() * 0.14701f, group3.top + group3.height() * 0.5382f);
            bezier2Path.lineTo(group3.left + group3.width() * 0.14701f, group3.top + group3.height() * 0.84769f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.14701f, group3.top + group3.height() * 0.8559f, group3.left + group3.width() * 0.14111f, group3.top + group3.height() * 0.86254f, group3.left + group3.width() * 0.13385f, group3.top + group3.height() * 0.86254f);
            bezier2Path.lineTo(group3.left + group3.width() * 0.01316f, group3.top + group3.height() * 0.86254f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.00589f, group3.top + group3.height() * 0.86254f, group3.left, group3.top + group3.height() * 0.8559f, group3.left, group3.top + group3.height() * 0.84769f);
            bezier2Path.lineTo(group3.left, group3.top + group3.height() * 0.5382f);
            bezier2Path.cubicTo(group3.left, group3.top + group3.height() * 0.53f, group3.left + group3.width() * 0.00589f, group3.top + group3.height() * 0.52335f, group3.left + group3.width() * 0.01316f, group3.top + group3.height() * 0.52335f);
            bezier2Path.lineTo(group3.left + group3.width() * 0.13385f, group3.top + group3.height() * 0.52335f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.14111f, group3.top + group3.height() * 0.52335f, group3.left + group3.width() * 0.14701f, group3.top + group3.height() * 0.53f, group3.left + group3.width() * 0.14701f, group3.top + group3.height() * 0.5382f);
            bezier2Path.close();
            bezier2Path.moveTo(group3.left + group3.width() * 0.81956f, group3.top + group3.height() * 0.71625f);
            bezier2Path.lineTo(group3.left + group3.width() * 0.81999f, group3.top + group3.height() * 0.71637f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.82291f, group3.top + group3.height() * 0.71757f, group3.left + group3.width() * 0.82521f, group3.top + group3.height() * 0.72017f, group3.left + group3.width() * 0.82628f, group3.top + group3.height() * 0.72346f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.82712f, group3.top + group3.height() * 0.72648f, group3.left + group3.width() * 0.82712f, group3.top + group3.height() * 0.72928f, group3.left + group3.width() * 0.82712f, group3.top + group3.height() * 0.73489f);
            bezier2Path.lineTo(group3.left + group3.width() * 0.82712f, group3.top + group3.height() * 0.84311f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.82712f, group3.top + group3.height() * 0.84871f, group3.left + group3.width() * 0.82712f, group3.top + group3.height() * 0.85152f, group3.left + group3.width() * 0.82638f, group3.top + group3.height() * 0.85405f);
            bezier2Path.lineTo(group3.left + group3.width() * 0.82628f, group3.top + group3.height() * 0.85454f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.82521f, group3.top + group3.height() * 0.85783f, group3.left + group3.width() * 0.82291f, group3.top + group3.height() * 0.86043f, group3.left + group3.width() * 0.81999f, group3.top + group3.height() * 0.86163f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.81732f, group3.top + group3.height() * 0.86258f, group3.left + group3.width() * 0.81483f, group3.top + group3.height() * 0.86258f, group3.left + group3.width() * 0.80987f, group3.top + group3.height() * 0.86258f);
            bezier2Path.lineTo(group3.left + group3.width() * 0.19244f, group3.top + group3.height() * 0.86258f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.18748f, group3.top + group3.height() * 0.86258f, group3.left + group3.width() * 0.18499f, group3.top + group3.height() * 0.86258f, group3.left + group3.width() * 0.18275f, group3.top + group3.height() * 0.86175f);
            bezier2Path.lineTo(group3.left + group3.width() * 0.18232f, group3.top + group3.height() * 0.86163f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.1794f, group3.top + group3.height() * 0.86043f, group3.left + group3.width() * 0.1771f, group3.top + group3.height() * 0.85783f, group3.left + group3.width() * 0.17603f, group3.top + group3.height() * 0.85454f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.17519f, group3.top + group3.height() * 0.85152f, group3.left + group3.width() * 0.17519f, group3.top + group3.height() * 0.84871f, group3.left + group3.width() * 0.17519f, group3.top + group3.height() * 0.84311f);
            bezier2Path.lineTo(group3.left + group3.width() * 0.17519f, group3.top + group3.height() * 0.73489f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.17519f, group3.top + group3.height() * 0.72928f, group3.left + group3.width() * 0.17519f, group3.top + group3.height() * 0.72648f, group3.left + group3.width() * 0.17593f, group3.top + group3.height() * 0.72395f);
            bezier2Path.lineTo(group3.left + group3.width() * 0.17603f, group3.top + group3.height() * 0.72346f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.1771f, group3.top + group3.height() * 0.72017f, group3.left + group3.width() * 0.1794f, group3.top + group3.height() * 0.71757f, group3.left + group3.width() * 0.18232f, group3.top + group3.height() * 0.71637f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.18499f, group3.top + group3.height() * 0.71542f, group3.left + group3.width() * 0.18748f, group3.top + group3.height() * 0.71542f, group3.left + group3.width() * 0.19244f, group3.top + group3.height() * 0.71542f);
            bezier2Path.lineTo(group3.left + group3.width() * 0.80987f, group3.top + group3.height() * 0.71542f);
            bezier2Path.cubicTo(group3.left + group3.width() * 0.81483f, group3.top + group3.height() * 0.71542f, group3.left + group3.width() * 0.81732f, group3.top + group3.height() * 0.71542f, group3.left + group3.width() * 0.81956f, group3.top + group3.height() * 0.71625f);
            bezier2Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.bianco);
            canvas.drawPath(bezier2Path, paint);
        }
        
        // Group 2
        {
            RectF group2 = CacheForEventi.group2;
            group2.set(frame.left + 2f,
                frame.top + 6.74f,
                frame.right - 2.39f,
                frame.bottom - 3.96f);
            
            // Bezier 3
            if (highlited) {
                RectF bezier3Rect = CacheForEventi.bezier3Rect;
                bezier3Rect.set(group2.left,
                    group2.top + (float) Math.floor(group2.height() * 0.12287f + 0.24f) + 0.26f,
                    group2.left + (float) Math.floor(group2.width() - 0.11f) + 0.61f,
                    group2.top + (float) Math.floor(group2.height() * 0.86258f + 0.22f) + 0.28f);
                Path bezier3Path = CacheForEventi.bezier3Path;
                bezier3Path.reset();
                bezier3Path.moveTo(group2.left + group2.width() * 0.73942f, group2.top + group2.height() * 0.15724f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.67727f, group2.top + group2.height() * 0.15724f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.70835f, group2.top + group2.height() * 0.17816f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.73942f, group2.top + group2.height() * 0.15724f);
                bezier3Path.close();
                bezier3Path.moveTo(group2.left + group2.width() * 0.53225f, group2.top + group2.height() * 0.15724f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.4701f, group2.top + group2.height() * 0.15724f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.50117f, group2.top + group2.height() * 0.17816f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.53225f, group2.top + group2.height() * 0.15724f);
                bezier3Path.close();
                bezier3Path.moveTo(group2.left + group2.width() * 0.32508f, group2.top + group2.height() * 0.15724f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.26294f, group2.top + group2.height() * 0.15724f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.29401f, group2.top + group2.height() * 0.17816f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.32508f, group2.top + group2.height() * 0.15724f);
                bezier3Path.close();
                bezier3Path.moveTo(group2.left + group2.width() * 0.79671f, group2.top + group2.height() * 0.15869f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.73807f, group2.top + group2.height() * 0.19816f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.79671f, group2.top + group2.height() * 0.23763f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.79671f, group2.top + group2.height() * 0.19905f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.79671f, group2.top + group2.height() * 0.15869f);
                bezier3Path.close();
                bezier3Path.moveTo(group2.left + group2.width() * 0.61999f, group2.top + group2.height() * 0.1587f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.61999f, group2.top + group2.height() * 0.23763f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.61999f, group2.top + group2.height() * 0.23763f, group2.left + group2.width() * 0.64748f, group2.top + group2.height() * 0.21913f, group2.left + group2.width() * 0.66481f, group2.top + group2.height() * 0.20746f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.67279f, group2.top + group2.height() * 0.20208f, group2.left + group2.width() * 0.67862f, group2.top + group2.height() * 0.19816f, group2.left + group2.width() * 0.67862f, group2.top + group2.height() * 0.19816f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.67862f, group2.top + group2.height() * 0.19816f, group2.left + group2.width() * 0.67465f, group2.top + group2.height() * 0.19549f, group2.left + group2.width() * 0.66877f, group2.top + group2.height() * 0.19153f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.65206f, group2.top + group2.height() * 0.18028f, group2.left + group2.width() * 0.61999f, group2.top + group2.height() * 0.1587f, group2.left + group2.width() * 0.61999f, group2.top + group2.height() * 0.1587f);
                bezier3Path.close();
                bezier3Path.moveTo(group2.left + group2.width() * 0.41282f, group2.top + group2.height() * 0.1587f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.41282f, group2.top + group2.height() * 0.23763f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.47146f, group2.top + group2.height() * 0.19816f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.41282f, group2.top + group2.height() * 0.1587f);
                bezier3Path.close();
                bezier3Path.moveTo(group2.left + group2.width() * 0.20565f, group2.top + group2.height() * 0.1587f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.20565f, group2.top + group2.height() * 0.16521f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.20565f, group2.top + group2.height() * 0.23763f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.26429f, group2.top + group2.height() * 0.19816f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.20565f, group2.top + group2.height() * 0.1587f);
                bezier3Path.close();
                bezier3Path.moveTo(group2.left + group2.width() * 0.58954f, group2.top + group2.height() * 0.15869f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.53091f, group2.top + group2.height() * 0.19816f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.58954f, group2.top + group2.height() * 0.23763f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.58954f, group2.top + group2.height() * 0.15869f);
                bezier3Path.close();
                bezier3Path.moveTo(group2.left + group2.width() * 0.38237f, group2.top + group2.height() * 0.15869f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.32374f, group2.top + group2.height() * 0.19816f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.38237f, group2.top + group2.height() * 0.23763f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.38237f, group2.top + group2.height() * 0.15869f);
                bezier3Path.close();
                bezier3Path.moveTo(group2.left + group2.width() * 0.70835f, group2.top + group2.height() * 0.21817f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.67727f, group2.top + group2.height() * 0.23909f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.73942f, group2.top + group2.height() * 0.23909f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.70835f, group2.top + group2.height() * 0.21817f);
                bezier3Path.close();
                bezier3Path.moveTo(group2.left + group2.width() * 0.50118f, group2.top + group2.height() * 0.21817f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.4701f, group2.top + group2.height() * 0.23909f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.53225f, group2.top + group2.height() * 0.23909f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.50118f, group2.top + group2.height() * 0.21817f);
                bezier3Path.close();
                bezier3Path.moveTo(group2.left + group2.width() * 0.29401f, group2.top + group2.height() * 0.21817f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.26294f, group2.top + group2.height() * 0.23909f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.32509f, group2.top + group2.height() * 0.23909f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.29401f, group2.top + group2.height() * 0.21817f);
                bezier3Path.close();
                bezier3Path.moveTo(group2.left + group2.width() * 0.9265f, group2.top + group2.height() * 0.59746f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.91968f, group2.top + group2.height() * 0.59746f, group2.left + group2.width() * 0.91416f, group2.top + group2.height() * 0.6037f, group2.left + group2.width() * 0.91416f, group2.top + group2.height() * 0.61139f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.91416f, group2.top + group2.height() * 0.61908f, group2.left + group2.width() * 0.91968f, group2.top + group2.height() * 0.62531f, group2.left + group2.width() * 0.9265f, group2.top + group2.height() * 0.62531f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.93331f, group2.top + group2.height() * 0.62531f, group2.left + group2.width() * 0.93884f, group2.top + group2.height() * 0.61908f, group2.left + group2.width() * 0.93884f, group2.top + group2.height() * 0.61139f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.93884f, group2.top + group2.height() * 0.6037f, group2.left + group2.width() * 0.93331f, group2.top + group2.height() * 0.59746f, group2.left + group2.width() * 0.9265f, group2.top + group2.height() * 0.59746f);
                bezier3Path.close();
                bezier3Path.moveTo(group2.left + group2.width() * 0.0735f, group2.top + group2.height() * 0.59746f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.06669f, group2.top + group2.height() * 0.59746f, group2.left + group2.width() * 0.06116f, group2.top + group2.height() * 0.6037f, group2.left + group2.width() * 0.06116f, group2.top + group2.height() * 0.61139f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.06116f, group2.top + group2.height() * 0.61908f, group2.left + group2.width() * 0.06669f, group2.top + group2.height() * 0.62531f, group2.left + group2.width() * 0.0735f, group2.top + group2.height() * 0.62531f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.08032f, group2.top + group2.height() * 0.62531f, group2.left + group2.width() * 0.08584f, group2.top + group2.height() * 0.61908f, group2.left + group2.width() * 0.08584f, group2.top + group2.height() * 0.61139f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.08584f, group2.top + group2.height() * 0.6037f, group2.left + group2.width() * 0.08032f, group2.top + group2.height() * 0.59746f, group2.left + group2.width() * 0.0735f, group2.top + group2.height() * 0.59746f);
                bezier3Path.close();
                bezier3Path.moveTo(group2.left + group2.width() * 0.95537f, group2.top + group2.height() * 0.61139f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.95537f, group2.top + group2.height() * 0.62935f, group2.left + group2.width() * 0.94242f, group2.top + group2.height() * 0.64397f, group2.left + group2.width() * 0.9265f, group2.top + group2.height() * 0.64397f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.91058f, group2.top + group2.height() * 0.64397f, group2.left + group2.width() * 0.89763f, group2.top + group2.height() * 0.62935f, group2.left + group2.width() * 0.89763f, group2.top + group2.height() * 0.61139f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.89763f, group2.top + group2.height() * 0.59342f, group2.left + group2.width() * 0.91058f, group2.top + group2.height() * 0.57881f, group2.left + group2.width() * 0.9265f, group2.top + group2.height() * 0.57881f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.94242f, group2.top + group2.height() * 0.57881f, group2.left + group2.width() * 0.95537f, group2.top + group2.height() * 0.59342f, group2.left + group2.width() * 0.95537f, group2.top + group2.height() * 0.61139f);
                bezier3Path.close();
                bezier3Path.moveTo(group2.left + group2.width() * 0.10237f, group2.top + group2.height() * 0.61139f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.10237f, group2.top + group2.height() * 0.62935f, group2.left + group2.width() * 0.08942f, group2.top + group2.height() * 0.64397f, group2.left + group2.width() * 0.0735f, group2.top + group2.height() * 0.64397f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.05758f, group2.top + group2.height() * 0.64397f, group2.left + group2.width() * 0.04463f, group2.top + group2.height() * 0.62935f, group2.left + group2.width() * 0.04463f, group2.top + group2.height() * 0.61139f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.04463f, group2.top + group2.height() * 0.59342f, group2.left + group2.width() * 0.05758f, group2.top + group2.height() * 0.57881f, group2.left + group2.width() * 0.0735f, group2.top + group2.height() * 0.57881f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.08942f, group2.top + group2.height() * 0.57881f, group2.left + group2.width() * 0.10237f, group2.top + group2.height() * 0.59342f, group2.left + group2.width() * 0.10237f, group2.top + group2.height() * 0.61139f);
                bezier3Path.close();
                bezier3Path.moveTo(group2.left + group2.width() * 0.9265f, group2.top + group2.height() * 0.55591f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.89938f, group2.top + group2.height() * 0.55591f, group2.left + group2.width() * 0.87732f, group2.top + group2.height() * 0.5808f, group2.left + group2.width() * 0.87732f, group2.top + group2.height() * 0.61139f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.87732f, group2.top + group2.height() * 0.64199f, group2.left + group2.width() * 0.89938f, group2.top + group2.height() * 0.66688f, group2.left + group2.width() * 0.9265f, group2.top + group2.height() * 0.66688f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.95361f, group2.top + group2.height() * 0.66688f, group2.left + group2.width() * 0.97567f, group2.top + group2.height() * 0.64199f, group2.left + group2.width() * 0.97567f, group2.top + group2.height() * 0.61139f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.97567f, group2.top + group2.height() * 0.5808f, group2.left + group2.width() * 0.95361f, group2.top + group2.height() * 0.55591f, group2.left + group2.width() * 0.9265f, group2.top + group2.height() * 0.55591f);
                bezier3Path.close();
                bezier3Path.moveTo(group2.left + group2.width() * 0.0735f, group2.top + group2.height() * 0.55591f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.04639f, group2.top + group2.height() * 0.55591f, group2.left + group2.width() * 0.02433f, group2.top + group2.height() * 0.5808f, group2.left + group2.width() * 0.02433f, group2.top + group2.height() * 0.61139f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.02433f, group2.top + group2.height() * 0.64199f, group2.left + group2.width() * 0.04639f, group2.top + group2.height() * 0.66688f, group2.left + group2.width() * 0.0735f, group2.top + group2.height() * 0.66688f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.10062f, group2.top + group2.height() * 0.66688f, group2.left + group2.width() * 0.12267f, group2.top + group2.height() * 0.64199f, group2.left + group2.width() * 0.12267f, group2.top + group2.height() * 0.61139f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.12267f, group2.top + group2.height() * 0.5808f, group2.left + group2.width() * 0.10062f, group2.top + group2.height() * 0.55591f, group2.left + group2.width() * 0.0735f, group2.top + group2.height() * 0.55591f);
                bezier3Path.close();
                bezier3Path.moveTo(group2.left + group2.width() * 0.82716f, group2.top + group2.height() * 0.12288f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.82716f, group2.top + group2.height() * 0.12287f, group2.left + group2.width() * 0.82716f, group2.top + group2.height() * 0.68103f, group2.left + group2.width() * 0.82716f, group2.top + group2.height() * 0.68103f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.79671f, group2.top + group2.height() * 0.68103f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.79671f, group2.top + group2.height() * 0.27345f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.72851f, group2.top + group2.height() * 0.27345f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.72987f, group2.top + group2.height() * 0.27964f, group2.left + group2.width() * 0.72999f, group2.top + group2.height() * 0.28679f, group2.left + group2.width() * 0.72856f, group2.top + group2.height() * 0.29413f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.72487f, group2.top + group2.height() * 0.31314f, group2.left + group2.width() * 0.68174f, group2.top + group2.height() * 0.30246f, group2.left + group2.width() * 0.68543f, group2.top + group2.height() * 0.28345f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.68613f, group2.top + group2.height() * 0.27988f, group2.left + group2.width() * 0.68713f, group2.top + group2.height() * 0.27653f, group2.left + group2.width() * 0.68839f, group2.top + group2.height() * 0.27345f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.68839f, group2.top + group2.height() * 0.27345f, group2.left + group2.width() * 0.67298f, group2.top + group2.height() * 0.27345f, group2.left + group2.width() * 0.64842f, group2.top + group2.height() * 0.27345f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.61735f, group2.top + group2.height() * 0.27345f, group2.left + group2.width() * 0.57162f, group2.top + group2.height() * 0.27345f, group2.left + group2.width() * 0.5239f, group2.top + group2.height() * 0.27345f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.52458f, group2.top + group2.height() * 0.27684f, group2.left + group2.width() * 0.52494f, group2.top + group2.height() * 0.28045f, group2.left + group2.width() * 0.52494f, group2.top + group2.height() * 0.2842f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.52494f, group2.top + group2.height() * 0.30367f, group2.left + group2.width() * 0.48079f, group2.top + group2.height() * 0.30367f, group2.left + group2.width() * 0.48079f, group2.top + group2.height() * 0.2842f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.48079f, group2.top + group2.height() * 0.28045f, group2.left + group2.width() * 0.48115f, group2.top + group2.height() * 0.27684f, group2.left + group2.width() * 0.48183f, group2.top + group2.height() * 0.27345f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.3951f, group2.top + group2.height() * 0.27345f, group2.left + group2.width() * 0.31397f, group2.top + group2.height() * 0.27345f, group2.left + group2.width() * 0.31397f, group2.top + group2.height() * 0.27345f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.31523f, group2.top + group2.height() * 0.27653f, group2.left + group2.width() * 0.31623f, group2.top + group2.height() * 0.27988f, group2.left + group2.width() * 0.31693f, group2.top + group2.height() * 0.28345f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.32063f, group2.top + group2.height() * 0.30246f, group2.left + group2.width() * 0.2775f, group2.top + group2.height() * 0.31314f, group2.left + group2.width() * 0.2738f, group2.top + group2.height() * 0.29413f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.27237f, group2.top + group2.height() * 0.28679f, group2.left + group2.width() * 0.27249f, group2.top + group2.height() * 0.27964f, group2.left + group2.width() * 0.27385f, group2.top + group2.height() * 0.27345f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.20565f, group2.top + group2.height() * 0.27345f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.20565f, group2.top + group2.height() * 0.68103f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.1752f, group2.top + group2.height() * 0.68103f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.1752f, group2.top + group2.height() * 0.12287f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.82716f, group2.top + group2.height() * 0.12287f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.82716f, group2.top + group2.height() * 0.12288f);
                bezier3Path.close();
                bezier3Path.moveTo(group2.left + group2.width() * 0.70055f, group2.top + group2.height() * 0.32193f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.70055f, group2.top + group2.height() * 0.32193f, group2.left + group2.width() * 0.66824f, group2.top + group2.height() * 0.68103f, group2.left + group2.width() * 0.66824f, group2.top + group2.height() * 0.68103f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.59124f, group2.top + group2.height() * 0.68103f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.59124f, group2.top + group2.height() * 0.68103f, group2.left + group2.width() * 0.70014f, group2.top + group2.height() * 0.32328f, group2.left + group2.width() * 0.70055f, group2.top + group2.height() * 0.32193f);
                bezier3Path.close();
                bezier3Path.moveTo(group2.left + group2.width() * 0.50286f, group2.top + group2.height() * 0.31814f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.50286f, group2.top + group2.height() * 0.31814f, group2.left + group2.width() * 0.53996f, group2.top + group2.height() * 0.68103f, group2.left + group2.width() * 0.53996f, group2.top + group2.height() * 0.68103f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.46577f, group2.top + group2.height() * 0.68103f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.46577f, group2.top + group2.height() * 0.68103f, group2.left + group2.width() * 0.50272f, group2.top + group2.height() * 0.31953f, group2.left + group2.width() * 0.50286f, group2.top + group2.height() * 0.31814f);
                bezier3Path.close();
                bezier3Path.moveTo(group2.left + group2.width() * 0.30181f, group2.top + group2.height() * 0.32193f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.30181f, group2.top + group2.height() * 0.32193f, group2.left + group2.width() * 0.41112f, group2.top + group2.height() * 0.68103f, group2.left + group2.width() * 0.41112f, group2.top + group2.height() * 0.68103f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.33413f, group2.top + group2.height() * 0.68103f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.33413f, group2.top + group2.height() * 0.68103f, group2.left + group2.width() * 0.30194f, group2.top + group2.height() * 0.32335f, group2.left + group2.width() * 0.30181f, group2.top + group2.height() * 0.32193f);
                bezier3Path.close();
                bezier3Path.moveTo(group2.left + group2.width() * 0.9265f, group2.top + group2.height() * 0.7427f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.91758f, group2.top + group2.height() * 0.7427f, group2.left + group2.width() * 0.91035f, group2.top + group2.height() * 0.75086f, group2.left + group2.width() * 0.91035f, group2.top + group2.height() * 0.76092f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.91035f, group2.top + group2.height() * 0.77099f, group2.left + group2.width() * 0.91758f, group2.top + group2.height() * 0.77915f, group2.left + group2.width() * 0.9265f, group2.top + group2.height() * 0.77915f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.93542f, group2.top + group2.height() * 0.77915f, group2.left + group2.width() * 0.94264f, group2.top + group2.height() * 0.77099f, group2.left + group2.width() * 0.94264f, group2.top + group2.height() * 0.76092f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.94264f, group2.top + group2.height() * 0.75086f, group2.left + group2.width() * 0.93542f, group2.top + group2.height() * 0.7427f, group2.left + group2.width() * 0.9265f, group2.top + group2.height() * 0.7427f);
                bezier3Path.close();
                bezier3Path.moveTo(group2.left + group2.width() * 0.0735f, group2.top + group2.height() * 0.7427f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.06458f, group2.top + group2.height() * 0.7427f, group2.left + group2.width() * 0.05736f, group2.top + group2.height() * 0.75086f, group2.left + group2.width() * 0.05736f, group2.top + group2.height() * 0.76092f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.05736f, group2.top + group2.height() * 0.77099f, group2.left + group2.width() * 0.06458f, group2.top + group2.height() * 0.77915f, group2.left + group2.width() * 0.0735f, group2.top + group2.height() * 0.77915f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.08242f, group2.top + group2.height() * 0.77915f, group2.left + group2.width() * 0.08965f, group2.top + group2.height() * 0.77099f, group2.left + group2.width() * 0.08965f, group2.top + group2.height() * 0.76092f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.08965f, group2.top + group2.height() * 0.75086f, group2.left + group2.width() * 0.08242f, group2.top + group2.height() * 0.7427f, group2.left + group2.width() * 0.0735f, group2.top + group2.height() * 0.7427f);
                bezier3Path.close();
                bezier3Path.moveTo(group2.left + group2.width() * 0.9674f, group2.top + group2.height() * 0.76092f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.9674f, group2.top + group2.height() * 0.78637f, group2.left + group2.width() * 0.94905f, group2.top + group2.height() * 0.80708f, group2.left + group2.width() * 0.9265f, group2.top + group2.height() * 0.80708f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.90394f, group2.top + group2.height() * 0.80708f, group2.left + group2.width() * 0.88559f, group2.top + group2.height() * 0.78637f, group2.left + group2.width() * 0.88559f, group2.top + group2.height() * 0.76092f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.88559f, group2.top + group2.height() * 0.73547f, group2.left + group2.width() * 0.90394f, group2.top + group2.height() * 0.71476f, group2.left + group2.width() * 0.9265f, group2.top + group2.height() * 0.71476f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.94905f, group2.top + group2.height() * 0.71476f, group2.left + group2.width() * 0.9674f, group2.top + group2.height() * 0.73547f, group2.left + group2.width() * 0.9674f, group2.top + group2.height() * 0.76092f);
                bezier3Path.close();
                bezier3Path.moveTo(group2.left + group2.width() * 0.11441f, group2.top + group2.height() * 0.76092f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.11441f, group2.top + group2.height() * 0.78637f, group2.left + group2.width() * 0.09606f, group2.top + group2.height() * 0.80708f, group2.left + group2.width() * 0.0735f, group2.top + group2.height() * 0.80708f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.07233f, group2.top + group2.height() * 0.80708f, group2.left + group2.width() * 0.07116f, group2.top + group2.height() * 0.80703f, group2.left + group2.width() * 0.07001f, group2.top + group2.height() * 0.80692f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.04908f, group2.top + group2.height() * 0.80491f, group2.left + group2.width() * 0.0326f, group2.top + group2.height() * 0.78505f, group2.left + group2.width() * 0.0326f, group2.top + group2.height() * 0.76092f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.0326f, group2.top + group2.height() * 0.73547f, group2.left + group2.width() * 0.05095f, group2.top + group2.height() * 0.71476f, group2.left + group2.width() * 0.0735f, group2.top + group2.height() * 0.71476f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.09606f, group2.top + group2.height() * 0.71476f, group2.left + group2.width() * 0.11441f, group2.top + group2.height() * 0.73547f, group2.left + group2.width() * 0.11441f, group2.top + group2.height() * 0.76092f);
                bezier3Path.close();
                bezier3Path.moveTo(group2.left + group2.width() * 0.9265f, group2.top + group2.height() * 0.69185f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.89275f, group2.top + group2.height() * 0.69185f, group2.left + group2.width() * 0.86529f, group2.top + group2.height() * 0.72283f, group2.left + group2.width() * 0.86529f, group2.top + group2.height() * 0.76092f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.86529f, group2.top + group2.height() * 0.79901f, group2.left + group2.width() * 0.89275f, group2.top + group2.height() * 0.83f, group2.left + group2.width() * 0.9265f, group2.top + group2.height() * 0.83f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.96025f, group2.top + group2.height() * 0.83f, group2.left + group2.width() * 0.9877f, group2.top + group2.height() * 0.79901f, group2.left + group2.width() * 0.9877f, group2.top + group2.height() * 0.76092f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.9877f, group2.top + group2.height() * 0.72283f, group2.left + group2.width() * 0.96025f, group2.top + group2.height() * 0.69185f, group2.left + group2.width() * 0.9265f, group2.top + group2.height() * 0.69185f);
                bezier3Path.close();
                bezier3Path.moveTo(group2.left + group2.width() * 0.0735f, group2.top + group2.height() * 0.69185f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.03975f, group2.top + group2.height() * 0.69185f, group2.left + group2.width() * 0.0123f, group2.top + group2.height() * 0.72283f, group2.left + group2.width() * 0.0123f, group2.top + group2.height() * 0.76092f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.0123f, group2.top + group2.height() * 0.79684f, group2.left + group2.width() * 0.03673f, group2.top + group2.height() * 0.82646f, group2.left + group2.width() * 0.06783f, group2.top + group2.height() * 0.8297f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.0697f, group2.top + group2.height() * 0.8299f, group2.left + group2.width() * 0.07159f, group2.top + group2.height() * 0.83f, group2.left + group2.width() * 0.0735f, group2.top + group2.height() * 0.83f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.10725f, group2.top + group2.height() * 0.83f, group2.left + group2.width() * 0.13471f, group2.top + group2.height() * 0.79901f, group2.left + group2.width() * 0.13471f, group2.top + group2.height() * 0.76092f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.13471f, group2.top + group2.height() * 0.72283f, group2.left + group2.width() * 0.10725f, group2.top + group2.height() * 0.69185f, group2.left + group2.width() * 0.0735f, group2.top + group2.height() * 0.69185f);
                bezier3Path.close();
                bezier3Path.moveTo(group2.left + group2.width() * 1f, group2.top + group2.height() * 0.5382f);
                bezier3Path.lineTo(group2.left + group2.width() * 1f, group2.top + group2.height() * 0.84769f);
                bezier3Path.cubicTo(group2.left + group2.width() * 1f, group2.top + group2.height() * 0.8559f, group2.left + group2.width() * 0.99411f, group2.top + group2.height() * 0.86254f, group2.left + group2.width() * 0.98684f, group2.top + group2.height() * 0.86254f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.86615f, group2.top + group2.height() * 0.86254f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.85889f, group2.top + group2.height() * 0.86254f, group2.left + group2.width() * 0.85299f, group2.top + group2.height() * 0.8559f, group2.left + group2.width() * 0.85299f, group2.top + group2.height() * 0.84769f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.85299f, group2.top + group2.height() * 0.5382f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.85299f, group2.top + group2.height() * 0.53f, group2.left + group2.width() * 0.85889f, group2.top + group2.height() * 0.52335f, group2.left + group2.width() * 0.86615f, group2.top + group2.height() * 0.52335f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.98684f, group2.top + group2.height() * 0.52335f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.99411f, group2.top + group2.height() * 0.52335f, group2.left + group2.width() * 1f, group2.top + group2.height() * 0.53f, group2.left + group2.width() * 1f, group2.top + group2.height() * 0.5382f);
                bezier3Path.close();
                bezier3Path.moveTo(group2.left + group2.width() * 0.14701f, group2.top + group2.height() * 0.5382f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.14701f, group2.top + group2.height() * 0.84769f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.14701f, group2.top + group2.height() * 0.8559f, group2.left + group2.width() * 0.14111f, group2.top + group2.height() * 0.86254f, group2.left + group2.width() * 0.13385f, group2.top + group2.height() * 0.86254f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.01316f, group2.top + group2.height() * 0.86254f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.00589f, group2.top + group2.height() * 0.86254f, group2.left, group2.top + group2.height() * 0.8559f, group2.left, group2.top + group2.height() * 0.84769f);
                bezier3Path.lineTo(group2.left, group2.top + group2.height() * 0.5382f);
                bezier3Path.cubicTo(group2.left, group2.top + group2.height() * 0.53f, group2.left + group2.width() * 0.00589f, group2.top + group2.height() * 0.52335f, group2.left + group2.width() * 0.01316f, group2.top + group2.height() * 0.52335f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.13385f, group2.top + group2.height() * 0.52335f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.14111f, group2.top + group2.height() * 0.52335f, group2.left + group2.width() * 0.14701f, group2.top + group2.height() * 0.53f, group2.left + group2.width() * 0.14701f, group2.top + group2.height() * 0.5382f);
                bezier3Path.close();
                bezier3Path.moveTo(group2.left + group2.width() * 0.81956f, group2.top + group2.height() * 0.71625f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.81999f, group2.top + group2.height() * 0.71637f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.82291f, group2.top + group2.height() * 0.71757f, group2.left + group2.width() * 0.82521f, group2.top + group2.height() * 0.72017f, group2.left + group2.width() * 0.82628f, group2.top + group2.height() * 0.72346f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.82712f, group2.top + group2.height() * 0.72648f, group2.left + group2.width() * 0.82712f, group2.top + group2.height() * 0.72928f, group2.left + group2.width() * 0.82712f, group2.top + group2.height() * 0.73489f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.82712f, group2.top + group2.height() * 0.84311f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.82712f, group2.top + group2.height() * 0.84871f, group2.left + group2.width() * 0.82712f, group2.top + group2.height() * 0.85152f, group2.left + group2.width() * 0.82638f, group2.top + group2.height() * 0.85405f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.82628f, group2.top + group2.height() * 0.85454f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.82521f, group2.top + group2.height() * 0.85783f, group2.left + group2.width() * 0.82291f, group2.top + group2.height() * 0.86043f, group2.left + group2.width() * 0.81999f, group2.top + group2.height() * 0.86163f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.81732f, group2.top + group2.height() * 0.86258f, group2.left + group2.width() * 0.81483f, group2.top + group2.height() * 0.86258f, group2.left + group2.width() * 0.80987f, group2.top + group2.height() * 0.86258f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.19244f, group2.top + group2.height() * 0.86258f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.18748f, group2.top + group2.height() * 0.86258f, group2.left + group2.width() * 0.18499f, group2.top + group2.height() * 0.86258f, group2.left + group2.width() * 0.18275f, group2.top + group2.height() * 0.86175f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.18232f, group2.top + group2.height() * 0.86163f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.1794f, group2.top + group2.height() * 0.86043f, group2.left + group2.width() * 0.1771f, group2.top + group2.height() * 0.85783f, group2.left + group2.width() * 0.17603f, group2.top + group2.height() * 0.85454f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.17519f, group2.top + group2.height() * 0.85152f, group2.left + group2.width() * 0.17519f, group2.top + group2.height() * 0.84871f, group2.left + group2.width() * 0.17519f, group2.top + group2.height() * 0.84311f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.17519f, group2.top + group2.height() * 0.73489f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.17519f, group2.top + group2.height() * 0.72928f, group2.left + group2.width() * 0.17519f, group2.top + group2.height() * 0.72648f, group2.left + group2.width() * 0.17593f, group2.top + group2.height() * 0.72395f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.17603f, group2.top + group2.height() * 0.72346f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.1771f, group2.top + group2.height() * 0.72017f, group2.left + group2.width() * 0.1794f, group2.top + group2.height() * 0.71757f, group2.left + group2.width() * 0.18232f, group2.top + group2.height() * 0.71637f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.18499f, group2.top + group2.height() * 0.71542f, group2.left + group2.width() * 0.18748f, group2.top + group2.height() * 0.71542f, group2.left + group2.width() * 0.19244f, group2.top + group2.height() * 0.71542f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.80987f, group2.top + group2.height() * 0.71542f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.81483f, group2.top + group2.height() * 0.71542f, group2.left + group2.width() * 0.81732f, group2.top + group2.height() * 0.71542f, group2.left + group2.width() * 0.81956f, group2.top + group2.height() * 0.71625f);
                bezier3Path.close();
                
                paint.reset();
                paint.setFlags(Paint.ANTI_ALIAS_FLAG);
                paint.setStyle(Paint.Style.FILL);
                paint.setColor(StyleKit.oroScuro);
                canvas.drawPath(bezier3Path, paint);
            }
            
            // Bezier 4
            if (highlited) {
                RectF bezier4Rect = CacheForEventi.bezier4Rect;
                bezier4Rect.set(group2.left + (float) Math.floor(group2.width() * 0.30181f + 0.46f) + 0.04f,
                    group2.top + (float) Math.floor(group2.height() * 0.31814f + 0.28f) + 0.22f,
                    group2.left + (float) Math.floor(group2.width() * 0.70055f + 0.47f) + 0.03f,
                    group2.top + (float) Math.floor(group2.height() * 0.68103f - 0.42f) + 0.92f);
                Path bezier4Path = CacheForEventi.bezier4Path;
                bezier4Path.reset();
                bezier4Path.moveTo(group2.left + group2.width() * 0.70055f, group2.top + group2.height() * 0.32193f);
                bezier4Path.lineTo(group2.left + group2.width() * 0.66824f, group2.top + group2.height() * 0.68103f);
                bezier4Path.lineTo(group2.left + group2.width() * 0.59124f, group2.top + group2.height() * 0.68103f);
                bezier4Path.cubicTo(group2.left + group2.width() * 0.59124f, group2.top + group2.height() * 0.68103f, group2.left + group2.width() * 0.70014f, group2.top + group2.height() * 0.32328f, group2.left + group2.width() * 0.70055f, group2.top + group2.height() * 0.32193f);
                bezier4Path.close();
                bezier4Path.moveTo(group2.left + group2.width() * 0.50286f, group2.top + group2.height() * 0.31814f);
                bezier4Path.lineTo(group2.left + group2.width() * 0.53996f, group2.top + group2.height() * 0.68103f);
                bezier4Path.lineTo(group2.left + group2.width() * 0.46577f, group2.top + group2.height() * 0.68103f);
                bezier4Path.cubicTo(group2.left + group2.width() * 0.46577f, group2.top + group2.height() * 0.68103f, group2.left + group2.width() * 0.50272f, group2.top + group2.height() * 0.31953f, group2.left + group2.width() * 0.50286f, group2.top + group2.height() * 0.31814f);
                bezier4Path.close();
                bezier4Path.moveTo(group2.left + group2.width() * 0.30181f, group2.top + group2.height() * 0.32193f);
                bezier4Path.lineTo(group2.left + group2.width() * 0.41112f, group2.top + group2.height() * 0.68103f);
                bezier4Path.lineTo(group2.left + group2.width() * 0.33413f, group2.top + group2.height() * 0.68103f);
                bezier4Path.cubicTo(group2.left + group2.width() * 0.33413f, group2.top + group2.height() * 0.68103f, group2.left + group2.width() * 0.30194f, group2.top + group2.height() * 0.32335f, group2.left + group2.width() * 0.30181f, group2.top + group2.height() * 0.32193f);
                bezier4Path.close();
                
                paint.reset();
                paint.setFlags(Paint.ANTI_ALIAS_FLAG);
                paint.setStyle(Paint.Style.FILL);
                paint.setColor(StyleKit.rosso);
                canvas.drawPath(bezier4Path, paint);
            }
        }
    }
    
    private static class CacheForGiochiLista {
        private static Paint paint = new Paint();
        private static RectF group2 = new RectF();
        private static RectF group = new RectF();
        private static RectF bezier6Rect = new RectF();
        private static Path bezier6Path = new Path();
        private static RectF bezierRect = new RectF();
        private static Path bezierPath = new Path();
        private static RectF bezier2Rect = new RectF();
        private static Path bezier2Path = new Path();
        private static RectF bezier3Rect = new RectF();
        private static Path bezier3Path = new Path();
        private static RectF group3 = new RectF();
        private static RectF group4 = new RectF();
        private static RectF bezier4Rect = new RectF();
        private static Path bezier4Path = new Path();
        private static RectF bezier5Rect = new RectF();
        private static Path bezier5Path = new Path();
        private static RectF bezier7Rect = new RectF();
        private static Path bezier7Path = new Path();
        private static RectF ovalRect = new RectF();
        private static Path ovalPath = new Path();
        private static RectF bezier19Rect = new RectF();
        private static Path bezier19Path = new Path();
    }
    
    
    public static void drawGiochiLista(Canvas canvas, RectF frame3, boolean highlited) {
        // General Declarations
        Paint paint = CacheForGiochiLista.paint;
        
        // Group 2
        {
            RectF group2 = CacheForGiochiLista.group2;
            group2.set(frame3.left + 4f,
                frame3.top + 6f,
                frame3.right - 5f,
                frame3.bottom - 5.7f);
            
            // Group
            {
                RectF group = CacheForGiochiLista.group;
                group.set(group2.left + (float) Math.floor(group2.width() * 0.41885f + 0.5f),
                    group2.top + (float) Math.floor(group2.height() * 0.42109f + 0.21f) + 0.29f,
                    group2.left + (float) Math.floor(group2.width() + 0.5f),
                    group2.top + (float) Math.floor(group2.height() + 0.2f) + 0.3f);
                
                // Bezier 6
                RectF bezier6Rect = CacheForGiochiLista.bezier6Rect;
                bezier6Rect.set(group2.left + (float) Math.floor(group2.width() * 0.41885f + 0.5f),
                    group2.top + (float) Math.floor(group2.height() * 0.42109f + 0.21f) + 0.29f,
                    group2.left + (float) Math.floor(group2.width() * 0.9096f - 0.23f) + 0.73f,
                    group2.top + (float) Math.floor(group2.height() * 0.91889f + 0.48f) + 0.02f);
                Path bezier6Path = CacheForGiochiLista.bezier6Path;
                bezier6Path.reset();
                bezier6Path.moveTo(group.left + group.width() * 0.84444f, group.top + group.height() * 0.85989f);
                bezier6Path.lineTo(group.left + group.width() * 0.84444f, group.top + group.height() * 0.67886f);
                bezier6Path.lineTo(group.left + group.width() * 0.77778f, group.top + group.height() * 0.61097f);
                bezier6Path.lineTo(group.left + group.width() * 0.77778f, group.top);
                bezier6Path.lineTo(group.left + group.width() * 0.06667f, group.top);
                bezier6Path.lineTo(group.left + group.width() * 0.06667f, group.top + group.height() * 0.61097f);
                bezier6Path.lineTo(group.left, group.top + group.height() * 0.67886f);
                bezier6Path.lineTo(group.left, group.top + group.height() * 0.85989f);
                bezier6Path.lineTo(group.left + group.width() * 0.84444f, group.top + group.height() * 0.85989f);
                bezier6Path.close();
                
                paint.reset();
                paint.setFlags(Paint.ANTI_ALIAS_FLAG);
                paint.setStrokeWidth(2f);
                paint.setStrokeMiter(10f);
                canvas.save();
                paint.setStyle(Paint.Style.STROKE);
                paint.setColor(StyleKit.bianco);
                canvas.drawPath(bezier6Path, paint);
                canvas.restore();
                
                // Bezier
                RectF bezierRect = CacheForGiochiLista.bezierRect;
                bezierRect.set(group2.left + (float) Math.floor(group2.width() * 0.45759f + 0.1f) + 0.4f,
                    group2.top + (float) Math.floor(group2.height() * 0.4367f + 0.27f) + 0.23f,
                    group2.left + (float) Math.floor(group2.width() + 0.5f),
                    group2.top + (float) Math.floor(group2.height() + 0.2f) + 0.3f);
                Path bezierPath = CacheForGiochiLista.bezierPath;
                bezierPath.reset();
                bezierPath.moveTo(group.left + group.width() * 0.15556f, group.top + group.height() * 0.208f);
                bezierPath.lineTo(group.left + group.width() * 0.68889f, group.top + group.height() * 0.208f);
                bezierPath.lineTo(group.left + group.width() * 0.68889f, group.top + group.height() * 0.07223f);
                bezierPath.lineTo(group.left + group.width() * 0.15556f, group.top + group.height() * 0.07223f);
                bezierPath.lineTo(group.left + group.width() * 0.15556f, group.top + group.height() * 0.208f);
                bezierPath.close();
                bezierPath.moveTo(group.left + group.width() * 0.95556f, group.top + group.height() * 0.50217f);
                bezierPath.lineTo(group.left + group.width() * 0.77778f, group.top + group.height() * 0.50217f);
                bezierPath.lineTo(group.left + group.width() * 0.77778f, group.top + group.height() * 0.3664f);
                bezierPath.lineTo(group.left + group.width() * 0.95556f, group.top + group.height() * 0.3664f);
                bezierPath.cubicTo(group.left + group.width() * 0.98011f, group.top + group.height() * 0.3664f, group.left + group.width(), group.top + group.height() * 0.38665f, group.left + group.width(), group.top + group.height() * 0.41166f);
                bezierPath.lineTo(group.left + group.width(), group.top + group.height() * 0.45691f);
                bezierPath.cubicTo(group.left + group.width(), group.top + group.height() * 0.48192f, group.left + group.width() * 0.98011f, group.top + group.height() * 0.50217f, group.left + group.width() * 0.95556f, group.top + group.height() * 0.50217f);
                bezierPath.close();
                bezierPath.moveTo(group.left + group.width(), group.top + group.height() * 0.09486f);
                bezierPath.cubicTo(group.left + group.width(), group.top + group.height() * 0.13235f, group.left + group.width() * 0.97016f, group.top + group.height() * 0.16274f, group.left + group.width() * 0.93333f, group.top + group.height() * 0.16274f);
                bezierPath.cubicTo(group.left + group.width() * 0.89651f, group.top + group.height() * 0.16274f, group.left + group.width() * 0.86667f, group.top + group.height() * 0.13235f, group.left + group.width() * 0.86667f, group.top + group.height() * 0.09486f);
                bezierPath.cubicTo(group.left + group.width() * 0.86667f, group.top + group.height() * 0.05736f, group.left + group.width() * 0.89651f, group.top + group.height() * 0.02697f, group.left + group.width() * 0.93333f, group.top + group.height() * 0.02697f);
                bezierPath.cubicTo(group.left + group.width() * 0.97016f, group.top + group.height() * 0.02697f, group.left + group.width(), group.top + group.height() * 0.05736f, group.left + group.width(), group.top + group.height() * 0.09486f);
                bezierPath.close();
                bezierPath.moveTo(group.left + group.width() * 0.75556f, group.top + group.height() * 0.88686f);
                bezierPath.lineTo(group.left + group.width() * 0.75556f, group.top + group.height() * 1f);
                bezierPath.lineTo(group.left + group.width() * 0.06667f, group.top + group.height() * 1f);
                bezierPath.lineTo(group.left + group.width() * 0.06667f, group.top + group.height() * 0.88686f);
                bezierPath.moveTo(group.left + group.width() * 0.93333f, group.top + group.height() * 0.16274f);
                bezierPath.lineTo(group.left + group.width() * 0.93333f, group.top + group.height() * 0.3664f);
                
                paint.reset();
                paint.setFlags(Paint.ANTI_ALIAS_FLAG);
                paint.setStrokeWidth(2f);
                paint.setStrokeMiter(10f);
                canvas.save();
                paint.setStyle(Paint.Style.STROKE);
                paint.setColor(StyleKit.bianco);
                canvas.drawPath(bezierPath, paint);
                canvas.restore();
                
                // Bezier 2
                RectF bezier2Rect = CacheForGiochiLista.bezier2Rect;
                bezier2Rect.set(group2.left + (float) Math.floor(group2.width() * 0.50927f + 0.23f) + 0.27f,
                    group2.top + (float) Math.floor(group2.height() * 0.60452f - 0.33f) + 0.83f,
                    group2.left + (float) Math.floor(group2.width() * 0.81921f + 0.03f) + 0.47f,
                    group2.top + (float) Math.floor(group2.height() * 0.76172f + 0.07f) + 0.43f);
                Path bezier2Path = CacheForGiochiLista.bezier2Path;
                bezier2Path.reset();
                bezier2Path.moveTo(group.left + group.width() * 0.15559f, group.top + group.height() * 0.31686f);
                bezier2Path.lineTo(group.left + group.width() * 0.33336f, group.top + group.height() * 0.31686f);
                bezier2Path.lineTo(group.left + group.width() * 0.33336f, group.top + group.height() * 0.5884f);
                bezier2Path.lineTo(group.left + group.width() * 0.15559f, group.top + group.height() * 0.5884f);
                bezier2Path.lineTo(group.left + group.width() * 0.15559f, group.top + group.height() * 0.31686f);
                bezier2Path.close();
                bezier2Path.moveTo(group.left + group.width() * 0.33336f, group.top + group.height() * 0.31686f);
                bezier2Path.lineTo(group.left + group.width() * 0.51114f, group.top + group.height() * 0.31686f);
                bezier2Path.lineTo(group.left + group.width() * 0.51114f, group.top + group.height() * 0.5884f);
                bezier2Path.lineTo(group.left + group.width() * 0.33336f, group.top + group.height() * 0.5884f);
                bezier2Path.lineTo(group.left + group.width() * 0.33336f, group.top + group.height() * 0.31686f);
                bezier2Path.close();
                bezier2Path.moveTo(group.left + group.width() * 0.51114f, group.top + group.height() * 0.31686f);
                bezier2Path.lineTo(group.left + group.width() * 0.68892f, group.top + group.height() * 0.31686f);
                bezier2Path.lineTo(group.left + group.width() * 0.68892f, group.top + group.height() * 0.5884f);
                bezier2Path.lineTo(group.left + group.width() * 0.51114f, group.top + group.height() * 0.5884f);
                bezier2Path.lineTo(group.left + group.width() * 0.51114f, group.top + group.height() * 0.31686f);
                bezier2Path.close();
                
                paint.reset();
                paint.setFlags(Paint.ANTI_ALIAS_FLAG);
                paint.setStrokeWidth(2f);
                paint.setStrokeMiter(10f);
                canvas.save();
                paint.setStyle(Paint.Style.STROKE);
                paint.setColor(StyleKit.bianco);
                canvas.drawPath(bezier2Path, paint);
                canvas.restore();
            }
            
            // Bezier 3
            RectF bezier3Rect = CacheForGiochiLista.bezier3Rect;
            bezier3Rect.set(group2.left,
                group2.top,
                group2.left + (float) Math.floor(group2.width() * 0.76702f) + 0.5f,
                group2.top + (float) Math.floor(group2.height() * 0.52842f) + 0.5f);
            Path bezier3Path = CacheForGiochiLista.bezier3Path;
            bezier3Path.reset();
            bezier3Path.moveTo(group2.left + group2.width() * 0.70032f, group2.top + group2.height() * 0.22309f);
            bezier3Path.cubicTo(group2.left + group2.width() * 0.70032f, group2.top + group2.height() * 0.30382f, group2.left + group2.width() * 0.55847f, group2.top + group2.height() * 0.36925f, group2.left + group2.width() * 0.38351f, group2.top + group2.height() * 0.36925f);
            bezier3Path.cubicTo(group2.left + group2.width() * 0.20854f, group2.top + group2.height() * 0.36925f, group2.left + group2.width() * 0.0667f, group2.top + group2.height() * 0.30382f, group2.left + group2.width() * 0.0667f, group2.top + group2.height() * 0.22309f);
            bezier3Path.moveTo(group2.left + group2.width() * 0.23344f, group2.top + group2.height() * 0.06798f);
            bezier3Path.cubicTo(group2.left + group2.width() * 0.11278f, group2.top + group2.height() * 0.09432f, group2.left + group2.width() * 0.02414f, group2.top + group2.height() * 0.1516f, group2.left, group2.top + group2.height() * 0.22071f);
            bezier3Path.lineTo(group2.left, group2.top + group2.height() * 0.3592f);
            bezier3Path.cubicTo(group2.left + group2.width() * 0.01667f, group2.top + group2.height() * 0.44285f, group2.left + group2.width() * 0.17285f, group2.top + group2.height() * 0.52842f, group2.left + group2.width() * 0.38351f, group2.top + group2.height() * 0.52842f);
            bezier3Path.cubicTo(group2.left + group2.width() * 0.40461f, group2.top + group2.height() * 0.52842f, group2.left + group2.width() * 0.42514f, group2.top + group2.height() * 0.52756f, group2.left + group2.width() * 0.44501f, group2.top + group2.height() * 0.52593f);
            bezier3Path.moveTo(group2.left + group2.width() * 0.74607f, group2.top + group2.height() * 0.40111f);
            bezier3Path.cubicTo(group2.left + group2.width() * 0.75657f, group2.top + group2.height() * 0.38736f, group2.left + group2.width() * 0.76367f, group2.top + group2.height() * 0.37325f, group2.left + group2.width() * 0.76702f, group2.top + group2.height() * 0.3592f);
            bezier3Path.lineTo(group2.left + group2.width() * 0.76702f, group2.top + group2.height() * 0.22071f);
            bezier3Path.cubicTo(group2.left + group2.width() * 0.74526f, group2.top + group2.height() * 0.1515f, group2.left + group2.width() * 0.65531f, group2.top + group2.height() * 0.09416f, group2.left + group2.width() * 0.53363f, group2.top + group2.height() * 0.06787f);
            bezier3Path.moveTo(group2.left + group2.width() * 0.43353f, group2.top + group2.height() * 0.14089f);
            bezier3Path.cubicTo(group2.left + group2.width() * 0.53841f, group2.top + group2.height() * 0.15118f, group2.left + group2.width() * 0.61695f, group2.top + group2.height() * 0.19315f, group2.left + group2.width() * 0.61695f, group2.top + group2.height() * 0.24337f);
            bezier3Path.cubicTo(group2.left + group2.width() * 0.61695f, group2.top + group2.height() * 0.25716f, group2.left + group2.width() * 0.61103f, group2.top + group2.height() * 0.27033f, group2.left + group2.width() * 0.60027f, group2.top + group2.height() * 0.28237f);
            bezier3Path.moveTo(group2.left + group2.width() * 0.177f, group2.top + group2.height() * 0.29233f);
            bezier3Path.cubicTo(group2.left + group2.width() * 0.15981f, group2.top + group2.height() * 0.27771f, group2.left + group2.width() * 0.15007f, group2.top + group2.height() * 0.26105f, group2.left + group2.width() * 0.15007f, group2.top + group2.height() * 0.24337f);
            bezier3Path.cubicTo(group2.left + group2.width() * 0.15007f, group2.top + group2.height() * 0.19315f, group2.left + group2.width() * 0.2286f, group2.top + group2.height() * 0.15118f, group2.left + group2.width() * 0.33349f, group2.top + group2.height() * 0.14089f);
            bezier3Path.moveTo(group2.left + group2.width() * 0.41686f, group2.top + group2.height() * 0.3231f);
            bezier3Path.lineTo(group2.left + group2.width() * 0.41686f, group2.top + group2.height() * 0.20001f);
            bezier3Path.lineTo(group2.left + group2.width() * 0.38351f, group2.top + group2.height() * 0.16924f);
            bezier3Path.lineTo(group2.left + group2.width() * 0.35016f, group2.top + group2.height() * 0.20001f);
            bezier3Path.lineTo(group2.left + group2.width() * 0.35016f, group2.top + group2.height() * 0.3231f);
            bezier3Path.moveTo(group2.left + group2.width() * 0.38351f, group2.top + group2.height() * 0.18463f);
            bezier3Path.lineTo(group2.left + group2.width() * 0.38351f, group2.top);
            bezier3Path.moveTo(group2.left + group2.width() * 0.41686f, group2.top);
            bezier3Path.lineTo(group2.left + group2.width() * 0.35016f, group2.top);
            bezier3Path.moveTo(group2.left + group2.width() * 0.50023f, group2.top + group2.height() * 0.04616f);
            bezier3Path.lineTo(group2.left + group2.width() * 0.26679f, group2.top + group2.height() * 0.04616f);
            bezier3Path.moveTo(group2.left + group2.width() * 0.26679f, group2.top + group2.height() * 0.01539f);
            bezier3Path.lineTo(group2.left + group2.width() * 0.26679f, group2.top + group2.height() * 0.07693f);
            bezier3Path.moveTo(group2.left + group2.width() * 0.50023f, group2.top + group2.height() * 0.01539f);
            bezier3Path.lineTo(group2.left + group2.width() * 0.50023f, group2.top + group2.height() * 0.07693f);
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStrokeWidth(2f);
            paint.setStrokeMiter(10f);
            canvas.save();
            paint.setStyle(Paint.Style.STROKE);
            paint.setColor(StyleKit.bianco);
            canvas.drawPath(bezier3Path, paint);
            canvas.restore();
        }
        
        // Group 3
        {
            RectF group3 = CacheForGiochiLista.group3;
            group3.set(frame3.left + 4f,
                frame3.top + 6f,
                frame3.right - 5f,
                frame3.bottom - 5.71f);
            
            // Group 4
            {
                RectF group4 = CacheForGiochiLista.group4;
                group4.set(group3.left + (float) Math.floor(group3.width() * 0.41885f + 0.5f),
                    group3.top + (float) Math.floor(group3.height() * 0.42111f + 0.21f) + 0.29f,
                    group3.left + (float) Math.floor(group3.width() + 0.5f),
                    group3.top + (float) Math.floor(group3.height() * 1f + 0.21f) + 0.29f);
                
                // Bezier 4
                if (highlited) {
                    RectF bezier4Rect = CacheForGiochiLista.bezier4Rect;
                    bezier4Rect.set(group3.left + (float) Math.floor(group3.width() * 0.41885f + 0.5f),
                        group3.top + (float) Math.floor(group3.height() * 0.42111f + 0.21f) + 0.29f,
                        group3.left + (float) Math.floor(group3.width() * 0.9096f - 0.23f) + 0.73f,
                        group3.top + (float) Math.floor(group3.height() * 0.91892f + 0.47f) + 0.03f);
                    Path bezier4Path = CacheForGiochiLista.bezier4Path;
                    bezier4Path.reset();
                    bezier4Path.moveTo(group4.left + group4.width() * 0.84444f, group4.top + group4.height() * 0.85994f);
                    bezier4Path.lineTo(group4.left + group4.width() * 0.84444f, group4.top + group4.height() * 0.6789f);
                    bezier4Path.lineTo(group4.left + group4.width() * 0.77778f, group4.top + group4.height() * 0.61101f);
                    bezier4Path.lineTo(group4.left + group4.width() * 0.77778f, group4.top);
                    bezier4Path.lineTo(group4.left + group4.width() * 0.06667f, group4.top);
                    bezier4Path.lineTo(group4.left + group4.width() * 0.06667f, group4.top + group4.height() * 0.61101f);
                    bezier4Path.lineTo(group4.left, group4.top + group4.height() * 0.6789f);
                    bezier4Path.lineTo(group4.left, group4.top + group4.height() * 0.85994f);
                    bezier4Path.lineTo(group4.left + group4.width() * 0.84444f, group4.top + group4.height() * 0.85994f);
                    bezier4Path.close();
                    
                    paint.reset();
                    paint.setFlags(Paint.ANTI_ALIAS_FLAG);
                    paint.setStrokeWidth(2f);
                    paint.setStrokeMiter(10f);
                    canvas.save();
                    paint.setStyle(Paint.Style.STROKE);
                    paint.setColor(StyleKit.oroScuro);
                    canvas.drawPath(bezier4Path, paint);
                    canvas.restore();
                }
                
                // Bezier 5
                if (highlited) {
                    RectF bezier5Rect = CacheForGiochiLista.bezier5Rect;
                    bezier5Rect.set(group3.left + (float) Math.floor(group3.width() * 0.45759f + 0.1f) + 0.4f,
                        group3.top + (float) Math.floor(group3.height() * 0.43669f + 0.27f) + 0.23f,
                        group3.left + (float) Math.floor(group3.width() + 0.5f),
                        group3.top + (float) Math.floor(group3.height() * 1f + 0.21f) + 0.29f);
                    Path bezier5Path = CacheForGiochiLista.bezier5Path;
                    bezier5Path.reset();
                    bezier5Path.moveTo(group4.left + group4.width() * 0.15556f, group4.top + group4.height() * 0.20795f);
                    bezier5Path.lineTo(group4.left + group4.width() * 0.68889f, group4.top + group4.height() * 0.20795f);
                    bezier5Path.lineTo(group4.left + group4.width() * 0.68889f, group4.top + group4.height() * 0.07217f);
                    bezier5Path.lineTo(group4.left + group4.width() * 0.15556f, group4.top + group4.height() * 0.07217f);
                    bezier5Path.lineTo(group4.left + group4.width() * 0.15556f, group4.top + group4.height() * 0.20795f);
                    bezier5Path.close();
                    bezier5Path.moveTo(group4.left + group4.width() * 0.95556f, group4.top + group4.height() * 0.50214f);
                    bezier5Path.lineTo(group4.left + group4.width() * 0.77778f, group4.top + group4.height() * 0.50214f);
                    bezier5Path.lineTo(group4.left + group4.width() * 0.77778f, group4.top + group4.height() * 0.36636f);
                    bezier5Path.lineTo(group4.left + group4.width() * 0.95556f, group4.top + group4.height() * 0.36636f);
                    bezier5Path.cubicTo(group4.left + group4.width() * 0.98011f, group4.top + group4.height() * 0.36636f, group4.left + group4.width(), group4.top + group4.height() * 0.38661f, group4.left + group4.width(), group4.top + group4.height() * 0.41162f);
                    bezier5Path.lineTo(group4.left + group4.width(), group4.top + group4.height() * 0.45688f);
                    bezier5Path.cubicTo(group4.left + group4.width(), group4.top + group4.height() * 0.48189f, group4.left + group4.width() * 0.98011f, group4.top + group4.height() * 0.50214f, group4.left + group4.width() * 0.95556f, group4.top + group4.height() * 0.50214f);
                    bezier5Path.close();
                    bezier5Path.moveTo(group4.left + group4.width(), group4.top + group4.height() * 0.0948f);
                    bezier5Path.cubicTo(group4.left + group4.width(), group4.top + group4.height() * 0.1323f, group4.left + group4.width() * 0.97016f, group4.top + group4.height() * 0.16269f, group4.left + group4.width() * 0.93333f, group4.top + group4.height() * 0.16269f);
                    bezier5Path.cubicTo(group4.left + group4.width() * 0.89651f, group4.top + group4.height() * 0.16269f, group4.left + group4.width() * 0.86667f, group4.top + group4.height() * 0.1323f, group4.left + group4.width() * 0.86667f, group4.top + group4.height() * 0.0948f);
                    bezier5Path.cubicTo(group4.left + group4.width() * 0.86667f, group4.top + group4.height() * 0.0573f, group4.left + group4.width() * 0.89651f, group4.top + group4.height() * 0.02691f, group4.left + group4.width() * 0.93333f, group4.top + group4.height() * 0.02691f);
                    bezier5Path.cubicTo(group4.left + group4.width() * 0.97016f, group4.top + group4.height() * 0.02691f, group4.left + group4.width(), group4.top + group4.height() * 0.0573f, group4.left + group4.width(), group4.top + group4.height() * 0.0948f);
                    bezier5Path.close();
                    bezier5Path.moveTo(group4.left + group4.width() * 0.75556f, group4.top + group4.height() * 0.88685f);
                    bezier5Path.lineTo(group4.left + group4.width() * 0.75556f, group4.top + group4.height());
                    bezier5Path.lineTo(group4.left + group4.width() * 0.06667f, group4.top + group4.height());
                    bezier5Path.lineTo(group4.left + group4.width() * 0.06667f, group4.top + group4.height() * 0.88685f);
                    bezier5Path.moveTo(group4.left + group4.width() * 0.93333f, group4.top + group4.height() * 0.16269f);
                    bezier5Path.lineTo(group4.left + group4.width() * 0.93333f, group4.top + group4.height() * 0.36636f);
                    
                    paint.reset();
                    paint.setFlags(Paint.ANTI_ALIAS_FLAG);
                    paint.setStrokeWidth(2f);
                    paint.setStrokeMiter(10f);
                    canvas.save();
                    paint.setStyle(Paint.Style.STROKE);
                    paint.setColor(StyleKit.oroScuro);
                    canvas.drawPath(bezier5Path, paint);
                    canvas.restore();
                }
                
                // Bezier 7
                if (highlited) {
                    RectF bezier7Rect = CacheForGiochiLista.bezier7Rect;
                    bezier7Rect.set(group3.left + (float) Math.floor(group3.width() * 0.50925f + 0.23f) + 0.27f,
                        group3.top + (float) Math.floor(group3.height() * 0.60452f - 0.33f) + 0.83f,
                        group3.left + (float) Math.floor(group3.width() * 0.8192f + 0.03f) + 0.47f,
                        group3.top + (float) Math.floor(group3.height() * 0.76172f + 0.07f) + 0.43f);
                    Path bezier7Path = CacheForGiochiLista.bezier7Path;
                    bezier7Path.reset();
                    bezier7Path.moveTo(group4.left + group4.width() * 0.15556f, group4.top + group4.height() * 0.31682f);
                    bezier7Path.lineTo(group4.left + group4.width() * 0.33333f, group4.top + group4.height() * 0.31682f);
                    bezier7Path.lineTo(group4.left + group4.width() * 0.33333f, group4.top + group4.height() * 0.58838f);
                    bezier7Path.lineTo(group4.left + group4.width() * 0.15556f, group4.top + group4.height() * 0.58838f);
                    bezier7Path.lineTo(group4.left + group4.width() * 0.15556f, group4.top + group4.height() * 0.31682f);
                    bezier7Path.close();
                    bezier7Path.moveTo(group4.left + group4.width() * 0.33333f, group4.top + group4.height() * 0.31682f);
                    bezier7Path.lineTo(group4.left + group4.width() * 0.51111f, group4.top + group4.height() * 0.31682f);
                    bezier7Path.lineTo(group4.left + group4.width() * 0.51111f, group4.top + group4.height() * 0.58838f);
                    bezier7Path.lineTo(group4.left + group4.width() * 0.33333f, group4.top + group4.height() * 0.58838f);
                    bezier7Path.lineTo(group4.left + group4.width() * 0.33333f, group4.top + group4.height() * 0.31682f);
                    bezier7Path.close();
                    bezier7Path.moveTo(group4.left + group4.width() * 0.51111f, group4.top + group4.height() * 0.31682f);
                    bezier7Path.lineTo(group4.left + group4.width() * 0.68889f, group4.top + group4.height() * 0.31682f);
                    bezier7Path.lineTo(group4.left + group4.width() * 0.68889f, group4.top + group4.height() * 0.58838f);
                    bezier7Path.lineTo(group4.left + group4.width() * 0.51111f, group4.top + group4.height() * 0.58838f);
                    bezier7Path.lineTo(group4.left + group4.width() * 0.51111f, group4.top + group4.height() * 0.31682f);
                    bezier7Path.close();
                    
                    paint.reset();
                    paint.setFlags(Paint.ANTI_ALIAS_FLAG);
                    paint.setStyle(Paint.Style.FILL);
                    paint.setColor(StyleKit.rosso);
                    canvas.drawPath(bezier7Path, paint);
                    
                    paint.reset();
                    paint.setFlags(Paint.ANTI_ALIAS_FLAG);
                    paint.setStrokeWidth(2f);
                    paint.setStrokeMiter(10f);
                    canvas.save();
                    paint.setStyle(Paint.Style.STROKE);
                    paint.setColor(StyleKit.oroScuro);
                    canvas.drawPath(bezier7Path, paint);
                    canvas.restore();
                }
            }
            
            // Oval
            if (highlited) {
                RectF ovalRect = CacheForGiochiLista.ovalRect;
                ovalRect.set(group3.left + (float) Math.floor(group3.width() * 0.15707f + 0.5f),
                    group3.top + (float) Math.floor(group3.height() * 0.14339f + 0.5f),
                    group3.left + (float) Math.floor(group3.width() * 0.60733f + 0.5f),
                    group3.top + (float) Math.floor(group3.height() * 0.34521f + 0.5f));
                Path ovalPath = CacheForGiochiLista.ovalPath;
                ovalPath.reset();
                ovalPath.addOval(ovalRect, Path.Direction.CW);
                
                paint.reset();
                paint.setFlags(Paint.ANTI_ALIAS_FLAG);
                paint.setStyle(Paint.Style.FILL);
                paint.setColor(StyleKit.rosso);
                canvas.drawPath(ovalPath, paint);
            }
            
            // Bezier 19
            if (highlited) {
                RectF bezier19Rect = CacheForGiochiLista.bezier19Rect;
                bezier19Rect.set(group3.left,
                    group3.top,
                    group3.left + (float) Math.floor(group3.width() * 0.76702f) + 0.5f,
                    group3.top + (float) Math.floor(group3.height() * 0.52843f) + 0.5f);
                Path bezier19Path = CacheForGiochiLista.bezier19Path;
                bezier19Path.reset();
                bezier19Path.moveTo(group3.left + group3.width() * 0.70032f, group3.top + group3.height() * 0.2231f);
                bezier19Path.cubicTo(group3.left + group3.width() * 0.70032f, group3.top + group3.height() * 0.30383f, group3.left + group3.width() * 0.55847f, group3.top + group3.height() * 0.36926f, group3.left + group3.width() * 0.38351f, group3.top + group3.height() * 0.36926f);
                bezier19Path.cubicTo(group3.left + group3.width() * 0.20854f, group3.top + group3.height() * 0.36926f, group3.left + group3.width() * 0.0667f, group3.top + group3.height() * 0.30383f, group3.left + group3.width() * 0.0667f, group3.top + group3.height() * 0.2231f);
                bezier19Path.moveTo(group3.left + group3.width() * 0.23344f, group3.top + group3.height() * 0.06798f);
                bezier19Path.cubicTo(group3.left + group3.width() * 0.11278f, group3.top + group3.height() * 0.09432f, group3.left + group3.width() * 0.02414f, group3.top + group3.height() * 0.1516f, group3.left, group3.top + group3.height() * 0.22071f);
                bezier19Path.lineTo(group3.left, group3.top + group3.height() * 0.3592f);
                bezier19Path.cubicTo(group3.left + group3.width() * 0.01667f, group3.top + group3.height() * 0.44286f, group3.left + group3.width() * 0.17285f, group3.top + group3.height() * 0.52843f, group3.left + group3.width() * 0.38351f, group3.top + group3.height() * 0.52843f);
                bezier19Path.cubicTo(group3.left + group3.width() * 0.40461f, group3.top + group3.height() * 0.52843f, group3.left + group3.width() * 0.42514f, group3.top + group3.height() * 0.52757f, group3.left + group3.width() * 0.44501f, group3.top + group3.height() * 0.52594f);
                bezier19Path.moveTo(group3.left + group3.width() * 0.74607f, group3.top + group3.height() * 0.40112f);
                bezier19Path.cubicTo(group3.left + group3.width() * 0.75657f, group3.top + group3.height() * 0.38737f, group3.left + group3.width() * 0.76367f, group3.top + group3.height() * 0.37326f, group3.left + group3.width() * 0.76702f, group3.top + group3.height() * 0.3592f);
                bezier19Path.lineTo(group3.left + group3.width() * 0.76702f, group3.top + group3.height() * 0.22071f);
                bezier19Path.cubicTo(group3.left + group3.width() * 0.74526f, group3.top + group3.height() * 0.15151f, group3.left + group3.width() * 0.65531f, group3.top + group3.height() * 0.09416f, group3.left + group3.width() * 0.53363f, group3.top + group3.height() * 0.06787f);
                bezier19Path.moveTo(group3.left + group3.width() * 0.43353f, group3.top + group3.height() * 0.14089f);
                bezier19Path.cubicTo(group3.left + group3.width() * 0.53841f, group3.top + group3.height() * 0.15118f, group3.left + group3.width() * 0.61695f, group3.top + group3.height() * 0.19315f, group3.left + group3.width() * 0.61695f, group3.top + group3.height() * 0.24337f);
                bezier19Path.cubicTo(group3.left + group3.width() * 0.61695f, group3.top + group3.height() * 0.25716f, group3.left + group3.width() * 0.61103f, group3.top + group3.height() * 0.27033f, group3.left + group3.width() * 0.60027f, group3.top + group3.height() * 0.28238f);
                bezier19Path.moveTo(group3.left + group3.width() * 0.177f, group3.top + group3.height() * 0.29233f);
                bezier19Path.cubicTo(group3.left + group3.width() * 0.15981f, group3.top + group3.height() * 0.27772f, group3.left + group3.width() * 0.15007f, group3.top + group3.height() * 0.26105f, group3.left + group3.width() * 0.15007f, group3.top + group3.height() * 0.24337f);
                bezier19Path.cubicTo(group3.left + group3.width() * 0.15007f, group3.top + group3.height() * 0.19315f, group3.left + group3.width() * 0.2286f, group3.top + group3.height() * 0.15118f, group3.left + group3.width() * 0.33349f, group3.top + group3.height() * 0.14089f);
                bezier19Path.moveTo(group3.left + group3.width() * 0.41686f, group3.top + group3.height() * 0.3231f);
                bezier19Path.lineTo(group3.left + group3.width() * 0.41686f, group3.top + group3.height() * 0.20002f);
                bezier19Path.lineTo(group3.left + group3.width() * 0.38351f, group3.top + group3.height() * 0.16924f);
                bezier19Path.lineTo(group3.left + group3.width() * 0.35016f, group3.top + group3.height() * 0.20002f);
                bezier19Path.lineTo(group3.left + group3.width() * 0.35016f, group3.top + group3.height() * 0.3231f);
                bezier19Path.moveTo(group3.left + group3.width() * 0.38351f, group3.top + group3.height() * 0.18463f);
                bezier19Path.lineTo(group3.left + group3.width() * 0.38351f, group3.top);
                bezier19Path.moveTo(group3.left + group3.width() * 0.41686f, group3.top);
                bezier19Path.lineTo(group3.left + group3.width() * 0.35016f, group3.top);
                bezier19Path.moveTo(group3.left + group3.width() * 0.50023f, group3.top + group3.height() * 0.04616f);
                bezier19Path.lineTo(group3.left + group3.width() * 0.26679f, group3.top + group3.height() * 0.04616f);
                bezier19Path.moveTo(group3.left + group3.width() * 0.26679f, group3.top + group3.height() * 0.01539f);
                bezier19Path.lineTo(group3.left + group3.width() * 0.26679f, group3.top + group3.height() * 0.07693f);
                bezier19Path.moveTo(group3.left + group3.width() * 0.50023f, group3.top + group3.height() * 0.01539f);
                bezier19Path.lineTo(group3.left + group3.width() * 0.50023f, group3.top + group3.height() * 0.07693f);
                
                paint.reset();
                paint.setFlags(Paint.ANTI_ALIAS_FLAG);
                paint.setStrokeWidth(2f);
                paint.setStrokeMiter(10f);
                canvas.save();
                paint.setStyle(Paint.Style.STROKE);
                paint.setColor(StyleKit.oroScuro);
                canvas.drawPath(bezier19Path, paint);
                canvas.restore();
            }
        }
    }
    
    private static class CacheForPromozioni {
        private static Paint paint = new Paint();
        private static RectF group2 = new RectF();
        private static RectF bezierRect = new RectF();
        private static Path bezierPath = new Path();
        private static RectF group = new RectF();
        private static RectF bezier2Rect = new RectF();
        private static Path bezier2Path = new Path();
        private static RectF bezier3Rect = new RectF();
        private static Path bezier3Path = new Path();
    }
    
    
    public static void drawPromozioni(Canvas canvas, RectF frame, boolean highlited) {
        // General Declarations
        Paint paint = CacheForPromozioni.paint;
        
        // Group 2
        {
            RectF group2 = CacheForPromozioni.group2;
            group2.set(frame.left + 9f,
                frame.top + 2f,
                frame.right - 9f,
                frame.bottom - 2f);
            
            // Bezier
            RectF bezierRect = CacheForPromozioni.bezierRect;
            bezierRect.set(group2.left,
                group2.top,
                group2.left + (float) Math.floor(group2.width() + 0.5f),
                group2.top + (float) Math.floor(group2.height() + 0.5f));
            Path bezierPath = CacheForPromozioni.bezierPath;
            bezierPath.reset();
            bezierPath.moveTo(group2.left + group2.width() * 0.49264f, group2.top + group2.height() * 0.03085f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.49264f, group2.top + group2.height() * 0.04398f, group2.left + group2.width() * 0.48118f, group2.top + group2.height() * 0.05462f, group2.left + group2.width() * 0.46706f, group2.top + group2.height() * 0.05462f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.45293f, group2.top + group2.height() * 0.05462f, group2.left + group2.width() * 0.44147f, group2.top + group2.height() * 0.04398f, group2.left + group2.width() * 0.44147f, group2.top + group2.height() * 0.03085f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.44147f, group2.top + group2.height() * 0.01772f, group2.left + group2.width() * 0.45293f, group2.top + group2.height() * 0.00708f, group2.left + group2.width() * 0.46706f, group2.top + group2.height() * 0.00708f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.48118f, group2.top + group2.height() * 0.00708f, group2.left + group2.width() * 0.49264f, group2.top + group2.height() * 0.01772f, group2.left + group2.width() * 0.49264f, group2.top + group2.height() * 0.03085f);
            bezierPath.close();
            bezierPath.moveTo(group2.left + group2.width() * 0.67399f, group2.top + group2.height() * 0.03861f);
            bezierPath.lineTo(group2.left + group2.width() * 0.649f, group2.top + group2.height() * 0.03861f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.649f, group2.top + group2.height() * 0.04491f, group2.left + group2.width() * 0.649f, group2.top + group2.height() * 0.05359f, group2.left + group2.width() * 0.649f, group2.top + group2.height() * 0.05895f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.649f, group2.top + group2.height() * 0.05895f, group2.left + group2.width() * 0.66533f, group2.top + group2.height() * 0.05895f, group2.left + group2.width() * 0.67399f, group2.top + group2.height() * 0.05895f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.67399f, group2.top + group2.height() * 0.05566f, group2.left + group2.width() * 0.67399f, group2.top + group2.height() * 0.05112f, group2.left + group2.width() * 0.67399f, group2.top + group2.height() * 0.04664f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.67399f, group2.top + group2.height() * 0.04381f, group2.left + group2.width() * 0.67399f, group2.top + group2.height() * 0.04104f, group2.left + group2.width() * 0.67399f, group2.top + group2.height() * 0.03861f);
            bezierPath.close();
            bezierPath.moveTo(group2.left + group2.width() * 0.67924f, group2.top + group2.height() * 0f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.67924f, group2.top + group2.height() * 0f, group2.left + group2.width() * 0.67924f, group2.top + group2.height() * 0.01957f, group2.left + group2.width() * 0.67924f, group2.top + group2.height() * 0.03085f);
            bezierPath.lineTo(group2.left + group2.width() * 0.71554f, group2.top + group2.height() * 0.03085f);
            bezierPath.lineTo(group2.left + group2.width() * 0.71554f, group2.top + group2.height() * 0.06383f);
            bezierPath.lineTo(group2.left + group2.width() * 0.67924f, group2.top + group2.height() * 0.06383f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.67924f, group2.top + group2.height() * 0.07421f, group2.left + group2.width() * 0.67924f, group2.top + group2.height() * 0.09756f, group2.left + group2.width() * 0.67924f, group2.top + group2.height() * 0.09756f);
            bezierPath.lineTo(group2.left + group2.width() * 0.64375f, group2.top + group2.height() * 0.09756f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.64375f, group2.top + group2.height() * 0.09756f, group2.left + group2.width() * 0.64375f, group2.top + group2.height() * 0.08264f, group2.left + group2.width() * 0.64375f, group2.top + group2.height() * 0.07135f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.64375f, group2.top + group2.height() * 0.06851f, group2.left + group2.width() * 0.64375f, group2.top + group2.height() * 0.06591f, group2.left + group2.width() * 0.64375f, group2.top + group2.height() * 0.06383f);
            bezierPath.lineTo(group2.left + group2.width() * 0.60745f, group2.top + group2.height() * 0.06383f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.60745f, group2.top + group2.height() * 0.06383f, group2.left + group2.width() * 0.60745f, group2.top + group2.height() * 0.05664f, group2.left + group2.width() * 0.60745f, group2.top + group2.height() * 0.04897f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.60745f, group2.top + group2.height() * 0.04336f, group2.left + group2.width() * 0.60745f, group2.top + group2.height() * 0.0375f, group2.left + group2.width() * 0.60745f, group2.top + group2.height() * 0.03401f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.60745f, group2.top + group2.height() * 0.03206f, group2.left + group2.width() * 0.60745f, group2.top + group2.height() * 0.03085f, group2.left + group2.width() * 0.60745f, group2.top + group2.height() * 0.03085f);
            bezierPath.lineTo(group2.left + group2.width() * 0.64375f, group2.top + group2.height() * 0.03085f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.64375f, group2.top + group2.height() * 0.02681f, group2.left + group2.width() * 0.64375f, group2.top + group2.height() * 0.02171f, group2.left + group2.width() * 0.64375f, group2.top + group2.height() * 0.01683f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.64375f, group2.top + group2.height() * 0.00807f, group2.left + group2.width() * 0.64375f, group2.top, group2.left + group2.width() * 0.64375f, group2.top);
            bezierPath.lineTo(group2.left + group2.width() * 0.67924f, group2.top);
            bezierPath.lineTo(group2.left + group2.width() * 0.67924f, group2.top + group2.height() * 0f);
            bezierPath.close();
            bezierPath.moveTo(group2.left + group2.width() * 0.29886f, group2.top + group2.height() * 0.14346f);
            bezierPath.lineTo(group2.left + group2.width() * 0.27402f, group2.top + group2.height() * 0.14346f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.27402f, group2.top + group2.height() * 0.14976f, group2.left + group2.width() * 0.27402f, group2.top + group2.height() * 0.15853f, group2.left + group2.width() * 0.27402f, group2.top + group2.height() * 0.16393f);
            bezierPath.lineTo(group2.left + group2.width() * 0.29886f, group2.top + group2.height() * 0.16393f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.29886f, group2.top + group2.height() * 0.15853f, group2.left + group2.width() * 0.29886f, group2.top + group2.height() * 0.14976f, group2.left + group2.width() * 0.29886f, group2.top + group2.height() * 0.14346f);
            bezierPath.close();
            bezierPath.moveTo(group2.left + group2.width() * 0.5966f, group2.top + group2.height() * 0.13685f);
            bezierPath.lineTo(group2.left + group2.width() * 0.59316f, group2.top + group2.height() * 0.16702f);
            bezierPath.lineTo(group2.left + group2.width() * 0.61974f, group2.top + group2.height() * 0.14803f);
            bezierPath.lineTo(group2.left + group2.width() * 0.5966f, group2.top + group2.height() * 0.13685f);
            bezierPath.close();
            bezierPath.moveTo(group2.left + group2.width() * 0.47773f, group2.top + group2.height() * 0.13685f);
            bezierPath.lineTo(group2.left + group2.width() * 0.4546f, group2.top + group2.height() * 0.14803f);
            bezierPath.lineTo(group2.left + group2.width() * 0.48117f, group2.top + group2.height() * 0.16702f);
            bezierPath.lineTo(group2.left + group2.width() * 0.47773f, group2.top + group2.height() * 0.13685f);
            bezierPath.close();
            bezierPath.moveTo(group2.left + group2.width() * 0.30411f, group2.top + group2.height() * 0.10485f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.30411f, group2.top + group2.height() * 0.10484f, group2.left + group2.width() * 0.30411f, group2.top + group2.height() * 0.12458f, group2.left + group2.width() * 0.30411f, group2.top + group2.height() * 0.13583f);
            bezierPath.lineTo(group2.left + group2.width() * 0.34041f, group2.top + group2.height() * 0.13583f);
            bezierPath.lineTo(group2.left + group2.width() * 0.34041f, group2.top + group2.height() * 0.16881f);
            bezierPath.lineTo(group2.left + group2.width() * 0.30411f, group2.top + group2.height() * 0.16881f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.30411f, group2.top + group2.height() * 0.17919f, group2.left + group2.width() * 0.30411f, group2.top + group2.height() * 0.20254f, group2.left + group2.width() * 0.30411f, group2.top + group2.height() * 0.20254f);
            bezierPath.lineTo(group2.left + group2.width() * 0.26862f, group2.top + group2.height() * 0.20254f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.26862f, group2.top + group2.height() * 0.20254f, group2.left + group2.width() * 0.26862f, group2.top + group2.height() * 0.17919f, group2.left + group2.width() * 0.26862f, group2.top + group2.height() * 0.16881f);
            bezierPath.lineTo(group2.left + group2.width() * 0.23247f, group2.top + group2.height() * 0.16881f);
            bezierPath.lineTo(group2.left + group2.width() * 0.23247f, group2.top + group2.height() * 0.13583f);
            bezierPath.lineTo(group2.left + group2.width() * 0.26862f, group2.top + group2.height() * 0.13583f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.26862f, group2.top + group2.height() * 0.12458f, group2.left + group2.width() * 0.26862f, group2.top + group2.height() * 0.10484f, group2.left + group2.width() * 0.26862f, group2.top + group2.height() * 0.10484f);
            bezierPath.lineTo(group2.left + group2.width() * 0.30411f, group2.top + group2.height() * 0.10484f);
            bezierPath.lineTo(group2.left + group2.width() * 0.30411f, group2.top + group2.height() * 0.10485f);
            bezierPath.close();
            bezierPath.moveTo(group2.left + group2.width() * 0.56681f, group2.top + group2.height() * 0.08524f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.56681f, group2.top + group2.height() * 0.08524f, group2.left + group2.width() * 0.56766f, group2.top + group2.height() * 0.08565f, group2.left + group2.width() * 0.56921f, group2.top + group2.height() * 0.0864f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.586f, group2.top + group2.height() * 0.09453f, group2.left + group2.width() * 0.68548f, group2.top + group2.height() * 0.14267f, group2.left + group2.width() * 0.68548f, group2.top + group2.height() * 0.14267f);
            bezierPath.lineTo(group2.left + group2.width() * 0.58799f, group2.top + group2.height() * 0.21231f);
            bezierPath.lineTo(group2.left + group2.width() * 0.58776f, group2.top + group2.height() * 0.21437f);
            bezierPath.lineTo(group2.left + group2.width() * 0.58543f, group2.top + group2.height() * 0.21415f);
            bezierPath.lineTo(group2.left + group2.width() * 0.57625f, group2.top + group2.height() * 0.22072f);
            bezierPath.lineTo(group2.left + group2.width() * 0.56954f, group2.top + group2.height() * 0.21259f);
            bezierPath.lineTo(group2.left + group2.width() * 0.55247f, group2.top + group2.height() * 0.21091f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.55247f, group2.top + group2.height() * 0.21091f, group2.left + group2.width() * 0.56466f, group2.top + group2.height() * 0.10404f, group2.left + group2.width() * 0.56656f, group2.top + group2.height() * 0.0874f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.56672f, group2.top + group2.height() * 0.086f, group2.left + group2.width() * 0.56681f, group2.top + group2.height() * 0.08524f, group2.left + group2.width() * 0.56681f, group2.top + group2.height() * 0.08524f);
            bezierPath.close();
            bezierPath.moveTo(group2.left + group2.width() * 0.50753f, group2.top + group2.height() * 0.08524f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.50753f, group2.top + group2.height() * 0.08524f, group2.left + group2.width() * 0.50863f, group2.top + group2.height() * 0.09486f, group2.left + group2.width() * 0.51021f, group2.top + group2.height() * 0.10878f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.51437f, group2.top + group2.height() * 0.14516f, group2.left + group2.width() * 0.52187f, group2.top + group2.height() * 0.21091f, group2.left + group2.width() * 0.52187f, group2.top + group2.height() * 0.21091f);
            bezierPath.lineTo(group2.left + group2.width() * 0.5048f, group2.top + group2.height() * 0.21259f);
            bezierPath.lineTo(group2.left + group2.width() * 0.49809f, group2.top + group2.height() * 0.22072f);
            bezierPath.lineTo(group2.left + group2.width() * 0.48891f, group2.top + group2.height() * 0.21415f);
            bezierPath.lineTo(group2.left + group2.width() * 0.48658f, group2.top + group2.height() * 0.21437f);
            bezierPath.lineTo(group2.left + group2.width() * 0.48634f, group2.top + group2.height() * 0.21231f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.48634f, group2.top + group2.height() * 0.21231f, group2.left + group2.width() * 0.4396f, group2.top + group2.height() * 0.17892f, group2.left + group2.width() * 0.41085f, group2.top + group2.height() * 0.15838f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.4068f, group2.top + group2.height() * 0.15549f, group2.left + group2.width() * 0.40312f, group2.top + group2.height() * 0.15286f, group2.left + group2.width() * 0.39997f, group2.top + group2.height() * 0.15061f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.39317f, group2.top + group2.height() * 0.14575f, group2.left + group2.width() * 0.38886f, group2.top + group2.height() * 0.14267f, group2.left + group2.width() * 0.38886f, group2.top + group2.height() * 0.14267f);
            bezierPath.lineTo(group2.left + group2.width() * 0.50753f, group2.top + group2.height() * 0.08524f);
            bezierPath.lineTo(group2.left + group2.width() * 0.50753f, group2.top + group2.height() * 0.08524f);
            bezierPath.close();
            bezierPath.moveTo(group2.left + group2.width() * 0.13658f, group2.top + group2.height() * 0.23861f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.13658f, group2.top + group2.height() * 0.25174f, group2.left + group2.width() * 0.12513f, group2.top + group2.height() * 0.26238f, group2.left + group2.width() * 0.111f, group2.top + group2.height() * 0.26238f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.09687f, group2.top + group2.height() * 0.26238f, group2.left + group2.width() * 0.08542f, group2.top + group2.height() * 0.25174f, group2.left + group2.width() * 0.08542f, group2.top + group2.height() * 0.23861f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.08542f, group2.top + group2.height() * 0.22548f, group2.left + group2.width() * 0.09687f, group2.top + group2.height() * 0.21484f, group2.left + group2.width() * 0.111f, group2.top + group2.height() * 0.21484f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.12513f, group2.top + group2.height() * 0.21484f, group2.left + group2.width() * 0.13658f, group2.top + group2.height() * 0.22548f, group2.left + group2.width() * 0.13658f, group2.top + group2.height() * 0.23861f);
            bezierPath.close();
            bezierPath.moveTo(group2.left + group2.width() * 0.59622f, group2.top + group2.height() * 0.22702f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.59622f, group2.top + group2.height() * 0.22701f, group2.left + group2.width() * 0.59622f, group2.top + group2.height() * 0.23918f, group2.left + group2.width() * 0.59622f, group2.top + group2.height() * 0.25885f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.59622f, group2.top + group2.height() * 0.27943f, group2.left + group2.width() * 0.59622f, group2.top + group2.height() * 0.30821f, group2.left + group2.width() * 0.59622f, group2.top + group2.height() * 0.33988f);
            bezierPath.lineTo(group2.left + group2.width() * 0.72003f, group2.top + group2.height() * 0.33988f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.72003f, group2.top + group2.height() * 0.30962f, group2.left + group2.width() * 0.72003f, group2.top + group2.height() * 0.26953f, group2.left + group2.width() * 0.72003f, group2.top + group2.height() * 0.26953f);
            bezierPath.lineTo(group2.left + group2.width() * 0.61629f, group2.top + group2.height() * 0.26953f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.61629f, group2.top + group2.height() * 0.26953f, group2.left + group2.width() * 0.61629f, group2.top + group2.height() * 0.26566f, group2.left + group2.width() * 0.61629f, group2.top + group2.height() * 0.26058f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.61629f, group2.top + group2.height() * 0.25082f, group2.left + group2.width() * 0.61629f, group2.top + group2.height() * 0.23655f, group2.left + group2.width() * 0.61629f, group2.top + group2.height() * 0.23655f);
            bezierPath.lineTo(group2.left + group2.width() * 0.75552f, group2.top + group2.height() * 0.23655f);
            bezierPath.lineTo(group2.left + group2.width() * 0.75552f, group2.top + group2.height() * 0.37297f);
            bezierPath.lineTo(group2.left + group2.width() * 0.72003f, group2.top + group2.height() * 0.37297f);
            bezierPath.lineTo(group2.left + group2.width() * 0.59622f, group2.top + group2.height() * 0.37286f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.59622f, group2.top + group2.height() * 0.42995f, group2.left + group2.width() * 0.59622f, group2.top + group2.height() * 0.49024f, group2.left + group2.width() * 0.59622f, group2.top + group2.height() * 0.52616f);
            bezierPath.lineTo(group2.left + group2.width() * 0.72003f, group2.top + group2.height() * 0.52616f);
            bezierPath.lineTo(group2.left + group2.width() * 0.72003f, group2.top + group2.height() * 0.40196f);
            bezierPath.lineTo(group2.left + group2.width() * 0.75552f, group2.top + group2.height() * 0.40196f);
            bezierPath.lineTo(group2.left + group2.width() * 0.75552f, group2.top + group2.height() * 0.55913f);
            bezierPath.lineTo(group2.left + group2.width() * 0.30673f, group2.top + group2.height() * 0.55913f);
            bezierPath.lineTo(group2.left + group2.width() * 0.30673f, group2.top + group2.height() * 0.40675f);
            bezierPath.lineTo(group2.left + group2.width() * 0.34222f, group2.top + group2.height() * 0.40675f);
            bezierPath.lineTo(group2.left + group2.width() * 0.34222f, group2.top + group2.height() * 0.52616f);
            bezierPath.lineTo(group2.left + group2.width() * 0.47587f, group2.top + group2.height() * 0.52616f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.47587f, group2.top + group2.height() * 0.49024f, group2.left + group2.width() * 0.47587f, group2.top + group2.height() * 0.42995f, group2.left + group2.width() * 0.47587f, group2.top + group2.height() * 0.37286f);
            bezierPath.lineTo(group2.left + group2.width() * 0.31032f, group2.top + group2.height() * 0.37286f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.31032f, group2.top + group2.height() * 0.37286f, group2.left + group2.width() * 0.31032f, group2.top + group2.height() * 0.37201f, group2.left + group2.width() * 0.31032f, group2.top + group2.height() * 0.37058f);
            bezierPath.lineTo(group2.left + group2.width() * 0.30673f, group2.top + group2.height() * 0.37058f);
            bezierPath.lineTo(group2.left + group2.width() * 0.30673f, group2.top + group2.height() * 0.23655f);
            bezierPath.lineTo(group2.left + group2.width() * 0.45023f, group2.top + group2.height() * 0.23655f);
            bezierPath.lineTo(group2.left + group2.width() * 0.45023f, group2.top + group2.height() * 0.26953f);
            bezierPath.lineTo(group2.left + group2.width() * 0.34222f, group2.top + group2.height() * 0.26953f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.34222f, group2.top + group2.height() * 0.26953f, group2.left + group2.width() * 0.34222f, group2.top + group2.height() * 0.31015f, group2.left + group2.width() * 0.34222f, group2.top + group2.height() * 0.33988f);
            bezierPath.lineTo(group2.left + group2.width() * 0.47587f, group2.top + group2.height() * 0.33988f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.47587f, group2.top + group2.height() * 0.30245f, group2.left + group2.width() * 0.47587f, group2.top + group2.height() * 0.26905f, group2.left + group2.width() * 0.47587f, group2.top + group2.height() * 0.24847f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.47587f, group2.top + group2.height() * 0.23499f, group2.left + group2.width() * 0.47587f, group2.top + group2.height() * 0.22701f, group2.left + group2.width() * 0.47587f, group2.top + group2.height() * 0.22701f);
            bezierPath.lineTo(group2.left + group2.width() * 0.59622f, group2.top + group2.height() * 0.22702f);
            bezierPath.close();
            bezierPath.moveTo(group2.left + group2.width() * 0.08727f, group2.top + group2.height() * 0.40577f);
            bezierPath.lineTo(group2.left + group2.width() * 0.06228f, group2.top + group2.height() * 0.40577f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.06228f, group2.top + group2.height() * 0.41208f, group2.left + group2.width() * 0.06228f, group2.top + group2.height() * 0.42085f, group2.left + group2.width() * 0.06228f, group2.top + group2.height() * 0.42625f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.06228f, group2.top + group2.height() * 0.42625f, group2.left + group2.width() * 0.07861f, group2.top + group2.height() * 0.42625f, group2.left + group2.width() * 0.08727f, group2.top + group2.height() * 0.42625f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.08727f, group2.top + group2.height() * 0.42085f, group2.left + group2.width() * 0.08727f, group2.top + group2.height() * 0.41208f, group2.left + group2.width() * 0.08727f, group2.top + group2.height() * 0.40577f);
            bezierPath.close();
            bezierPath.moveTo(group2.left + group2.width() * 0.09252f, group2.top + group2.height() * 0.36716f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.09252f, group2.top + group2.height() * 0.36716f, group2.left + group2.width() * 0.09252f, group2.top + group2.height() * 0.38689f, group2.left + group2.width() * 0.09252f, group2.top + group2.height() * 0.39814f);
            bezierPath.lineTo(group2.left + group2.width() * 0.12882f, group2.top + group2.height() * 0.39814f);
            bezierPath.lineTo(group2.left + group2.width() * 0.12882f, group2.top + group2.height() * 0.43112f);
            bezierPath.lineTo(group2.left + group2.width() * 0.09252f, group2.top + group2.height() * 0.43112f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.09252f, group2.top + group2.height() * 0.44151f, group2.left + group2.width() * 0.09252f, group2.top + group2.height() * 0.46486f, group2.left + group2.width() * 0.09252f, group2.top + group2.height() * 0.46486f);
            bezierPath.lineTo(group2.left + group2.width() * 0.05703f, group2.top + group2.height() * 0.46486f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.05703f, group2.top + group2.height() * 0.46486f, group2.left + group2.width() * 0.05703f, group2.top + group2.height() * 0.44151f, group2.left + group2.width() * 0.05703f, group2.top + group2.height() * 0.43112f);
            bezierPath.lineTo(group2.left + group2.width() * 0.02073f, group2.top + group2.height() * 0.43112f);
            bezierPath.lineTo(group2.left + group2.width() * 0.02073f, group2.top + group2.height() * 0.39814f);
            bezierPath.lineTo(group2.left + group2.width() * 0.05703f, group2.top + group2.height() * 0.39814f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.05703f, group2.top + group2.height() * 0.38689f, group2.left + group2.width() * 0.05703f, group2.top + group2.height() * 0.36716f, group2.left + group2.width() * 0.05703f, group2.top + group2.height() * 0.36716f);
            bezierPath.lineTo(group2.left + group2.width() * 0.09252f, group2.top + group2.height() * 0.36716f);
            bezierPath.lineTo(group2.left + group2.width() * 0.09252f, group2.top + group2.height() * 0.36716f);
            bezierPath.close();
            bezierPath.moveTo(group2.left + group2.width() * 0.56073f, group2.top + group2.height() * 0.25999f);
            bezierPath.lineTo(group2.left + group2.width() * 0.51136f, group2.top + group2.height() * 0.25999f);
            bezierPath.lineTo(group2.left + group2.width() * 0.51136f, group2.top + group2.height() * 0.52574f);
            bezierPath.lineTo(group2.left + group2.width() * 0.56073f, group2.top + group2.height() * 0.52574f);
            bezierPath.lineTo(group2.left + group2.width() * 0.56073f, group2.top + group2.height() * 0.25999f);
            bezierPath.close();
            bezierPath.moveTo(group2.left + group2.width() * 0.27084f, group2.top + group2.height() * 0.50903f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.27084f, group2.top + group2.height() * 0.52216f, group2.left + group2.width() * 0.25939f, group2.top + group2.height() * 0.53281f, group2.left + group2.width() * 0.24526f, group2.top + group2.height() * 0.53281f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.23113f, group2.top + group2.height() * 0.53281f, group2.left + group2.width() * 0.21968f, group2.top + group2.height() * 0.52216f, group2.left + group2.width() * 0.21968f, group2.top + group2.height() * 0.50903f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.21968f, group2.top + group2.height() * 0.49591f, group2.left + group2.width() * 0.23113f, group2.top + group2.height() * 0.48526f, group2.left + group2.width() * 0.24526f, group2.top + group2.height() * 0.48526f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.25939f, group2.top + group2.height() * 0.48526f, group2.left + group2.width() * 0.27084f, group2.top + group2.height() * 0.49591f, group2.left + group2.width() * 0.27084f, group2.top + group2.height() * 0.50903f);
            bezierPath.close();
            bezierPath.moveTo(group2.left + group2.width() * 0.82239f, group2.top + group2.height() * 0.60005f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.85693f, group2.top + group2.height() * 0.60447f, group2.left + group2.width() * 0.87883f, group2.top + group2.height() * 0.62869f, group2.left + group2.width() * 0.88563f, group2.top + group2.height() * 0.63733f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.90167f, group2.top + group2.height() * 0.63138f, group2.left + group2.width() * 0.91563f, group2.top + group2.height() * 0.6278f, group2.left + group2.width() * 0.92626f, group2.top + group2.height() * 0.62762f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.97407f, group2.top + group2.height() * 0.62682f, group2.left + group2.width() * 0.99059f, group2.top + group2.height() * 0.64716f, group2.left + group2.width() * 0.99616f, group2.top + group2.height() * 0.65936f);
            bezierPath.cubicTo(group2.left + group2.width() * 1.00279f, group2.top + group2.height() * 0.67387f, group2.left + group2.width() * 1.00065f, group2.top + group2.height() * 0.69143f, group2.left + group2.width() * 0.99118f, group2.top + group2.height() * 0.70023f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.98647f, group2.top + group2.height() * 0.7046f, group2.left + group2.width() * 0.97196f, group2.top + group2.height() * 0.71542f, group2.left + group2.width() * 0.93957f, group2.top + group2.height() * 0.73947f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.92289f, group2.top + group2.height() * 0.75187f, group2.left + group2.width() * 0.90266f, group2.top + group2.height() * 0.7669f, group2.left + group2.width() * 0.87971f, group2.top + group2.height() * 0.7841f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.83387f, group2.top + group2.height() * 0.81848f, group2.left + group2.width() * 0.79487f, group2.top + group2.height() * 0.85f, group2.left + group2.width() * 0.76047f, group2.top + group2.height() * 0.87782f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.68563f, group2.top + group2.height() * 0.93828f, group2.left + group2.width() * 0.63156f, group2.top + group2.height() * 0.98197f, group2.left + group2.width() * 0.57684f, group2.top + group2.height() * 0.99769f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.57657f, group2.top + group2.height() * 0.99777f, group2.left + group2.width() * 0.57629f, group2.top + group2.height() * 0.99786f, group2.left + group2.width() * 0.576f, group2.top + group2.height() * 0.99791f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.57452f, group2.top + group2.height() * 0.99827f, group2.left + group2.width() * 0.5665f, group2.top + group2.height(), group2.left + group2.width() * 0.55274f, group2.top + group2.height());
            bezierPath.cubicTo(group2.left + group2.width() * 0.54075f, group2.top + group2.height(), group2.left + group2.width() * 0.52441f, group2.top + group2.height() * 0.99868f, group2.left + group2.width() * 0.50422f, group2.top + group2.height() * 0.99401f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.49613f, group2.top + group2.height() * 0.99211f, group2.left + group2.width() * 0.47495f, group2.top + group2.height() * 0.98554f, group2.left + group2.width() * 0.43508f, group2.top + group2.height() * 0.97312f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.35929f, group2.top + group2.height() * 0.94949f, group2.left + group2.width() * 0.18179f, group2.top + group2.height() * 0.89414f, group2.left + group2.width() * 0.15586f, group2.top + group2.height() * 0.89749f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.13921f, group2.top + group2.height() * 0.89964f, group2.left + group2.width() * 0.11876f, group2.top + group2.height() * 0.90563f, group2.left + group2.width() * 0.09508f, group2.top + group2.height() * 0.91533f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.0861f, group2.top + group2.height() * 0.91901f, group2.left + group2.width() * 0.07564f, group2.top + group2.height() * 0.91522f, group2.left + group2.width() * 0.07169f, group2.top + group2.height() * 0.90689f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.06774f, group2.top + group2.height() * 0.89856f, group2.left + group2.width() * 0.07181f, group2.top + group2.height() * 0.88881f, group2.left + group2.width() * 0.08078f, group2.top + group2.height() * 0.88515f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.10747f, group2.top + group2.height() * 0.87422f, group2.left + group2.width() * 0.13109f, group2.top + group2.height() * 0.8674f, group2.left + group2.width() * 0.15098f, group2.top + group2.height() * 0.86482f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.17958f, group2.top + group2.height() * 0.86113f, group2.left + group2.width() * 0.28095f, group2.top + group2.height() * 0.89026f, group2.left + group2.width() * 0.44636f, group2.top + group2.height() * 0.94185f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.47821f, group2.top + group2.height() * 0.95177f, group2.left + group2.width() * 0.50571f, group2.top + group2.height() * 0.96034f, group2.left + group2.width() * 0.51283f, group2.top + group2.height() * 0.96202f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.5449f, group2.top + group2.height() * 0.96947f, group2.left + group2.width() * 0.56425f, group2.top + group2.height() * 0.9665f, group2.left + group2.width() * 0.56705f, group2.top + group2.height() * 0.966f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.61442f, group2.top + group2.height() * 0.95213f, group2.left + group2.width() * 0.66597f, group2.top + group2.height() * 0.91046f, group2.left + group2.width() * 0.73718f, group2.top + group2.height() * 0.85292f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.77182f, group2.top + group2.height() * 0.82494f, group2.left + group2.width() * 0.81108f, group2.top + group2.height() * 0.7932f, group2.left + group2.width() * 0.85743f, group2.top + group2.height() * 0.75843f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.88042f, group2.top + group2.height() * 0.7412f, group2.left + group2.width() * 0.9007f, group2.top + group2.height() * 0.72614f, group2.left + group2.width() * 0.91742f, group2.top + group2.height() * 0.71372f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.93908f, group2.top + group2.height() * 0.69762f, group2.left + group2.width() * 0.95811f, group2.top + group2.height() * 0.68349f, group2.left + group2.width() * 0.9644f, group2.top + group2.height() * 0.67835f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.96466f, group2.top + group2.height() * 0.67662f, group2.left + group2.width() * 0.96461f, group2.top + group2.height() * 0.67327f, group2.left + group2.width() * 0.96221f, group2.top + group2.height() * 0.67011f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.9574f, group2.top + group2.height() * 0.66376f, group2.left + group2.width() * 0.9445f, group2.top + group2.height() * 0.66032f, group2.left + group2.width() * 0.9269f, group2.top + group2.height() * 0.6606f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.89034f, group2.top + group2.height() * 0.6612f, group2.left + group2.width() * 0.76701f, group2.top + group2.height() * 0.73285f, group2.left + group2.width() * 0.66408f, group2.top + group2.height() * 0.80328f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.63058f, group2.top + group2.height() * 0.8262f, group2.left + group2.width() * 0.61225f, group2.top + group2.height() * 0.84291f, group2.left + group2.width() * 0.61207f, group2.top + group2.height() * 0.84308f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.60509f, group2.top + group2.height() * 0.84945f, group2.left + group2.width() * 0.59385f, group2.top + group2.height() * 0.8494f, group2.left + group2.width() * 0.58698f, group2.top + group2.height() * 0.84291f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.58427f, group2.top + group2.height() * 0.84036f, group2.left + group2.width() * 0.58264f, group2.top + group2.height() * 0.8372f, group2.left + group2.width() * 0.58208f, group2.top + group2.height() * 0.83391f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.5614f, group2.top + group2.height() * 0.82114f, group2.left + group2.width() * 0.51788f, group2.top + group2.height() * 0.7996f, group2.left + group2.width() * 0.49202f, group2.top + group2.height() * 0.78957f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.49178f, group2.top + group2.height() * 0.78948f, group2.left + group2.width() * 0.49155f, group2.top + group2.height() * 0.78938f, group2.left + group2.width() * 0.49132f, group2.top + group2.height() * 0.78928f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.44394f, group2.top + group2.height() * 0.78836f, group2.left + group2.width() * 0.40145f, group2.top + group2.height() * 0.78678f, group2.left + group2.width() * 0.3852f, group2.top + group2.height() * 0.78614f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.37541f, group2.top + group2.height() * 0.78575f, group2.left + group2.width() * 0.36781f, group2.top + group2.height() * 0.77808f, group2.left + group2.width() * 0.36823f, group2.top + group2.height() * 0.76899f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.36865f, group2.top + group2.height() * 0.75989f, group2.left + group2.width() * 0.37692f, group2.top + group2.height() * 0.75283f, group2.left + group2.width() * 0.38671f, group2.top + group2.height() * 0.75321f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.48474f, group2.top + group2.height() * 0.75709f, group2.left + group2.width() * 0.63242f, group2.top + group2.height() * 0.75942f, group2.left + group2.width() * 0.65381f, group2.top + group2.height() * 0.75252f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.66632f, group2.top + group2.height() * 0.74851f, group2.left + group2.width() * 0.67378f, group2.top + group2.height() * 0.73626f, group2.left + group2.width() * 0.67378f, group2.top + group2.height() * 0.71974f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.67378f, group2.top + group2.height() * 0.70572f, group2.left + group2.width() * 0.65606f, group2.top + group2.height() * 0.69751f, group2.left + group2.width() * 0.6482f, group2.top + group2.height() * 0.69457f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.62512f, group2.top + group2.height() * 0.68748f, group2.left + group2.width() * 0.31704f, group2.top + group2.height() * 0.63817f, group2.left + group2.width() * 0.25569f, group2.top + group2.height() * 0.65156f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.22614f, group2.top + group2.height() * 0.65799f, group2.left + group2.width() * 0.14031f, group2.top + group2.height() * 0.69171f, group2.left + group2.width() * 0.07308f, group2.top + group2.height() * 0.72032f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.06416f, group2.top + group2.height() * 0.72408f, group2.left + group2.width() * 0.05364f, group2.top + group2.height() * 0.72045f, group2.left + group2.width() * 0.04956f, group2.top + group2.height() * 0.71218f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.04548f, group2.top + group2.height() * 0.70388f, group2.left + group2.width() * 0.0494f, group2.top + group2.height() * 0.6941f, group2.left + group2.width() * 0.05831f, group2.top + group2.height() * 0.69031f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.07293f, group2.top + group2.height() * 0.68409f, group2.left + group2.width() * 0.20244f, group2.top + group2.height() * 0.62927f, group2.left + group2.width() * 0.24758f, group2.top + group2.height() * 0.61943f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.32013f, group2.top + group2.height() * 0.60363f, group2.left + group2.width() * 0.63921f, group2.top + group2.height() * 0.65597f, group2.left + group2.width() * 0.66106f, group2.top + group2.height() * 0.66382f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.69179f, group2.top + group2.height() * 0.6753f, group2.left + group2.width() * 0.70927f, group2.top + group2.height() * 0.69564f, group2.left + group2.width() * 0.70927f, group2.top + group2.height() * 0.71974f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.70927f, group2.top + group2.height() * 0.72462f, group2.left + group2.width() * 0.70885f, group2.top + group2.height() * 0.72934f, group2.left + group2.width() * 0.70803f, group2.top + group2.height() * 0.73387f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.7508f, group2.top + group2.height() * 0.70661f, group2.left + group2.width() * 0.80578f, group2.top + group2.height() * 0.67347f, group2.left + group2.width() * 0.85234f, group2.top + group2.height() * 0.65152f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.84574f, group2.top + group2.height() * 0.64473f, group2.left + group2.width() * 0.83358f, group2.top + group2.height() * 0.63476f, group2.left + group2.width() * 0.81755f, group2.top + group2.height() * 0.6327f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.8004f, group2.top + group2.height() * 0.6305f, group2.left + group2.width() * 0.78566f, group2.top + group2.height() * 0.63894f, group2.left + group2.width() * 0.751f, group2.top + group2.height() * 0.65994f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.74365f, group2.top + group2.height() * 0.66439f, group2.left + group2.width() * 0.73532f, group2.top + group2.height() * 0.66945f, group2.left + group2.width() * 0.72618f, group2.top + group2.height() * 0.67481f);
            bezierPath.lineTo(group2.left + group2.width() * 0.71117f, group2.top + group2.height() * 0.6836f);
            bezierPath.lineTo(group2.left + group2.width() * 0.69224f, group2.top + group2.height() * 0.65571f);
            bezierPath.lineTo(group2.left + group2.width() * 0.70725f, group2.top + group2.height() * 0.64688f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.71616f, group2.top + group2.height() * 0.64166f, group2.left + group2.width() * 0.72438f, group2.top + group2.height() * 0.63669f, group2.left + group2.width() * 0.73163f, group2.top + group2.height() * 0.63232f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.76765f, group2.top + group2.height() * 0.6105f, group2.left + group2.width() * 0.79146f, group2.top + group2.height() * 0.5961f, group2.left + group2.width() * 0.82239f, group2.top + group2.height() * 0.60005f);
            bezierPath.close();
            bezierPath.moveTo(group2.left + group2.width() * 0.02837f, group2.top + group2.height() * 0.71074f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.03154f, group2.top + group2.height() * 0.71238f, group2.left + group2.width() * 0.0342f, group2.top + group2.height() * 0.71493f, group2.left + group2.width() * 0.03584f, group2.top + group2.height() * 0.71823f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.0366f, group2.top + group2.height() * 0.71974f, group2.left + group2.width() * 0.03709f, group2.top + group2.height() * 0.72131f, group2.left + group2.width() * 0.03732f, group2.top + group2.height() * 0.72287f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.03909f, group2.top + group2.height() * 0.73134f, group2.left + group2.width() * 0.03354f, group2.top + group2.height() * 0.73972f, group2.left + group2.width() * 0.02443f, group2.top + group2.height() * 0.74194f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.02206f, group2.top + group2.height() * 0.74252f, group2.left + group2.width() * 0.01991f, group2.top + group2.height() * 0.74277f, group2.left + group2.width() * 0.01796f, group2.top + group2.height() * 0.74277f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.00539f, group2.top + group2.height() * 0.74277f, group2.left + group2.width() * 0.0012f, group2.top + group2.height() * 0.73235f, group2.left + group2.width() * 0.001f, group2.top + group2.height() * 0.73186f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.00043f, group2.top + group2.height() * 0.73037f, group2.left + group2.width() * -0.0041f, group2.top + group2.height() * 0.71724f, group2.left + group2.width() * 0.01228f, group2.top + group2.height() * 0.7102f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.01763f, group2.top + group2.height() * 0.70789f, group2.left + group2.width() * 0.02358f, group2.top + group2.height() * 0.70827f, group2.left + group2.width() * 0.02837f, group2.top + group2.height() * 0.71074f);
            bezierPath.close();
            bezierPath.moveTo(group2.left + group2.width() * 0.62631f, group2.top + group2.height() * 0.78852f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.61072f, group2.top + group2.height() * 0.78937f, group2.left + group2.width() * 0.59207f, group2.top + group2.height() * 0.78979f, group2.left + group2.width() * 0.57209f, group2.top + group2.height() * 0.78993f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.58362f, group2.top + group2.height() * 0.79592f, group2.left + group2.width() * 0.59425f, group2.top + group2.height() * 0.80181f, group2.left + group2.width() * 0.6023f, group2.top + group2.height() * 0.80681f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.60848f, group2.top + group2.height() * 0.80185f, group2.left + group2.width() * 0.61651f, group2.top + group2.height() * 0.79564f, group2.left + group2.width() * 0.62631f, group2.top + group2.height() * 0.78852f);
            bezierPath.close();
            bezierPath.moveTo(group2.left + group2.width() * 0.06073f, group2.top + group2.height() * 0.90766f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.06506f, group2.top + group2.height() * 0.91354f, group2.left + group2.width() * 0.06474f, group2.top + group2.height() * 0.9211f, group2.left + group2.width() * 0.06053f, group2.top + group2.height() * 0.92657f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.05908f, group2.top + group2.height() * 0.92866f, group2.left + group2.width() * 0.05711f, group2.top + group2.height() * 0.9305f, group2.left + group2.width() * 0.05464f, group2.top + group2.height() * 0.93184f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.05039f, group2.top + group2.height() * 0.93421f, group2.left + group2.width() * 0.04663f, group2.top + group2.height() * 0.93506f, group2.left + group2.width() * 0.04338f, group2.top + group2.height() * 0.93506f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.0341f, group2.top + group2.height() * 0.93506f, group2.left + group2.width() * 0.02903f, group2.top + group2.height() * 0.92789f, group2.left + group2.width() * 0.02875f, group2.top + group2.height() * 0.92748f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.02719f, group2.top + group2.height() * 0.92522f, group2.left + group2.width() * 0.02024f, group2.top + group2.height() * 0.91343f, group2.left + group2.width() * 0.03608f, group2.top + group2.height() * 0.90337f);
            bezierPath.cubicTo(group2.left + group2.width() * 0.04416f, group2.top + group2.height() * 0.89823f, group2.left + group2.width() * 0.0552f, group2.top + group2.height() * 0.90016f, group2.left + group2.width() * 0.06073f, group2.top + group2.height() * 0.90766f);
            bezierPath.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.bianco);
            canvas.drawPath(bezierPath, paint);
        }
        
        // Group
        {
            RectF group = CacheForPromozioni.group;
            group.set(frame.left + 9f,
                frame.top + 2f,
                frame.right - 9f,
                frame.bottom - 2f);
            
            // Bezier 2
            if (highlited) {
                RectF bezier2Rect = CacheForPromozioni.bezier2Rect;
                bezier2Rect.set(group.left,
                    group.top,
                    group.left + (float) Math.floor(group.width() + 0.5f),
                    group.top + (float) Math.floor(group.height() + 0.5f));
                Path bezier2Path = CacheForPromozioni.bezier2Path;
                bezier2Path.reset();
                bezier2Path.moveTo(group.left + group.width() * 0.49264f, group.top + group.height() * 0.03085f);
                bezier2Path.cubicTo(group.left + group.width() * 0.49264f, group.top + group.height() * 0.04398f, group.left + group.width() * 0.48118f, group.top + group.height() * 0.05462f, group.left + group.width() * 0.46706f, group.top + group.height() * 0.05462f);
                bezier2Path.cubicTo(group.left + group.width() * 0.45293f, group.top + group.height() * 0.05462f, group.left + group.width() * 0.44147f, group.top + group.height() * 0.04398f, group.left + group.width() * 0.44147f, group.top + group.height() * 0.03085f);
                bezier2Path.cubicTo(group.left + group.width() * 0.44147f, group.top + group.height() * 0.01772f, group.left + group.width() * 0.45293f, group.top + group.height() * 0.00708f, group.left + group.width() * 0.46706f, group.top + group.height() * 0.00708f);
                bezier2Path.cubicTo(group.left + group.width() * 0.48118f, group.top + group.height() * 0.00708f, group.left + group.width() * 0.49264f, group.top + group.height() * 0.01772f, group.left + group.width() * 0.49264f, group.top + group.height() * 0.03085f);
                bezier2Path.close();
                bezier2Path.moveTo(group.left + group.width() * 0.67399f, group.top + group.height() * 0.03861f);
                bezier2Path.lineTo(group.left + group.width() * 0.649f, group.top + group.height() * 0.03861f);
                bezier2Path.cubicTo(group.left + group.width() * 0.649f, group.top + group.height() * 0.04491f, group.left + group.width() * 0.649f, group.top + group.height() * 0.05359f, group.left + group.width() * 0.649f, group.top + group.height() * 0.05895f);
                bezier2Path.cubicTo(group.left + group.width() * 0.649f, group.top + group.height() * 0.05895f, group.left + group.width() * 0.66533f, group.top + group.height() * 0.05895f, group.left + group.width() * 0.67399f, group.top + group.height() * 0.05895f);
                bezier2Path.cubicTo(group.left + group.width() * 0.67399f, group.top + group.height() * 0.05566f, group.left + group.width() * 0.67399f, group.top + group.height() * 0.05112f, group.left + group.width() * 0.67399f, group.top + group.height() * 0.04664f);
                bezier2Path.cubicTo(group.left + group.width() * 0.67399f, group.top + group.height() * 0.04381f, group.left + group.width() * 0.67399f, group.top + group.height() * 0.04104f, group.left + group.width() * 0.67399f, group.top + group.height() * 0.03861f);
                bezier2Path.close();
                bezier2Path.moveTo(group.left + group.width() * 0.67924f, group.top + group.height() * 0f);
                bezier2Path.cubicTo(group.left + group.width() * 0.67924f, group.top + group.height() * 0f, group.left + group.width() * 0.67924f, group.top + group.height() * 0.01957f, group.left + group.width() * 0.67924f, group.top + group.height() * 0.03085f);
                bezier2Path.lineTo(group.left + group.width() * 0.71554f, group.top + group.height() * 0.03085f);
                bezier2Path.lineTo(group.left + group.width() * 0.71554f, group.top + group.height() * 0.06383f);
                bezier2Path.lineTo(group.left + group.width() * 0.67924f, group.top + group.height() * 0.06383f);
                bezier2Path.cubicTo(group.left + group.width() * 0.67924f, group.top + group.height() * 0.07421f, group.left + group.width() * 0.67924f, group.top + group.height() * 0.09756f, group.left + group.width() * 0.67924f, group.top + group.height() * 0.09756f);
                bezier2Path.lineTo(group.left + group.width() * 0.64375f, group.top + group.height() * 0.09756f);
                bezier2Path.cubicTo(group.left + group.width() * 0.64375f, group.top + group.height() * 0.09756f, group.left + group.width() * 0.64375f, group.top + group.height() * 0.08264f, group.left + group.width() * 0.64375f, group.top + group.height() * 0.07135f);
                bezier2Path.cubicTo(group.left + group.width() * 0.64375f, group.top + group.height() * 0.06851f, group.left + group.width() * 0.64375f, group.top + group.height() * 0.06591f, group.left + group.width() * 0.64375f, group.top + group.height() * 0.06383f);
                bezier2Path.lineTo(group.left + group.width() * 0.60745f, group.top + group.height() * 0.06383f);
                bezier2Path.cubicTo(group.left + group.width() * 0.60745f, group.top + group.height() * 0.06383f, group.left + group.width() * 0.60745f, group.top + group.height() * 0.05664f, group.left + group.width() * 0.60745f, group.top + group.height() * 0.04897f);
                bezier2Path.cubicTo(group.left + group.width() * 0.60745f, group.top + group.height() * 0.04336f, group.left + group.width() * 0.60745f, group.top + group.height() * 0.0375f, group.left + group.width() * 0.60745f, group.top + group.height() * 0.03401f);
                bezier2Path.cubicTo(group.left + group.width() * 0.60745f, group.top + group.height() * 0.03206f, group.left + group.width() * 0.60745f, group.top + group.height() * 0.03085f, group.left + group.width() * 0.60745f, group.top + group.height() * 0.03085f);
                bezier2Path.lineTo(group.left + group.width() * 0.64375f, group.top + group.height() * 0.03085f);
                bezier2Path.cubicTo(group.left + group.width() * 0.64375f, group.top + group.height() * 0.02681f, group.left + group.width() * 0.64375f, group.top + group.height() * 0.02171f, group.left + group.width() * 0.64375f, group.top + group.height() * 0.01683f);
                bezier2Path.cubicTo(group.left + group.width() * 0.64375f, group.top + group.height() * 0.00807f, group.left + group.width() * 0.64375f, group.top, group.left + group.width() * 0.64375f, group.top);
                bezier2Path.lineTo(group.left + group.width() * 0.67924f, group.top);
                bezier2Path.lineTo(group.left + group.width() * 0.67924f, group.top + group.height() * 0f);
                bezier2Path.close();
                bezier2Path.moveTo(group.left + group.width() * 0.29886f, group.top + group.height() * 0.14346f);
                bezier2Path.lineTo(group.left + group.width() * 0.27402f, group.top + group.height() * 0.14346f);
                bezier2Path.cubicTo(group.left + group.width() * 0.27402f, group.top + group.height() * 0.14976f, group.left + group.width() * 0.27402f, group.top + group.height() * 0.15853f, group.left + group.width() * 0.27402f, group.top + group.height() * 0.16393f);
                bezier2Path.lineTo(group.left + group.width() * 0.29886f, group.top + group.height() * 0.16393f);
                bezier2Path.cubicTo(group.left + group.width() * 0.29886f, group.top + group.height() * 0.15853f, group.left + group.width() * 0.29886f, group.top + group.height() * 0.14976f, group.left + group.width() * 0.29886f, group.top + group.height() * 0.14346f);
                bezier2Path.close();
                bezier2Path.moveTo(group.left + group.width() * 0.5966f, group.top + group.height() * 0.13685f);
                bezier2Path.lineTo(group.left + group.width() * 0.59316f, group.top + group.height() * 0.16702f);
                bezier2Path.lineTo(group.left + group.width() * 0.61974f, group.top + group.height() * 0.14803f);
                bezier2Path.lineTo(group.left + group.width() * 0.5966f, group.top + group.height() * 0.13685f);
                bezier2Path.close();
                bezier2Path.moveTo(group.left + group.width() * 0.47773f, group.top + group.height() * 0.13685f);
                bezier2Path.lineTo(group.left + group.width() * 0.4546f, group.top + group.height() * 0.14803f);
                bezier2Path.lineTo(group.left + group.width() * 0.48117f, group.top + group.height() * 0.16702f);
                bezier2Path.lineTo(group.left + group.width() * 0.47773f, group.top + group.height() * 0.13685f);
                bezier2Path.close();
                bezier2Path.moveTo(group.left + group.width() * 0.30411f, group.top + group.height() * 0.10485f);
                bezier2Path.cubicTo(group.left + group.width() * 0.30411f, group.top + group.height() * 0.10484f, group.left + group.width() * 0.30411f, group.top + group.height() * 0.12458f, group.left + group.width() * 0.30411f, group.top + group.height() * 0.13583f);
                bezier2Path.lineTo(group.left + group.width() * 0.34041f, group.top + group.height() * 0.13583f);
                bezier2Path.lineTo(group.left + group.width() * 0.34041f, group.top + group.height() * 0.16881f);
                bezier2Path.lineTo(group.left + group.width() * 0.30411f, group.top + group.height() * 0.16881f);
                bezier2Path.cubicTo(group.left + group.width() * 0.30411f, group.top + group.height() * 0.17919f, group.left + group.width() * 0.30411f, group.top + group.height() * 0.20254f, group.left + group.width() * 0.30411f, group.top + group.height() * 0.20254f);
                bezier2Path.lineTo(group.left + group.width() * 0.26862f, group.top + group.height() * 0.20254f);
                bezier2Path.cubicTo(group.left + group.width() * 0.26862f, group.top + group.height() * 0.20254f, group.left + group.width() * 0.26862f, group.top + group.height() * 0.17919f, group.left + group.width() * 0.26862f, group.top + group.height() * 0.16881f);
                bezier2Path.lineTo(group.left + group.width() * 0.23247f, group.top + group.height() * 0.16881f);
                bezier2Path.lineTo(group.left + group.width() * 0.23247f, group.top + group.height() * 0.13583f);
                bezier2Path.lineTo(group.left + group.width() * 0.26862f, group.top + group.height() * 0.13583f);
                bezier2Path.cubicTo(group.left + group.width() * 0.26862f, group.top + group.height() * 0.12458f, group.left + group.width() * 0.26862f, group.top + group.height() * 0.10484f, group.left + group.width() * 0.26862f, group.top + group.height() * 0.10484f);
                bezier2Path.lineTo(group.left + group.width() * 0.30411f, group.top + group.height() * 0.10484f);
                bezier2Path.lineTo(group.left + group.width() * 0.30411f, group.top + group.height() * 0.10485f);
                bezier2Path.close();
                bezier2Path.moveTo(group.left + group.width() * 0.56681f, group.top + group.height() * 0.08524f);
                bezier2Path.cubicTo(group.left + group.width() * 0.56681f, group.top + group.height() * 0.08524f, group.left + group.width() * 0.56766f, group.top + group.height() * 0.08565f, group.left + group.width() * 0.56921f, group.top + group.height() * 0.0864f);
                bezier2Path.cubicTo(group.left + group.width() * 0.586f, group.top + group.height() * 0.09453f, group.left + group.width() * 0.68548f, group.top + group.height() * 0.14267f, group.left + group.width() * 0.68548f, group.top + group.height() * 0.14267f);
                bezier2Path.lineTo(group.left + group.width() * 0.58799f, group.top + group.height() * 0.21231f);
                bezier2Path.lineTo(group.left + group.width() * 0.58776f, group.top + group.height() * 0.21437f);
                bezier2Path.lineTo(group.left + group.width() * 0.58543f, group.top + group.height() * 0.21415f);
                bezier2Path.lineTo(group.left + group.width() * 0.57625f, group.top + group.height() * 0.22072f);
                bezier2Path.lineTo(group.left + group.width() * 0.56954f, group.top + group.height() * 0.21259f);
                bezier2Path.lineTo(group.left + group.width() * 0.55247f, group.top + group.height() * 0.21091f);
                bezier2Path.cubicTo(group.left + group.width() * 0.55247f, group.top + group.height() * 0.21091f, group.left + group.width() * 0.56466f, group.top + group.height() * 0.10404f, group.left + group.width() * 0.56656f, group.top + group.height() * 0.0874f);
                bezier2Path.cubicTo(group.left + group.width() * 0.56672f, group.top + group.height() * 0.086f, group.left + group.width() * 0.56681f, group.top + group.height() * 0.08524f, group.left + group.width() * 0.56681f, group.top + group.height() * 0.08524f);
                bezier2Path.close();
                bezier2Path.moveTo(group.left + group.width() * 0.50753f, group.top + group.height() * 0.08524f);
                bezier2Path.cubicTo(group.left + group.width() * 0.50753f, group.top + group.height() * 0.08524f, group.left + group.width() * 0.50863f, group.top + group.height() * 0.09486f, group.left + group.width() * 0.51021f, group.top + group.height() * 0.10878f);
                bezier2Path.cubicTo(group.left + group.width() * 0.51437f, group.top + group.height() * 0.14516f, group.left + group.width() * 0.52187f, group.top + group.height() * 0.21091f, group.left + group.width() * 0.52187f, group.top + group.height() * 0.21091f);
                bezier2Path.lineTo(group.left + group.width() * 0.5048f, group.top + group.height() * 0.21259f);
                bezier2Path.lineTo(group.left + group.width() * 0.49809f, group.top + group.height() * 0.22072f);
                bezier2Path.lineTo(group.left + group.width() * 0.48891f, group.top + group.height() * 0.21415f);
                bezier2Path.lineTo(group.left + group.width() * 0.48658f, group.top + group.height() * 0.21437f);
                bezier2Path.lineTo(group.left + group.width() * 0.48634f, group.top + group.height() * 0.21231f);
                bezier2Path.cubicTo(group.left + group.width() * 0.48634f, group.top + group.height() * 0.21231f, group.left + group.width() * 0.4396f, group.top + group.height() * 0.17892f, group.left + group.width() * 0.41085f, group.top + group.height() * 0.15838f);
                bezier2Path.cubicTo(group.left + group.width() * 0.4068f, group.top + group.height() * 0.15549f, group.left + group.width() * 0.40312f, group.top + group.height() * 0.15286f, group.left + group.width() * 0.39997f, group.top + group.height() * 0.15061f);
                bezier2Path.cubicTo(group.left + group.width() * 0.39317f, group.top + group.height() * 0.14575f, group.left + group.width() * 0.38886f, group.top + group.height() * 0.14267f, group.left + group.width() * 0.38886f, group.top + group.height() * 0.14267f);
                bezier2Path.lineTo(group.left + group.width() * 0.50753f, group.top + group.height() * 0.08524f);
                bezier2Path.lineTo(group.left + group.width() * 0.50753f, group.top + group.height() * 0.08524f);
                bezier2Path.close();
                bezier2Path.moveTo(group.left + group.width() * 0.13658f, group.top + group.height() * 0.23861f);
                bezier2Path.cubicTo(group.left + group.width() * 0.13658f, group.top + group.height() * 0.25174f, group.left + group.width() * 0.12513f, group.top + group.height() * 0.26238f, group.left + group.width() * 0.111f, group.top + group.height() * 0.26238f);
                bezier2Path.cubicTo(group.left + group.width() * 0.09687f, group.top + group.height() * 0.26238f, group.left + group.width() * 0.08542f, group.top + group.height() * 0.25174f, group.left + group.width() * 0.08542f, group.top + group.height() * 0.23861f);
                bezier2Path.cubicTo(group.left + group.width() * 0.08542f, group.top + group.height() * 0.22548f, group.left + group.width() * 0.09687f, group.top + group.height() * 0.21484f, group.left + group.width() * 0.111f, group.top + group.height() * 0.21484f);
                bezier2Path.cubicTo(group.left + group.width() * 0.12513f, group.top + group.height() * 0.21484f, group.left + group.width() * 0.13658f, group.top + group.height() * 0.22548f, group.left + group.width() * 0.13658f, group.top + group.height() * 0.23861f);
                bezier2Path.close();
                bezier2Path.moveTo(group.left + group.width() * 0.59622f, group.top + group.height() * 0.22702f);
                bezier2Path.cubicTo(group.left + group.width() * 0.59622f, group.top + group.height() * 0.22701f, group.left + group.width() * 0.59622f, group.top + group.height() * 0.23918f, group.left + group.width() * 0.59622f, group.top + group.height() * 0.25885f);
                bezier2Path.cubicTo(group.left + group.width() * 0.59622f, group.top + group.height() * 0.27943f, group.left + group.width() * 0.59622f, group.top + group.height() * 0.30821f, group.left + group.width() * 0.59622f, group.top + group.height() * 0.33988f);
                bezier2Path.lineTo(group.left + group.width() * 0.72003f, group.top + group.height() * 0.33988f);
                bezier2Path.cubicTo(group.left + group.width() * 0.72003f, group.top + group.height() * 0.30962f, group.left + group.width() * 0.72003f, group.top + group.height() * 0.26953f, group.left + group.width() * 0.72003f, group.top + group.height() * 0.26953f);
                bezier2Path.lineTo(group.left + group.width() * 0.61629f, group.top + group.height() * 0.26953f);
                bezier2Path.cubicTo(group.left + group.width() * 0.61629f, group.top + group.height() * 0.26953f, group.left + group.width() * 0.61629f, group.top + group.height() * 0.26566f, group.left + group.width() * 0.61629f, group.top + group.height() * 0.26058f);
                bezier2Path.cubicTo(group.left + group.width() * 0.61629f, group.top + group.height() * 0.25082f, group.left + group.width() * 0.61629f, group.top + group.height() * 0.23655f, group.left + group.width() * 0.61629f, group.top + group.height() * 0.23655f);
                bezier2Path.lineTo(group.left + group.width() * 0.75552f, group.top + group.height() * 0.23655f);
                bezier2Path.lineTo(group.left + group.width() * 0.75552f, group.top + group.height() * 0.37297f);
                bezier2Path.lineTo(group.left + group.width() * 0.72003f, group.top + group.height() * 0.37297f);
                bezier2Path.lineTo(group.left + group.width() * 0.59622f, group.top + group.height() * 0.37286f);
                bezier2Path.cubicTo(group.left + group.width() * 0.59622f, group.top + group.height() * 0.42995f, group.left + group.width() * 0.59622f, group.top + group.height() * 0.49024f, group.left + group.width() * 0.59622f, group.top + group.height() * 0.52616f);
                bezier2Path.lineTo(group.left + group.width() * 0.72003f, group.top + group.height() * 0.52616f);
                bezier2Path.lineTo(group.left + group.width() * 0.72003f, group.top + group.height() * 0.40196f);
                bezier2Path.lineTo(group.left + group.width() * 0.75552f, group.top + group.height() * 0.40196f);
                bezier2Path.lineTo(group.left + group.width() * 0.75552f, group.top + group.height() * 0.55913f);
                bezier2Path.lineTo(group.left + group.width() * 0.30673f, group.top + group.height() * 0.55913f);
                bezier2Path.lineTo(group.left + group.width() * 0.30673f, group.top + group.height() * 0.40675f);
                bezier2Path.lineTo(group.left + group.width() * 0.34222f, group.top + group.height() * 0.40675f);
                bezier2Path.lineTo(group.left + group.width() * 0.34222f, group.top + group.height() * 0.52616f);
                bezier2Path.lineTo(group.left + group.width() * 0.47587f, group.top + group.height() * 0.52616f);
                bezier2Path.cubicTo(group.left + group.width() * 0.47587f, group.top + group.height() * 0.49024f, group.left + group.width() * 0.47587f, group.top + group.height() * 0.42995f, group.left + group.width() * 0.47587f, group.top + group.height() * 0.37286f);
                bezier2Path.lineTo(group.left + group.width() * 0.31032f, group.top + group.height() * 0.37286f);
                bezier2Path.cubicTo(group.left + group.width() * 0.31032f, group.top + group.height() * 0.37286f, group.left + group.width() * 0.31032f, group.top + group.height() * 0.37201f, group.left + group.width() * 0.31032f, group.top + group.height() * 0.37058f);
                bezier2Path.lineTo(group.left + group.width() * 0.30673f, group.top + group.height() * 0.37058f);
                bezier2Path.lineTo(group.left + group.width() * 0.30673f, group.top + group.height() * 0.23655f);
                bezier2Path.lineTo(group.left + group.width() * 0.45023f, group.top + group.height() * 0.23655f);
                bezier2Path.lineTo(group.left + group.width() * 0.45023f, group.top + group.height() * 0.26953f);
                bezier2Path.lineTo(group.left + group.width() * 0.34222f, group.top + group.height() * 0.26953f);
                bezier2Path.cubicTo(group.left + group.width() * 0.34222f, group.top + group.height() * 0.26953f, group.left + group.width() * 0.34222f, group.top + group.height() * 0.31015f, group.left + group.width() * 0.34222f, group.top + group.height() * 0.33988f);
                bezier2Path.lineTo(group.left + group.width() * 0.47587f, group.top + group.height() * 0.33988f);
                bezier2Path.cubicTo(group.left + group.width() * 0.47587f, group.top + group.height() * 0.30245f, group.left + group.width() * 0.47587f, group.top + group.height() * 0.26905f, group.left + group.width() * 0.47587f, group.top + group.height() * 0.24847f);
                bezier2Path.cubicTo(group.left + group.width() * 0.47587f, group.top + group.height() * 0.23499f, group.left + group.width() * 0.47587f, group.top + group.height() * 0.22701f, group.left + group.width() * 0.47587f, group.top + group.height() * 0.22701f);
                bezier2Path.lineTo(group.left + group.width() * 0.59622f, group.top + group.height() * 0.22702f);
                bezier2Path.close();
                bezier2Path.moveTo(group.left + group.width() * 0.08727f, group.top + group.height() * 0.40577f);
                bezier2Path.lineTo(group.left + group.width() * 0.06228f, group.top + group.height() * 0.40577f);
                bezier2Path.cubicTo(group.left + group.width() * 0.06228f, group.top + group.height() * 0.41208f, group.left + group.width() * 0.06228f, group.top + group.height() * 0.42085f, group.left + group.width() * 0.06228f, group.top + group.height() * 0.42625f);
                bezier2Path.cubicTo(group.left + group.width() * 0.06228f, group.top + group.height() * 0.42625f, group.left + group.width() * 0.07861f, group.top + group.height() * 0.42625f, group.left + group.width() * 0.08727f, group.top + group.height() * 0.42625f);
                bezier2Path.cubicTo(group.left + group.width() * 0.08727f, group.top + group.height() * 0.42085f, group.left + group.width() * 0.08727f, group.top + group.height() * 0.41208f, group.left + group.width() * 0.08727f, group.top + group.height() * 0.40577f);
                bezier2Path.close();
                bezier2Path.moveTo(group.left + group.width() * 0.09252f, group.top + group.height() * 0.36716f);
                bezier2Path.cubicTo(group.left + group.width() * 0.09252f, group.top + group.height() * 0.36716f, group.left + group.width() * 0.09252f, group.top + group.height() * 0.38689f, group.left + group.width() * 0.09252f, group.top + group.height() * 0.39814f);
                bezier2Path.lineTo(group.left + group.width() * 0.12882f, group.top + group.height() * 0.39814f);
                bezier2Path.lineTo(group.left + group.width() * 0.12882f, group.top + group.height() * 0.43112f);
                bezier2Path.lineTo(group.left + group.width() * 0.09252f, group.top + group.height() * 0.43112f);
                bezier2Path.cubicTo(group.left + group.width() * 0.09252f, group.top + group.height() * 0.44151f, group.left + group.width() * 0.09252f, group.top + group.height() * 0.46486f, group.left + group.width() * 0.09252f, group.top + group.height() * 0.46486f);
                bezier2Path.lineTo(group.left + group.width() * 0.05703f, group.top + group.height() * 0.46486f);
                bezier2Path.cubicTo(group.left + group.width() * 0.05703f, group.top + group.height() * 0.46486f, group.left + group.width() * 0.05703f, group.top + group.height() * 0.44151f, group.left + group.width() * 0.05703f, group.top + group.height() * 0.43112f);
                bezier2Path.lineTo(group.left + group.width() * 0.02073f, group.top + group.height() * 0.43112f);
                bezier2Path.lineTo(group.left + group.width() * 0.02073f, group.top + group.height() * 0.39814f);
                bezier2Path.lineTo(group.left + group.width() * 0.05703f, group.top + group.height() * 0.39814f);
                bezier2Path.cubicTo(group.left + group.width() * 0.05703f, group.top + group.height() * 0.38689f, group.left + group.width() * 0.05703f, group.top + group.height() * 0.36716f, group.left + group.width() * 0.05703f, group.top + group.height() * 0.36716f);
                bezier2Path.lineTo(group.left + group.width() * 0.09252f, group.top + group.height() * 0.36716f);
                bezier2Path.lineTo(group.left + group.width() * 0.09252f, group.top + group.height() * 0.36716f);
                bezier2Path.close();
                bezier2Path.moveTo(group.left + group.width() * 0.56073f, group.top + group.height() * 0.25999f);
                bezier2Path.lineTo(group.left + group.width() * 0.51136f, group.top + group.height() * 0.25999f);
                bezier2Path.lineTo(group.left + group.width() * 0.51136f, group.top + group.height() * 0.52574f);
                bezier2Path.lineTo(group.left + group.width() * 0.56073f, group.top + group.height() * 0.52574f);
                bezier2Path.lineTo(group.left + group.width() * 0.56073f, group.top + group.height() * 0.25999f);
                bezier2Path.close();
                bezier2Path.moveTo(group.left + group.width() * 0.27084f, group.top + group.height() * 0.50903f);
                bezier2Path.cubicTo(group.left + group.width() * 0.27084f, group.top + group.height() * 0.52216f, group.left + group.width() * 0.25939f, group.top + group.height() * 0.53281f, group.left + group.width() * 0.24526f, group.top + group.height() * 0.53281f);
                bezier2Path.cubicTo(group.left + group.width() * 0.23113f, group.top + group.height() * 0.53281f, group.left + group.width() * 0.21968f, group.top + group.height() * 0.52216f, group.left + group.width() * 0.21968f, group.top + group.height() * 0.50903f);
                bezier2Path.cubicTo(group.left + group.width() * 0.21968f, group.top + group.height() * 0.49591f, group.left + group.width() * 0.23113f, group.top + group.height() * 0.48526f, group.left + group.width() * 0.24526f, group.top + group.height() * 0.48526f);
                bezier2Path.cubicTo(group.left + group.width() * 0.25939f, group.top + group.height() * 0.48526f, group.left + group.width() * 0.27084f, group.top + group.height() * 0.49591f, group.left + group.width() * 0.27084f, group.top + group.height() * 0.50903f);
                bezier2Path.close();
                bezier2Path.moveTo(group.left + group.width() * 0.82239f, group.top + group.height() * 0.60005f);
                bezier2Path.cubicTo(group.left + group.width() * 0.85693f, group.top + group.height() * 0.60447f, group.left + group.width() * 0.87883f, group.top + group.height() * 0.62869f, group.left + group.width() * 0.88563f, group.top + group.height() * 0.63733f);
                bezier2Path.cubicTo(group.left + group.width() * 0.90167f, group.top + group.height() * 0.63138f, group.left + group.width() * 0.91563f, group.top + group.height() * 0.6278f, group.left + group.width() * 0.92626f, group.top + group.height() * 0.62762f);
                bezier2Path.cubicTo(group.left + group.width() * 0.97407f, group.top + group.height() * 0.62682f, group.left + group.width() * 0.99059f, group.top + group.height() * 0.64716f, group.left + group.width() * 0.99616f, group.top + group.height() * 0.65936f);
                bezier2Path.cubicTo(group.left + group.width() * 1.00279f, group.top + group.height() * 0.67387f, group.left + group.width() * 1.00065f, group.top + group.height() * 0.69143f, group.left + group.width() * 0.99118f, group.top + group.height() * 0.70023f);
                bezier2Path.cubicTo(group.left + group.width() * 0.98647f, group.top + group.height() * 0.7046f, group.left + group.width() * 0.97196f, group.top + group.height() * 0.71542f, group.left + group.width() * 0.93957f, group.top + group.height() * 0.73947f);
                bezier2Path.cubicTo(group.left + group.width() * 0.92289f, group.top + group.height() * 0.75187f, group.left + group.width() * 0.90266f, group.top + group.height() * 0.7669f, group.left + group.width() * 0.87971f, group.top + group.height() * 0.7841f);
                bezier2Path.cubicTo(group.left + group.width() * 0.83387f, group.top + group.height() * 0.81848f, group.left + group.width() * 0.79487f, group.top + group.height() * 0.85f, group.left + group.width() * 0.76047f, group.top + group.height() * 0.87782f);
                bezier2Path.cubicTo(group.left + group.width() * 0.68563f, group.top + group.height() * 0.93828f, group.left + group.width() * 0.63156f, group.top + group.height() * 0.98197f, group.left + group.width() * 0.57684f, group.top + group.height() * 0.99769f);
                bezier2Path.cubicTo(group.left + group.width() * 0.57657f, group.top + group.height() * 0.99777f, group.left + group.width() * 0.57629f, group.top + group.height() * 0.99786f, group.left + group.width() * 0.576f, group.top + group.height() * 0.99791f);
                bezier2Path.cubicTo(group.left + group.width() * 0.57452f, group.top + group.height() * 0.99827f, group.left + group.width() * 0.5665f, group.top + group.height(), group.left + group.width() * 0.55274f, group.top + group.height());
                bezier2Path.cubicTo(group.left + group.width() * 0.54075f, group.top + group.height(), group.left + group.width() * 0.52441f, group.top + group.height() * 0.99868f, group.left + group.width() * 0.50422f, group.top + group.height() * 0.99401f);
                bezier2Path.cubicTo(group.left + group.width() * 0.49613f, group.top + group.height() * 0.99211f, group.left + group.width() * 0.47495f, group.top + group.height() * 0.98554f, group.left + group.width() * 0.43508f, group.top + group.height() * 0.97312f);
                bezier2Path.cubicTo(group.left + group.width() * 0.35929f, group.top + group.height() * 0.94949f, group.left + group.width() * 0.18179f, group.top + group.height() * 0.89414f, group.left + group.width() * 0.15586f, group.top + group.height() * 0.89749f);
                bezier2Path.cubicTo(group.left + group.width() * 0.13921f, group.top + group.height() * 0.89964f, group.left + group.width() * 0.11876f, group.top + group.height() * 0.90563f, group.left + group.width() * 0.09508f, group.top + group.height() * 0.91533f);
                bezier2Path.cubicTo(group.left + group.width() * 0.0861f, group.top + group.height() * 0.91901f, group.left + group.width() * 0.07564f, group.top + group.height() * 0.91522f, group.left + group.width() * 0.07169f, group.top + group.height() * 0.90689f);
                bezier2Path.cubicTo(group.left + group.width() * 0.06774f, group.top + group.height() * 0.89856f, group.left + group.width() * 0.07181f, group.top + group.height() * 0.88881f, group.left + group.width() * 0.08078f, group.top + group.height() * 0.88515f);
                bezier2Path.cubicTo(group.left + group.width() * 0.10747f, group.top + group.height() * 0.87422f, group.left + group.width() * 0.13109f, group.top + group.height() * 0.8674f, group.left + group.width() * 0.15098f, group.top + group.height() * 0.86482f);
                bezier2Path.cubicTo(group.left + group.width() * 0.17958f, group.top + group.height() * 0.86113f, group.left + group.width() * 0.28095f, group.top + group.height() * 0.89026f, group.left + group.width() * 0.44636f, group.top + group.height() * 0.94185f);
                bezier2Path.cubicTo(group.left + group.width() * 0.47821f, group.top + group.height() * 0.95177f, group.left + group.width() * 0.50571f, group.top + group.height() * 0.96034f, group.left + group.width() * 0.51283f, group.top + group.height() * 0.96202f);
                bezier2Path.cubicTo(group.left + group.width() * 0.5449f, group.top + group.height() * 0.96947f, group.left + group.width() * 0.56425f, group.top + group.height() * 0.9665f, group.left + group.width() * 0.56705f, group.top + group.height() * 0.966f);
                bezier2Path.cubicTo(group.left + group.width() * 0.61442f, group.top + group.height() * 0.95213f, group.left + group.width() * 0.66597f, group.top + group.height() * 0.91046f, group.left + group.width() * 0.73718f, group.top + group.height() * 0.85292f);
                bezier2Path.cubicTo(group.left + group.width() * 0.77182f, group.top + group.height() * 0.82494f, group.left + group.width() * 0.81108f, group.top + group.height() * 0.7932f, group.left + group.width() * 0.85743f, group.top + group.height() * 0.75843f);
                bezier2Path.cubicTo(group.left + group.width() * 0.88042f, group.top + group.height() * 0.7412f, group.left + group.width() * 0.9007f, group.top + group.height() * 0.72614f, group.left + group.width() * 0.91742f, group.top + group.height() * 0.71372f);
                bezier2Path.cubicTo(group.left + group.width() * 0.93908f, group.top + group.height() * 0.69762f, group.left + group.width() * 0.95811f, group.top + group.height() * 0.68349f, group.left + group.width() * 0.9644f, group.top + group.height() * 0.67835f);
                bezier2Path.cubicTo(group.left + group.width() * 0.96466f, group.top + group.height() * 0.67662f, group.left + group.width() * 0.96461f, group.top + group.height() * 0.67327f, group.left + group.width() * 0.96221f, group.top + group.height() * 0.67011f);
                bezier2Path.cubicTo(group.left + group.width() * 0.9574f, group.top + group.height() * 0.66376f, group.left + group.width() * 0.9445f, group.top + group.height() * 0.66032f, group.left + group.width() * 0.9269f, group.top + group.height() * 0.6606f);
                bezier2Path.cubicTo(group.left + group.width() * 0.89034f, group.top + group.height() * 0.6612f, group.left + group.width() * 0.76701f, group.top + group.height() * 0.73285f, group.left + group.width() * 0.66408f, group.top + group.height() * 0.80328f);
                bezier2Path.cubicTo(group.left + group.width() * 0.63058f, group.top + group.height() * 0.8262f, group.left + group.width() * 0.61225f, group.top + group.height() * 0.84291f, group.left + group.width() * 0.61207f, group.top + group.height() * 0.84308f);
                bezier2Path.cubicTo(group.left + group.width() * 0.60509f, group.top + group.height() * 0.84945f, group.left + group.width() * 0.59385f, group.top + group.height() * 0.8494f, group.left + group.width() * 0.58698f, group.top + group.height() * 0.84291f);
                bezier2Path.cubicTo(group.left + group.width() * 0.58427f, group.top + group.height() * 0.84036f, group.left + group.width() * 0.58264f, group.top + group.height() * 0.8372f, group.left + group.width() * 0.58208f, group.top + group.height() * 0.83391f);
                bezier2Path.cubicTo(group.left + group.width() * 0.5614f, group.top + group.height() * 0.82114f, group.left + group.width() * 0.51788f, group.top + group.height() * 0.7996f, group.left + group.width() * 0.49202f, group.top + group.height() * 0.78957f);
                bezier2Path.cubicTo(group.left + group.width() * 0.49178f, group.top + group.height() * 0.78948f, group.left + group.width() * 0.49155f, group.top + group.height() * 0.78938f, group.left + group.width() * 0.49132f, group.top + group.height() * 0.78928f);
                bezier2Path.cubicTo(group.left + group.width() * 0.44394f, group.top + group.height() * 0.78836f, group.left + group.width() * 0.40145f, group.top + group.height() * 0.78678f, group.left + group.width() * 0.3852f, group.top + group.height() * 0.78614f);
                bezier2Path.cubicTo(group.left + group.width() * 0.37541f, group.top + group.height() * 0.78575f, group.left + group.width() * 0.36781f, group.top + group.height() * 0.77808f, group.left + group.width() * 0.36823f, group.top + group.height() * 0.76899f);
                bezier2Path.cubicTo(group.left + group.width() * 0.36865f, group.top + group.height() * 0.75989f, group.left + group.width() * 0.37692f, group.top + group.height() * 0.75283f, group.left + group.width() * 0.38671f, group.top + group.height() * 0.75321f);
                bezier2Path.cubicTo(group.left + group.width() * 0.48474f, group.top + group.height() * 0.75709f, group.left + group.width() * 0.63242f, group.top + group.height() * 0.75942f, group.left + group.width() * 0.65381f, group.top + group.height() * 0.75252f);
                bezier2Path.cubicTo(group.left + group.width() * 0.66632f, group.top + group.height() * 0.74851f, group.left + group.width() * 0.67378f, group.top + group.height() * 0.73626f, group.left + group.width() * 0.67378f, group.top + group.height() * 0.71974f);
                bezier2Path.cubicTo(group.left + group.width() * 0.67378f, group.top + group.height() * 0.70572f, group.left + group.width() * 0.65606f, group.top + group.height() * 0.69751f, group.left + group.width() * 0.6482f, group.top + group.height() * 0.69457f);
                bezier2Path.cubicTo(group.left + group.width() * 0.62512f, group.top + group.height() * 0.68748f, group.left + group.width() * 0.31704f, group.top + group.height() * 0.63817f, group.left + group.width() * 0.25569f, group.top + group.height() * 0.65156f);
                bezier2Path.cubicTo(group.left + group.width() * 0.22614f, group.top + group.height() * 0.65799f, group.left + group.width() * 0.14031f, group.top + group.height() * 0.69171f, group.left + group.width() * 0.07308f, group.top + group.height() * 0.72032f);
                bezier2Path.cubicTo(group.left + group.width() * 0.06416f, group.top + group.height() * 0.72408f, group.left + group.width() * 0.05364f, group.top + group.height() * 0.72045f, group.left + group.width() * 0.04956f, group.top + group.height() * 0.71218f);
                bezier2Path.cubicTo(group.left + group.width() * 0.04548f, group.top + group.height() * 0.70388f, group.left + group.width() * 0.0494f, group.top + group.height() * 0.6941f, group.left + group.width() * 0.05831f, group.top + group.height() * 0.69031f);
                bezier2Path.cubicTo(group.left + group.width() * 0.07293f, group.top + group.height() * 0.68409f, group.left + group.width() * 0.20244f, group.top + group.height() * 0.62927f, group.left + group.width() * 0.24758f, group.top + group.height() * 0.61943f);
                bezier2Path.cubicTo(group.left + group.width() * 0.32013f, group.top + group.height() * 0.60363f, group.left + group.width() * 0.63921f, group.top + group.height() * 0.65597f, group.left + group.width() * 0.66106f, group.top + group.height() * 0.66382f);
                bezier2Path.cubicTo(group.left + group.width() * 0.69179f, group.top + group.height() * 0.6753f, group.left + group.width() * 0.70927f, group.top + group.height() * 0.69564f, group.left + group.width() * 0.70927f, group.top + group.height() * 0.71974f);
                bezier2Path.cubicTo(group.left + group.width() * 0.70927f, group.top + group.height() * 0.72462f, group.left + group.width() * 0.70885f, group.top + group.height() * 0.72934f, group.left + group.width() * 0.70803f, group.top + group.height() * 0.73387f);
                bezier2Path.cubicTo(group.left + group.width() * 0.7508f, group.top + group.height() * 0.70661f, group.left + group.width() * 0.80578f, group.top + group.height() * 0.67347f, group.left + group.width() * 0.85234f, group.top + group.height() * 0.65152f);
                bezier2Path.cubicTo(group.left + group.width() * 0.84574f, group.top + group.height() * 0.64473f, group.left + group.width() * 0.83358f, group.top + group.height() * 0.63476f, group.left + group.width() * 0.81755f, group.top + group.height() * 0.6327f);
                bezier2Path.cubicTo(group.left + group.width() * 0.8004f, group.top + group.height() * 0.6305f, group.left + group.width() * 0.78566f, group.top + group.height() * 0.63894f, group.left + group.width() * 0.751f, group.top + group.height() * 0.65994f);
                bezier2Path.cubicTo(group.left + group.width() * 0.74365f, group.top + group.height() * 0.66439f, group.left + group.width() * 0.73532f, group.top + group.height() * 0.66945f, group.left + group.width() * 0.72618f, group.top + group.height() * 0.67481f);
                bezier2Path.lineTo(group.left + group.width() * 0.71117f, group.top + group.height() * 0.6836f);
                bezier2Path.lineTo(group.left + group.width() * 0.69224f, group.top + group.height() * 0.65571f);
                bezier2Path.lineTo(group.left + group.width() * 0.70725f, group.top + group.height() * 0.64688f);
                bezier2Path.cubicTo(group.left + group.width() * 0.71616f, group.top + group.height() * 0.64166f, group.left + group.width() * 0.72438f, group.top + group.height() * 0.63669f, group.left + group.width() * 0.73163f, group.top + group.height() * 0.63232f);
                bezier2Path.cubicTo(group.left + group.width() * 0.76765f, group.top + group.height() * 0.6105f, group.left + group.width() * 0.79146f, group.top + group.height() * 0.5961f, group.left + group.width() * 0.82239f, group.top + group.height() * 0.60005f);
                bezier2Path.close();
                bezier2Path.moveTo(group.left + group.width() * 0.02837f, group.top + group.height() * 0.71074f);
                bezier2Path.cubicTo(group.left + group.width() * 0.03154f, group.top + group.height() * 0.71238f, group.left + group.width() * 0.0342f, group.top + group.height() * 0.71493f, group.left + group.width() * 0.03584f, group.top + group.height() * 0.71823f);
                bezier2Path.cubicTo(group.left + group.width() * 0.0366f, group.top + group.height() * 0.71974f, group.left + group.width() * 0.03709f, group.top + group.height() * 0.72131f, group.left + group.width() * 0.03732f, group.top + group.height() * 0.72287f);
                bezier2Path.cubicTo(group.left + group.width() * 0.03909f, group.top + group.height() * 0.73134f, group.left + group.width() * 0.03354f, group.top + group.height() * 0.73972f, group.left + group.width() * 0.02443f, group.top + group.height() * 0.74194f);
                bezier2Path.cubicTo(group.left + group.width() * 0.02206f, group.top + group.height() * 0.74252f, group.left + group.width() * 0.01991f, group.top + group.height() * 0.74277f, group.left + group.width() * 0.01796f, group.top + group.height() * 0.74277f);
                bezier2Path.cubicTo(group.left + group.width() * 0.00539f, group.top + group.height() * 0.74277f, group.left + group.width() * 0.0012f, group.top + group.height() * 0.73235f, group.left + group.width() * 0.001f, group.top + group.height() * 0.73186f);
                bezier2Path.cubicTo(group.left + group.width() * 0.00043f, group.top + group.height() * 0.73037f, group.left + group.width() * -0.0041f, group.top + group.height() * 0.71724f, group.left + group.width() * 0.01228f, group.top + group.height() * 0.7102f);
                bezier2Path.cubicTo(group.left + group.width() * 0.01763f, group.top + group.height() * 0.70789f, group.left + group.width() * 0.02358f, group.top + group.height() * 0.70827f, group.left + group.width() * 0.02837f, group.top + group.height() * 0.71074f);
                bezier2Path.close();
                bezier2Path.moveTo(group.left + group.width() * 0.62631f, group.top + group.height() * 0.78852f);
                bezier2Path.cubicTo(group.left + group.width() * 0.61072f, group.top + group.height() * 0.78937f, group.left + group.width() * 0.59207f, group.top + group.height() * 0.78979f, group.left + group.width() * 0.57209f, group.top + group.height() * 0.78993f);
                bezier2Path.cubicTo(group.left + group.width() * 0.58362f, group.top + group.height() * 0.79592f, group.left + group.width() * 0.59425f, group.top + group.height() * 0.80181f, group.left + group.width() * 0.6023f, group.top + group.height() * 0.80681f);
                bezier2Path.cubicTo(group.left + group.width() * 0.60848f, group.top + group.height() * 0.80185f, group.left + group.width() * 0.61651f, group.top + group.height() * 0.79564f, group.left + group.width() * 0.62631f, group.top + group.height() * 0.78852f);
                bezier2Path.close();
                bezier2Path.moveTo(group.left + group.width() * 0.06073f, group.top + group.height() * 0.90766f);
                bezier2Path.cubicTo(group.left + group.width() * 0.06506f, group.top + group.height() * 0.91354f, group.left + group.width() * 0.06474f, group.top + group.height() * 0.9211f, group.left + group.width() * 0.06053f, group.top + group.height() * 0.92657f);
                bezier2Path.cubicTo(group.left + group.width() * 0.05908f, group.top + group.height() * 0.92866f, group.left + group.width() * 0.05711f, group.top + group.height() * 0.9305f, group.left + group.width() * 0.05464f, group.top + group.height() * 0.93184f);
                bezier2Path.cubicTo(group.left + group.width() * 0.05039f, group.top + group.height() * 0.93421f, group.left + group.width() * 0.04663f, group.top + group.height() * 0.93506f, group.left + group.width() * 0.04338f, group.top + group.height() * 0.93506f);
                bezier2Path.cubicTo(group.left + group.width() * 0.0341f, group.top + group.height() * 0.93506f, group.left + group.width() * 0.02903f, group.top + group.height() * 0.92789f, group.left + group.width() * 0.02875f, group.top + group.height() * 0.92748f);
                bezier2Path.cubicTo(group.left + group.width() * 0.02719f, group.top + group.height() * 0.92522f, group.left + group.width() * 0.02024f, group.top + group.height() * 0.91343f, group.left + group.width() * 0.03608f, group.top + group.height() * 0.90337f);
                bezier2Path.cubicTo(group.left + group.width() * 0.04416f, group.top + group.height() * 0.89823f, group.left + group.width() * 0.0552f, group.top + group.height() * 0.90016f, group.left + group.width() * 0.06073f, group.top + group.height() * 0.90766f);
                bezier2Path.close();
                
                paint.reset();
                paint.setFlags(Paint.ANTI_ALIAS_FLAG);
                paint.setStyle(Paint.Style.FILL);
                paint.setColor(StyleKit.oroScuro);
                canvas.drawPath(bezier2Path, paint);
            }
            
            // Bezier 3
            if (highlited) {
                RectF bezier3Rect = CacheForPromozioni.bezier3Rect;
                bezier3Rect.set(group.left + (float) Math.floor(group.width() * 0.08242f + 0.5f),
                    group.top,
                    group.left + (float) Math.floor(group.width() * 0.74725f + 0.5f),
                    group.top + (float) Math.floor(group.height() * 0.53571f + 0.5f));
                Path bezier3Path = CacheForPromozioni.bezier3Path;
                bezier3Path.reset();
                bezier3Path.moveTo(group.left + group.width() * 0.56593f, group.top + group.height() * 0.23981f);
                bezier3Path.cubicTo(group.left + group.width() * 0.56593f, group.top + group.height() * 0.2398f, group.left + group.width() * 0.56593f, group.top + group.height() * 0.29768f, group.left + group.width() * 0.56593f, group.top + group.height() * 0.36224f);
                bezier3Path.lineTo(group.left + group.width() * 0.74725f, group.top + group.height() * 0.36224f);
                bezier3Path.lineTo(group.left + group.width() * 0.74725f, group.top + group.height() * 0.41327f);
                bezier3Path.lineTo(group.left + group.width() * 0.56593f, group.top + group.height() * 0.41327f);
                bezier3Path.cubicTo(group.left + group.width() * 0.56593f, group.top + group.height() * 0.47783f, group.left + group.width() * 0.56593f, group.top + group.height() * 0.53571f, group.left + group.width() * 0.56593f, group.top + group.height() * 0.53571f);
                bezier3Path.lineTo(group.left + group.width() * 0.50549f, group.top + group.height() * 0.53571f);
                bezier3Path.cubicTo(group.left + group.width() * 0.50549f, group.top + group.height() * 0.53571f, group.left + group.width() * 0.50549f, group.top + group.height() * 0.47783f, group.left + group.width() * 0.50549f, group.top + group.height() * 0.41327f);
                bezier3Path.lineTo(group.left + group.width() * 0.31868f, group.top + group.height() * 0.41327f);
                bezier3Path.lineTo(group.left + group.width() * 0.31868f, group.top + group.height() * 0.36224f);
                bezier3Path.lineTo(group.left + group.width() * 0.50549f, group.top + group.height() * 0.36224f);
                bezier3Path.cubicTo(group.left + group.width() * 0.50549f, group.top + group.height() * 0.29768f, group.left + group.width() * 0.50549f, group.top + group.height() * 0.2398f, group.left + group.width() * 0.50549f, group.top + group.height() * 0.2398f);
                bezier3Path.lineTo(group.left + group.width() * 0.56593f, group.top + group.height() * 0.2398f);
                bezier3Path.lineTo(group.left + group.width() * 0.56593f, group.top + group.height() * 0.23981f);
                bezier3Path.close();
                bezier3Path.moveTo(group.left + group.width() * 0.14835f, group.top + group.height() * 0.2398f);
                bezier3Path.cubicTo(group.left + group.width() * 0.14835f, group.top + group.height() * 0.2567f, group.left + group.width() * 0.13359f, group.top + group.height() * 0.27041f, group.left + group.width() * 0.11538f, group.top + group.height() * 0.27041f);
                bezier3Path.cubicTo(group.left + group.width() * 0.09718f, group.top + group.height() * 0.27041f, group.left + group.width() * 0.08242f, group.top + group.height() * 0.2567f, group.left + group.width() * 0.08242f, group.top + group.height() * 0.2398f);
                bezier3Path.cubicTo(group.left + group.width() * 0.08242f, group.top + group.height() * 0.22289f, group.left + group.width() * 0.09718f, group.top + group.height() * 0.20918f, group.left + group.width() * 0.11538f, group.top + group.height() * 0.20918f);
                bezier3Path.cubicTo(group.left + group.width() * 0.13359f, group.top + group.height() * 0.20918f, group.left + group.width() * 0.14835f, group.top + group.height() * 0.22289f, group.left + group.width() * 0.14835f, group.top + group.height() * 0.2398f);
                bezier3Path.close();
                bezier3Path.moveTo(group.left + group.width() * 0.28022f, group.top + group.height() * 0.5051f);
                bezier3Path.cubicTo(group.left + group.width() * 0.28022f, group.top + group.height() * 0.52201f, group.left + group.width() * 0.26546f, group.top + group.height() * 0.53571f, group.left + group.width() * 0.24725f, group.top + group.height() * 0.53571f);
                bezier3Path.cubicTo(group.left + group.width() * 0.22905f, group.top + group.height() * 0.53571f, group.left + group.width() * 0.21429f, group.top + group.height() * 0.52201f, group.left + group.width() * 0.21429f, group.top + group.height() * 0.5051f);
                bezier3Path.cubicTo(group.left + group.width() * 0.21429f, group.top + group.height() * 0.4882f, group.left + group.width() * 0.22905f, group.top + group.height() * 0.47449f, group.left + group.width() * 0.24725f, group.top + group.height() * 0.47449f);
                bezier3Path.cubicTo(group.left + group.width() * 0.26546f, group.top + group.height() * 0.47449f, group.left + group.width() * 0.28022f, group.top + group.height() * 0.4882f, group.left + group.width() * 0.28022f, group.top + group.height() * 0.5051f);
                bezier3Path.close();
                bezier3Path.moveTo(group.left + group.width() * 0.5f, group.top + group.height() * 0.03061f);
                bezier3Path.cubicTo(group.left + group.width() * 0.5f, group.top + group.height() * 0.04752f, group.left + group.width() * 0.48524f, group.top + group.height() * 0.06122f, group.left + group.width() * 0.46703f, group.top + group.height() * 0.06122f);
                bezier3Path.cubicTo(group.left + group.width() * 0.44883f, group.top + group.height() * 0.06122f, group.left + group.width() * 0.43407f, group.top + group.height() * 0.04752f, group.left + group.width() * 0.43407f, group.top + group.height() * 0.03061f);
                bezier3Path.cubicTo(group.left + group.width() * 0.43407f, group.top + group.height() * 0.01371f, group.left + group.width() * 0.44883f, group.top, group.left + group.width() * 0.46703f, group.top);
                bezier3Path.cubicTo(group.left + group.width() * 0.48524f, group.top, group.left + group.width() * 0.5f, group.top + group.height() * 0.01371f, group.left + group.width() * 0.5f, group.top + group.height() * 0.03061f);
                bezier3Path.close();
                
                paint.reset();
                paint.setFlags(Paint.ANTI_ALIAS_FLAG);
                paint.setStyle(Paint.Style.FILL);
                paint.setColor(StyleKit.rosso);
                canvas.drawPath(bezier3Path, paint);
            }
        }
    }
    
    private static class CacheForHome {
        private static Paint paint = new Paint();
        private static RectF group = new RectF();
        private static RectF bezier4Rect = new RectF();
        private static Path bezier4Path = new Path();
        private static RectF bezierRect = new RectF();
        private static Path bezierPath = new Path();
        private static RectF bezier5Rect = new RectF();
        private static Path bezier5Path = new Path();
        private static RectF bezier6Rect = new RectF();
        private static Path bezier6Path = new Path();
        private static RectF group2 = new RectF();
        private static RectF bezier10Rect = new RectF();
        private static Path bezier10Path = new Path();
        private static RectF bezier7Rect = new RectF();
        private static Path bezier7Path = new Path();
        private static RectF bezier2Rect = new RectF();
        private static Path bezier2Path = new Path();
        private static RectF bezier3Rect = new RectF();
        private static Path bezier3Path = new Path();
    }
    
    
    public static void drawHome(Canvas canvas, RectF frame, boolean highlited) {
        // General Declarations
        Paint paint = CacheForHome.paint;
        
        // Group
        {
            RectF group = CacheForHome.group;
            group.set(frame.left + 12f,
                frame.top + 8f,
                frame.right - 12f,
                frame.bottom - 7f);
            
            // Bezier 4
            RectF bezier4Rect = CacheForHome.bezier4Rect;
            bezier4Rect.set(group.left + (float) Math.floor(group.width() * 0.12245f - 0.05f) + 0.55f,
                group.top + (float) Math.floor(group.height() * 0.28994f - 0.14f) + 0.64f,
                group.left + (float) Math.floor(group.width() * 0.88435f - 0.15f) + 0.65f,
                group.top + (float) Math.floor(group.height() * 0.91716f - 0.17f) + 0.67f);
            Path bezier4Path = CacheForHome.bezier4Path;
            bezier4Path.reset();
            bezier4Path.moveTo(group.left + group.width() * 0.26531f, group.top + group.height() * 0.7929f);
            bezier4Path.lineTo(group.left + group.width() * 0.26531f, group.top + group.height() * 0.7929f);
            bezier4Path.lineTo(group.left + group.width() * 0.26531f, group.top + group.height() * 0.7929f);
            bezier4Path.lineTo(group.left + group.width() * 0.26769f, group.top + group.height() * 0.7929f);
            bezier4Path.cubicTo(group.left + group.width() * 0.28633f, group.top + group.height() * 0.7929f, group.left + group.width() * 0.30298f, group.top + group.height() * 0.80304f, group.left + group.width() * 0.30936f, group.top + group.height() * 0.81828f);
            bezier4Path.cubicTo(group.left + group.width() * 0.31293f, group.top + group.height() * 0.82809f, group.left + group.width() * 0.31293f, group.top + group.height() * 0.83721f, group.left + group.width() * 0.31293f, group.top + group.height() * 0.85544f);
            bezier4Path.lineTo(group.left + group.width() * 0.31293f, group.top + group.height() * 0.91716f);
            bezier4Path.lineTo(group.left + group.width() * 0.26531f, group.top + group.height() * 0.91716f);
            bezier4Path.lineTo(group.left + group.width() * 0.21769f, group.top + group.height() * 0.91716f);
            bezier4Path.lineTo(group.left + group.width() * 0.21769f, group.top + group.height() * 0.87193f);
            bezier4Path.cubicTo(group.left + group.width() * 0.21769f, group.top + group.height() * 0.83721f, group.left + group.width() * 0.21769f, group.top + group.height() * 0.82809f, group.left + group.width() * 0.22081f, group.top + group.height() * 0.81987f);
            bezier4Path.lineTo(group.left + group.width() * 0.22125f, group.top + group.height() * 0.81828f);
            bezier4Path.cubicTo(group.left + group.width() * 0.22763f, group.top + group.height() * 0.80304f, group.left + group.width() * 0.24428f, group.top + group.height() * 0.7929f, group.left + group.width() * 0.26293f, group.top + group.height() * 0.7929f);
            bezier4Path.cubicTo(group.left + group.width() * 0.26531f, group.top + group.height() * 0.7929f, group.left + group.width() * 0.26531f, group.top + group.height() * 0.7929f, group.left + group.width() * 0.26531f, group.top + group.height() * 0.7929f);
            bezier4Path.lineTo(group.left + group.width() * 0.26531f, group.top + group.height() * 0.7929f);
            bezier4Path.close();
            bezier4Path.moveTo(group.left + group.width() * 0.7415f, group.top + group.height() * 0.7929f);
            bezier4Path.lineTo(group.left + group.width() * 0.7415f, group.top + group.height() * 0.7929f);
            bezier4Path.lineTo(group.left + group.width() * 0.7415f, group.top + group.height() * 0.7929f);
            bezier4Path.lineTo(group.left + group.width() * 0.74388f, group.top + group.height() * 0.7929f);
            bezier4Path.cubicTo(group.left + group.width() * 0.76252f, group.top + group.height() * 0.7929f, group.left + group.width() * 0.77917f, group.top + group.height() * 0.80304f, group.left + group.width() * 0.78555f, group.top + group.height() * 0.81828f);
            bezier4Path.cubicTo(group.left + group.width() * 0.78912f, group.top + group.height() * 0.82809f, group.left + group.width() * 0.78912f, group.top + group.height() * 0.83721f, group.left + group.width() * 0.78912f, group.top + group.height() * 0.85544f);
            bezier4Path.lineTo(group.left + group.width() * 0.78912f, group.top + group.height() * 0.91716f);
            bezier4Path.lineTo(group.left + group.width() * 0.7415f, group.top + group.height() * 0.91716f);
            bezier4Path.lineTo(group.left + group.width() * 0.69388f, group.top + group.height() * 0.91716f);
            bezier4Path.lineTo(group.left + group.width() * 0.69388f, group.top + group.height() * 0.87193f);
            bezier4Path.cubicTo(group.left + group.width() * 0.69388f, group.top + group.height() * 0.83721f, group.left + group.width() * 0.69388f, group.top + group.height() * 0.82809f, group.left + group.width() * 0.697f, group.top + group.height() * 0.81987f);
            bezier4Path.lineTo(group.left + group.width() * 0.69744f, group.top + group.height() * 0.81828f);
            bezier4Path.cubicTo(group.left + group.width() * 0.70382f, group.top + group.height() * 0.80304f, group.left + group.width() * 0.72047f, group.top + group.height() * 0.7929f, group.left + group.width() * 0.73912f, group.top + group.height() * 0.7929f);
            bezier4Path.cubicTo(group.left + group.width() * 0.7415f, group.top + group.height() * 0.7929f, group.left + group.width() * 0.7415f, group.top + group.height() * 0.7929f, group.left + group.width() * 0.7415f, group.top + group.height() * 0.7929f);
            bezier4Path.lineTo(group.left + group.width() * 0.7415f, group.top + group.height() * 0.7929f);
            bezier4Path.close();
            bezier4Path.moveTo(group.left + group.width() * 0.62585f, group.top + group.height() * 0.28994f);
            bezier4Path.lineTo(group.left + group.width() * 0.62585f, group.top + group.height() * 0.28994f);
            bezier4Path.lineTo(group.left + group.width() * 0.62585f, group.top + group.height() * 0.28994f);
            bezier4Path.lineTo(group.left + group.width() * 0.62823f, group.top + group.height() * 0.28994f);
            bezier4Path.cubicTo(group.left + group.width() * 0.64687f, group.top + group.height() * 0.28994f, group.left + group.width() * 0.66353f, group.top + group.height() * 0.30008f, group.left + group.width() * 0.6699f, group.top + group.height() * 0.31532f);
            bezier4Path.cubicTo(group.left + group.width() * 0.67347f, group.top + group.height() * 0.32513f, group.left + group.width() * 0.67347f, group.top + group.height() * 0.33425f, group.left + group.width() * 0.67347f, group.top + group.height() * 0.35248f);
            bezier4Path.lineTo(group.left + group.width() * 0.67347f, group.top + group.height() * 0.4142f);
            bezier4Path.lineTo(group.left + group.width() * 0.62585f, group.top + group.height() * 0.4142f);
            bezier4Path.lineTo(group.left + group.width() * 0.57823f, group.top + group.height() * 0.4142f);
            bezier4Path.lineTo(group.left + group.width() * 0.57823f, group.top + group.height() * 0.36897f);
            bezier4Path.cubicTo(group.left + group.width() * 0.57823f, group.top + group.height() * 0.33425f, group.left + group.width() * 0.57823f, group.top + group.height() * 0.32513f, group.left + group.width() * 0.58135f, group.top + group.height() * 0.31691f);
            bezier4Path.lineTo(group.left + group.width() * 0.5818f, group.top + group.height() * 0.31532f);
            bezier4Path.cubicTo(group.left + group.width() * 0.58817f, group.top + group.height() * 0.30008f, group.left + group.width() * 0.60483f, group.top + group.height() * 0.28994f, group.left + group.width() * 0.62347f, group.top + group.height() * 0.28994f);
            bezier4Path.cubicTo(group.left + group.width() * 0.62585f, group.top + group.height() * 0.28994f, group.left + group.width() * 0.62585f, group.top + group.height() * 0.28994f, group.left + group.width() * 0.62585f, group.top + group.height() * 0.28994f);
            bezier4Path.lineTo(group.left + group.width() * 0.62585f, group.top + group.height() * 0.28994f);
            bezier4Path.close();
            bezier4Path.moveTo(group.left + group.width() * 0.5034f, group.top + group.height() * 0.28994f);
            bezier4Path.lineTo(group.left + group.width() * 0.5034f, group.top + group.height() * 0.28994f);
            bezier4Path.lineTo(group.left + group.width() * 0.5034f, group.top + group.height() * 0.28994f);
            bezier4Path.lineTo(group.left + group.width() * 0.50578f, group.top + group.height() * 0.28994f);
            bezier4Path.cubicTo(group.left + group.width() * 0.52442f, group.top + group.height() * 0.28994f, group.left + group.width() * 0.54108f, group.top + group.height() * 0.30008f, group.left + group.width() * 0.54745f, group.top + group.height() * 0.31532f);
            bezier4Path.cubicTo(group.left + group.width() * 0.55102f, group.top + group.height() * 0.32513f, group.left + group.width() * 0.55102f, group.top + group.height() * 0.33425f, group.left + group.width() * 0.55102f, group.top + group.height() * 0.35248f);
            bezier4Path.lineTo(group.left + group.width() * 0.55102f, group.top + group.height() * 0.4142f);
            bezier4Path.lineTo(group.left + group.width() * 0.5034f, group.top + group.height() * 0.4142f);
            bezier4Path.lineTo(group.left + group.width() * 0.45578f, group.top + group.height() * 0.4142f);
            bezier4Path.lineTo(group.left + group.width() * 0.45578f, group.top + group.height() * 0.36897f);
            bezier4Path.cubicTo(group.left + group.width() * 0.45578f, group.top + group.height() * 0.33425f, group.left + group.width() * 0.45578f, group.top + group.height() * 0.32513f, group.left + group.width() * 0.4589f, group.top + group.height() * 0.31691f);
            bezier4Path.lineTo(group.left + group.width() * 0.45935f, group.top + group.height() * 0.31532f);
            bezier4Path.cubicTo(group.left + group.width() * 0.46573f, group.top + group.height() * 0.30008f, group.left + group.width() * 0.48238f, group.top + group.height() * 0.28994f, group.left + group.width() * 0.50102f, group.top + group.height() * 0.28994f);
            bezier4Path.cubicTo(group.left + group.width() * 0.5034f, group.top + group.height() * 0.28994f, group.left + group.width() * 0.5034f, group.top + group.height() * 0.28994f, group.left + group.width() * 0.5034f, group.top + group.height() * 0.28994f);
            bezier4Path.lineTo(group.left + group.width() * 0.5034f, group.top + group.height() * 0.28994f);
            bezier4Path.close();
            bezier4Path.moveTo(group.left + group.width() * 0.38095f, group.top + group.height() * 0.28994f);
            bezier4Path.lineTo(group.left + group.width() * 0.38095f, group.top + group.height() * 0.28994f);
            bezier4Path.lineTo(group.left + group.width() * 0.38095f, group.top + group.height() * 0.28994f);
            bezier4Path.lineTo(group.left + group.width() * 0.38333f, group.top + group.height() * 0.28994f);
            bezier4Path.cubicTo(group.left + group.width() * 0.40198f, group.top + group.height() * 0.28994f, group.left + group.width() * 0.41863f, group.top + group.height() * 0.30008f, group.left + group.width() * 0.425f, group.top + group.height() * 0.31532f);
            bezier4Path.cubicTo(group.left + group.width() * 0.42857f, group.top + group.height() * 0.32513f, group.left + group.width() * 0.42857f, group.top + group.height() * 0.33425f, group.left + group.width() * 0.42857f, group.top + group.height() * 0.35248f);
            bezier4Path.lineTo(group.left + group.width() * 0.42857f, group.top + group.height() * 0.4142f);
            bezier4Path.lineTo(group.left + group.width() * 0.38095f, group.top + group.height() * 0.4142f);
            bezier4Path.lineTo(group.left + group.width() * 0.33333f, group.top + group.height() * 0.4142f);
            bezier4Path.lineTo(group.left + group.width() * 0.33333f, group.top + group.height() * 0.36897f);
            bezier4Path.cubicTo(group.left + group.width() * 0.33333f, group.top + group.height() * 0.33425f, group.left + group.width() * 0.33333f, group.top + group.height() * 0.32513f, group.left + group.width() * 0.33645f, group.top + group.height() * 0.31691f);
            bezier4Path.lineTo(group.left + group.width() * 0.3369f, group.top + group.height() * 0.31532f);
            bezier4Path.cubicTo(group.left + group.width() * 0.34328f, group.top + group.height() * 0.30008f, group.left + group.width() * 0.35993f, group.top + group.height() * 0.28994f, group.left + group.width() * 0.37857f, group.top + group.height() * 0.28994f);
            bezier4Path.cubicTo(group.left + group.width() * 0.38095f, group.top + group.height() * 0.28994f, group.left + group.width() * 0.38095f, group.top + group.height() * 0.28994f, group.left + group.width() * 0.38095f, group.top + group.height() * 0.28994f);
            bezier4Path.lineTo(group.left + group.width() * 0.38095f, group.top + group.height() * 0.28994f);
            bezier4Path.close();
            bezier4Path.moveTo(group.left + group.width() * 0.83673f, group.top + group.height() * 0.28994f);
            bezier4Path.lineTo(group.left + group.width() * 0.83673f, group.top + group.height() * 0.28994f);
            bezier4Path.lineTo(group.left + group.width() * 0.83673f, group.top + group.height() * 0.28994f);
            bezier4Path.lineTo(group.left + group.width() * 0.83912f, group.top + group.height() * 0.28994f);
            bezier4Path.cubicTo(group.left + group.width() * 0.85776f, group.top + group.height() * 0.28994f, group.left + group.width() * 0.87441f, group.top + group.height() * 0.30008f, group.left + group.width() * 0.88079f, group.top + group.height() * 0.31532f);
            bezier4Path.cubicTo(group.left + group.width() * 0.88435f, group.top + group.height() * 0.32513f, group.left + group.width() * 0.88435f, group.top + group.height() * 0.33425f, group.left + group.width() * 0.88435f, group.top + group.height() * 0.35248f);
            bezier4Path.lineTo(group.left + group.width() * 0.88435f, group.top + group.height() * 0.4142f);
            bezier4Path.lineTo(group.left + group.width() * 0.83673f, group.top + group.height() * 0.4142f);
            bezier4Path.lineTo(group.left + group.width() * 0.78912f, group.top + group.height() * 0.4142f);
            bezier4Path.lineTo(group.left + group.width() * 0.78912f, group.top + group.height() * 0.36897f);
            bezier4Path.cubicTo(group.left + group.width() * 0.78912f, group.top + group.height() * 0.33425f, group.left + group.width() * 0.78912f, group.top + group.height() * 0.32513f, group.left + group.width() * 0.79223f, group.top + group.height() * 0.31691f);
            bezier4Path.lineTo(group.left + group.width() * 0.79268f, group.top + group.height() * 0.31532f);
            bezier4Path.cubicTo(group.left + group.width() * 0.79906f, group.top + group.height() * 0.30008f, group.left + group.width() * 0.81571f, group.top + group.height() * 0.28994f, group.left + group.width() * 0.83435f, group.top + group.height() * 0.28994f);
            bezier4Path.cubicTo(group.left + group.width() * 0.83673f, group.top + group.height() * 0.28994f, group.left + group.width() * 0.83673f, group.top + group.height() * 0.28994f, group.left + group.width() * 0.83673f, group.top + group.height() * 0.28994f);
            bezier4Path.lineTo(group.left + group.width() * 0.83673f, group.top + group.height() * 0.28994f);
            bezier4Path.close();
            bezier4Path.moveTo(group.left + group.width() * 0.17007f, group.top + group.height() * 0.28994f);
            bezier4Path.lineTo(group.left + group.width() * 0.17007f, group.top + group.height() * 0.28994f);
            bezier4Path.lineTo(group.left + group.width() * 0.17007f, group.top + group.height() * 0.28994f);
            bezier4Path.lineTo(group.left + group.width() * 0.17245f, group.top + group.height() * 0.28994f);
            bezier4Path.cubicTo(group.left + group.width() * 0.19109f, group.top + group.height() * 0.28994f, group.left + group.width() * 0.20774f, group.top + group.height() * 0.30008f, group.left + group.width() * 0.21412f, group.top + group.height() * 0.31532f);
            bezier4Path.cubicTo(group.left + group.width() * 0.21769f, group.top + group.height() * 0.32513f, group.left + group.width() * 0.21769f, group.top + group.height() * 0.33425f, group.left + group.width() * 0.21769f, group.top + group.height() * 0.35248f);
            bezier4Path.lineTo(group.left + group.width() * 0.21769f, group.top + group.height() * 0.4142f);
            bezier4Path.lineTo(group.left + group.width() * 0.17007f, group.top + group.height() * 0.4142f);
            bezier4Path.lineTo(group.left + group.width() * 0.12245f, group.top + group.height() * 0.4142f);
            bezier4Path.lineTo(group.left + group.width() * 0.12245f, group.top + group.height() * 0.36897f);
            bezier4Path.cubicTo(group.left + group.width() * 0.12245f, group.top + group.height() * 0.33425f, group.left + group.width() * 0.12245f, group.top + group.height() * 0.32513f, group.left + group.width() * 0.12557f, group.top + group.height() * 0.31691f);
            bezier4Path.lineTo(group.left + group.width() * 0.12602f, group.top + group.height() * 0.31532f);
            bezier4Path.cubicTo(group.left + group.width() * 0.13239f, group.top + group.height() * 0.30008f, group.left + group.width() * 0.14904f, group.top + group.height() * 0.28994f, group.left + group.width() * 0.16769f, group.top + group.height() * 0.28994f);
            bezier4Path.cubicTo(group.left + group.width() * 0.17007f, group.top + group.height() * 0.28994f, group.left + group.width() * 0.17007f, group.top + group.height() * 0.28994f, group.left + group.width() * 0.17007f, group.top + group.height() * 0.28994f);
            bezier4Path.lineTo(group.left + group.width() * 0.17007f, group.top + group.height() * 0.28994f);
            bezier4Path.close();
            bezier4Path.moveTo(group.left + group.width() * 0.62585f, group.top + group.height() * 0.48521f);
            bezier4Path.lineTo(group.left + group.width() * 0.62585f, group.top + group.height() * 0.48521f);
            bezier4Path.lineTo(group.left + group.width() * 0.62585f, group.top + group.height() * 0.48521f);
            bezier4Path.lineTo(group.left + group.width() * 0.62823f, group.top + group.height() * 0.48521f);
            bezier4Path.cubicTo(group.left + group.width() * 0.64687f, group.top + group.height() * 0.48521f, group.left + group.width() * 0.66353f, group.top + group.height() * 0.49535f, group.left + group.width() * 0.6699f, group.top + group.height() * 0.51059f);
            bezier4Path.cubicTo(group.left + group.width() * 0.67347f, group.top + group.height() * 0.5204f, group.left + group.width() * 0.67347f, group.top + group.height() * 0.52952f, group.left + group.width() * 0.67347f, group.top + group.height() * 0.54775f);
            bezier4Path.lineTo(group.left + group.width() * 0.67347f, group.top + group.height() * 0.60947f);
            bezier4Path.lineTo(group.left + group.width() * 0.62585f, group.top + group.height() * 0.60947f);
            bezier4Path.lineTo(group.left + group.width() * 0.57823f, group.top + group.height() * 0.60947f);
            bezier4Path.lineTo(group.left + group.width() * 0.57823f, group.top + group.height() * 0.56424f);
            bezier4Path.cubicTo(group.left + group.width() * 0.57823f, group.top + group.height() * 0.52952f, group.left + group.width() * 0.57823f, group.top + group.height() * 0.5204f, group.left + group.width() * 0.58135f, group.top + group.height() * 0.51218f);
            bezier4Path.lineTo(group.left + group.width() * 0.5818f, group.top + group.height() * 0.51059f);
            bezier4Path.cubicTo(group.left + group.width() * 0.58817f, group.top + group.height() * 0.49535f, group.left + group.width() * 0.60483f, group.top + group.height() * 0.48521f, group.left + group.width() * 0.62347f, group.top + group.height() * 0.48521f);
            bezier4Path.cubicTo(group.left + group.width() * 0.62585f, group.top + group.height() * 0.48521f, group.left + group.width() * 0.62585f, group.top + group.height() * 0.48521f, group.left + group.width() * 0.62585f, group.top + group.height() * 0.48521f);
            bezier4Path.lineTo(group.left + group.width() * 0.62585f, group.top + group.height() * 0.48521f);
            bezier4Path.close();
            bezier4Path.moveTo(group.left + group.width() * 0.5034f, group.top + group.height() * 0.48521f);
            bezier4Path.lineTo(group.left + group.width() * 0.5034f, group.top + group.height() * 0.48521f);
            bezier4Path.lineTo(group.left + group.width() * 0.5034f, group.top + group.height() * 0.48521f);
            bezier4Path.lineTo(group.left + group.width() * 0.50578f, group.top + group.height() * 0.48521f);
            bezier4Path.cubicTo(group.left + group.width() * 0.52442f, group.top + group.height() * 0.48521f, group.left + group.width() * 0.54108f, group.top + group.height() * 0.49535f, group.left + group.width() * 0.54745f, group.top + group.height() * 0.51059f);
            bezier4Path.cubicTo(group.left + group.width() * 0.55102f, group.top + group.height() * 0.5204f, group.left + group.width() * 0.55102f, group.top + group.height() * 0.52952f, group.left + group.width() * 0.55102f, group.top + group.height() * 0.54775f);
            bezier4Path.lineTo(group.left + group.width() * 0.55102f, group.top + group.height() * 0.60947f);
            bezier4Path.lineTo(group.left + group.width() * 0.5034f, group.top + group.height() * 0.60947f);
            bezier4Path.lineTo(group.left + group.width() * 0.45578f, group.top + group.height() * 0.60947f);
            bezier4Path.lineTo(group.left + group.width() * 0.45578f, group.top + group.height() * 0.56424f);
            bezier4Path.cubicTo(group.left + group.width() * 0.45578f, group.top + group.height() * 0.52952f, group.left + group.width() * 0.45578f, group.top + group.height() * 0.5204f, group.left + group.width() * 0.4589f, group.top + group.height() * 0.51218f);
            bezier4Path.lineTo(group.left + group.width() * 0.45935f, group.top + group.height() * 0.51059f);
            bezier4Path.cubicTo(group.left + group.width() * 0.46573f, group.top + group.height() * 0.49535f, group.left + group.width() * 0.48238f, group.top + group.height() * 0.48521f, group.left + group.width() * 0.50102f, group.top + group.height() * 0.48521f);
            bezier4Path.cubicTo(group.left + group.width() * 0.5034f, group.top + group.height() * 0.48521f, group.left + group.width() * 0.5034f, group.top + group.height() * 0.48521f, group.left + group.width() * 0.5034f, group.top + group.height() * 0.48521f);
            bezier4Path.lineTo(group.left + group.width() * 0.5034f, group.top + group.height() * 0.48521f);
            bezier4Path.close();
            bezier4Path.moveTo(group.left + group.width() * 0.38095f, group.top + group.height() * 0.48521f);
            bezier4Path.lineTo(group.left + group.width() * 0.38095f, group.top + group.height() * 0.48521f);
            bezier4Path.lineTo(group.left + group.width() * 0.38095f, group.top + group.height() * 0.48521f);
            bezier4Path.lineTo(group.left + group.width() * 0.38333f, group.top + group.height() * 0.48521f);
            bezier4Path.cubicTo(group.left + group.width() * 0.40198f, group.top + group.height() * 0.48521f, group.left + group.width() * 0.41863f, group.top + group.height() * 0.49535f, group.left + group.width() * 0.425f, group.top + group.height() * 0.51059f);
            bezier4Path.cubicTo(group.left + group.width() * 0.42857f, group.top + group.height() * 0.5204f, group.left + group.width() * 0.42857f, group.top + group.height() * 0.52952f, group.left + group.width() * 0.42857f, group.top + group.height() * 0.54775f);
            bezier4Path.lineTo(group.left + group.width() * 0.42857f, group.top + group.height() * 0.60947f);
            bezier4Path.lineTo(group.left + group.width() * 0.38095f, group.top + group.height() * 0.60947f);
            bezier4Path.lineTo(group.left + group.width() * 0.33333f, group.top + group.height() * 0.60947f);
            bezier4Path.lineTo(group.left + group.width() * 0.33333f, group.top + group.height() * 0.56424f);
            bezier4Path.cubicTo(group.left + group.width() * 0.33333f, group.top + group.height() * 0.52952f, group.left + group.width() * 0.33333f, group.top + group.height() * 0.5204f, group.left + group.width() * 0.33645f, group.top + group.height() * 0.51218f);
            bezier4Path.lineTo(group.left + group.width() * 0.3369f, group.top + group.height() * 0.51059f);
            bezier4Path.cubicTo(group.left + group.width() * 0.34328f, group.top + group.height() * 0.49535f, group.left + group.width() * 0.35993f, group.top + group.height() * 0.48521f, group.left + group.width() * 0.37857f, group.top + group.height() * 0.48521f);
            bezier4Path.cubicTo(group.left + group.width() * 0.38095f, group.top + group.height() * 0.48521f, group.left + group.width() * 0.38095f, group.top + group.height() * 0.48521f, group.left + group.width() * 0.38095f, group.top + group.height() * 0.48521f);
            bezier4Path.lineTo(group.left + group.width() * 0.38095f, group.top + group.height() * 0.48521f);
            bezier4Path.close();
            bezier4Path.moveTo(group.left + group.width() * 0.83673f, group.top + group.height() * 0.48521f);
            bezier4Path.lineTo(group.left + group.width() * 0.83673f, group.top + group.height() * 0.48521f);
            bezier4Path.lineTo(group.left + group.width() * 0.83673f, group.top + group.height() * 0.48521f);
            bezier4Path.lineTo(group.left + group.width() * 0.83912f, group.top + group.height() * 0.48521f);
            bezier4Path.cubicTo(group.left + group.width() * 0.85776f, group.top + group.height() * 0.48521f, group.left + group.width() * 0.87441f, group.top + group.height() * 0.49535f, group.left + group.width() * 0.88079f, group.top + group.height() * 0.51059f);
            bezier4Path.cubicTo(group.left + group.width() * 0.88435f, group.top + group.height() * 0.5204f, group.left + group.width() * 0.88435f, group.top + group.height() * 0.52952f, group.left + group.width() * 0.88435f, group.top + group.height() * 0.54775f);
            bezier4Path.lineTo(group.left + group.width() * 0.88435f, group.top + group.height() * 0.60947f);
            bezier4Path.lineTo(group.left + group.width() * 0.83673f, group.top + group.height() * 0.60947f);
            bezier4Path.lineTo(group.left + group.width() * 0.78912f, group.top + group.height() * 0.60947f);
            bezier4Path.lineTo(group.left + group.width() * 0.78912f, group.top + group.height() * 0.56424f);
            bezier4Path.cubicTo(group.left + group.width() * 0.78912f, group.top + group.height() * 0.52952f, group.left + group.width() * 0.78912f, group.top + group.height() * 0.5204f, group.left + group.width() * 0.79223f, group.top + group.height() * 0.51218f);
            bezier4Path.lineTo(group.left + group.width() * 0.79268f, group.top + group.height() * 0.51059f);
            bezier4Path.cubicTo(group.left + group.width() * 0.79906f, group.top + group.height() * 0.49535f, group.left + group.width() * 0.81571f, group.top + group.height() * 0.48521f, group.left + group.width() * 0.83435f, group.top + group.height() * 0.48521f);
            bezier4Path.cubicTo(group.left + group.width() * 0.83673f, group.top + group.height() * 0.48521f, group.left + group.width() * 0.83673f, group.top + group.height() * 0.48521f, group.left + group.width() * 0.83673f, group.top + group.height() * 0.48521f);
            bezier4Path.lineTo(group.left + group.width() * 0.83673f, group.top + group.height() * 0.48521f);
            bezier4Path.close();
            bezier4Path.moveTo(group.left + group.width() * 0.17007f, group.top + group.height() * 0.48521f);
            bezier4Path.lineTo(group.left + group.width() * 0.17007f, group.top + group.height() * 0.48521f);
            bezier4Path.lineTo(group.left + group.width() * 0.17007f, group.top + group.height() * 0.48521f);
            bezier4Path.lineTo(group.left + group.width() * 0.17245f, group.top + group.height() * 0.48521f);
            bezier4Path.cubicTo(group.left + group.width() * 0.19109f, group.top + group.height() * 0.48521f, group.left + group.width() * 0.20774f, group.top + group.height() * 0.49535f, group.left + group.width() * 0.21412f, group.top + group.height() * 0.51059f);
            bezier4Path.cubicTo(group.left + group.width() * 0.21769f, group.top + group.height() * 0.5204f, group.left + group.width() * 0.21769f, group.top + group.height() * 0.52952f, group.left + group.width() * 0.21769f, group.top + group.height() * 0.54775f);
            bezier4Path.lineTo(group.left + group.width() * 0.21769f, group.top + group.height() * 0.60947f);
            bezier4Path.lineTo(group.left + group.width() * 0.17007f, group.top + group.height() * 0.60947f);
            bezier4Path.lineTo(group.left + group.width() * 0.12245f, group.top + group.height() * 0.60947f);
            bezier4Path.lineTo(group.left + group.width() * 0.12245f, group.top + group.height() * 0.56424f);
            bezier4Path.cubicTo(group.left + group.width() * 0.12245f, group.top + group.height() * 0.52952f, group.left + group.width() * 0.12245f, group.top + group.height() * 0.5204f, group.left + group.width() * 0.12557f, group.top + group.height() * 0.51218f);
            bezier4Path.lineTo(group.left + group.width() * 0.12602f, group.top + group.height() * 0.51059f);
            bezier4Path.cubicTo(group.left + group.width() * 0.13239f, group.top + group.height() * 0.49535f, group.left + group.width() * 0.14904f, group.top + group.height() * 0.48521f, group.left + group.width() * 0.16769f, group.top + group.height() * 0.48521f);
            bezier4Path.cubicTo(group.left + group.width() * 0.17007f, group.top + group.height() * 0.48521f, group.left + group.width() * 0.17007f, group.top + group.height() * 0.48521f, group.left + group.width() * 0.17007f, group.top + group.height() * 0.48521f);
            bezier4Path.lineTo(group.left + group.width() * 0.17007f, group.top + group.height() * 0.48521f);
            bezier4Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStrokeWidth(2f);
            paint.setStrokeMiter(10f);
            canvas.save();
            paint.setStyle(Paint.Style.STROKE);
            paint.setColor(StyleKit.bianco);
            canvas.drawPath(bezier4Path, paint);
            canvas.restore();
            
            // Bezier
            RectF bezierRect = CacheForHome.bezierRect;
            bezierRect.set(group.left + (float) Math.floor(group.width() * 0.00245f + 0.07f) + 0.43f,
                group.top + (float) Math.floor(group.height() * 0.16814f + 0.39f) + 0.11f,
                group.left + (float) Math.floor(group.width() * 0.9978f - 0.11f) + 0.61f,
                group.top + (float) Math.floor(group.height() * 1f - 0.5f) + 1f);
            Path bezierPath = CacheForHome.bezierPath;
            bezierPath.reset();
            bezierPath.moveTo(group.left + group.width() * 0.00245f, group.top + group.height() * 0.25896f);
            bezierPath.lineTo(group.left + group.width() * 0.05222f, group.top + group.height() * 0.25896f);
            bezierPath.lineTo(group.left + group.width() * 0.05222f, group.top + group.height() * 0.90918f);
            bezierPath.lineTo(group.left + group.width() * 0.00245f, group.top + group.height() * 0.90918f);
            bezierPath.lineTo(group.left + group.width() * 0.00245f, group.top + group.height());
            bezierPath.lineTo(group.left + group.width() * 0.39643f, group.top + group.height());
            bezierPath.lineTo(group.left + group.width() * 0.39643f, group.top + group.height() * 0.79272f);
            bezierPath.lineTo(group.left + group.width() * 0.6038f, group.top + group.height() * 0.79272f);
            bezierPath.lineTo(group.left + group.width() * 0.6038f, group.top + group.height());
            bezierPath.lineTo(group.left + group.width() * 0.9978f, group.top + group.height());
            bezierPath.lineTo(group.left + group.width() * 0.9978f, group.top + group.height() * 0.90918f);
            bezierPath.lineTo(group.left + group.width() * 0.94803f, group.top + group.height() * 0.90918f);
            bezierPath.lineTo(group.left + group.width() * 0.94803f, group.top + group.height() * 0.25896f);
            bezierPath.lineTo(group.left + group.width() * 0.9978f, group.top + group.height() * 0.25896f);
            bezierPath.lineTo(group.left + group.width() * 0.9978f, group.top + group.height() * 0.16814f);
            bezierPath.lineTo(group.left + group.width() * 0.00245f, group.top + group.height() * 0.16814f);
            bezierPath.lineTo(group.left + group.width() * 0.00245f, group.top + group.height() * 0.25896f);
            bezierPath.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStrokeWidth(2.5f);
            paint.setStrokeMiter(10f);
            canvas.save();
            paint.setStyle(Paint.Style.STROKE);
            paint.setColor(StyleKit.bianco);
            canvas.drawPath(bezierPath, paint);
            canvas.restore();
            
            // Bezier 5
            RectF bezier5Rect = CacheForHome.bezier5Rect;
            bezier5Rect.set(group.left + (float) Math.floor(group.width() * 0.17919f - 0.04f) + 0.54f,
                group.top + (float) Math.floor(group.height() * 0.0223f + 0.37f) + 0.13f,
                group.left + (float) Math.floor(group.width() * 0.82104f - 0f) + 0.5f,
                group.top + (float) Math.floor(group.height() * 0.13133f + 0.2f) + 0.3f);
            Path bezier5Path = CacheForHome.bezier5Path;
            bezier5Path.reset();
            bezier5Path.moveTo(group.left + group.width() * 0.44829f, group.top + group.height() * 0.13133f);
            bezier5Path.cubicTo(group.left + group.width() * 0.45793f, group.top + group.height() * 0.13133f, group.left + group.width() * 0.46635f, group.top + group.height() * 0.12991f, group.left + group.width() * 0.47353f, group.top + group.height() * 0.12708f);
            bezier5Path.cubicTo(group.left + group.width() * 0.48069f, group.top + group.height() * 0.12429f, group.left + group.width() * 0.48616f, group.top + group.height() * 0.12033f, group.left + group.width() * 0.48997f, group.top + group.height() * 0.11522f);
            bezier5Path.cubicTo(group.left + group.width() * 0.49378f, group.top + group.height() * 0.11011f, group.left + group.width() * 0.49569f, group.top + group.height() * 0.10429f, group.left + group.width() * 0.49569f, group.top + group.height() * 0.09773f);
            bezier5Path.cubicTo(group.left + group.width() * 0.49569f, group.top + group.height() * 0.09058f, group.left + group.width() * 0.49368f, group.top + group.height() * 0.08466f, group.left + group.width() * 0.48961f, group.top + group.height() * 0.07992f);
            bezier5Path.cubicTo(group.left + group.width() * 0.48557f, group.top + group.height() * 0.07522f, group.left + group.width() * 0.47831f, group.top + group.height() * 0.07081f, group.left + group.width() * 0.46789f, group.top + group.height() * 0.06669f);
            bezier5Path.cubicTo(group.left + group.width() * 0.45703f, group.top + group.height() * 0.06236f, group.left + group.width() * 0.45037f, group.top + group.height() * 0.05935f, group.left + group.width() * 0.44791f, group.top + group.height() * 0.05771f);
            bezier5Path.cubicTo(group.left + group.width() * 0.44546f, group.top + group.height() * 0.05608f, group.left + group.width() * 0.44422f, group.top + group.height() * 0.05422f, group.left + group.width() * 0.44422f, group.top + group.height() * 0.05212f);
            bezier5Path.cubicTo(group.left + group.width() * 0.44422f, group.top + group.height() * 0.05022f, group.left + group.width() * 0.44521f, group.top + group.height() * 0.04859f, group.left + group.width() * 0.44713f, group.top + group.height() * 0.04728f);
            bezier5Path.cubicTo(group.left + group.width() * 0.44906f, group.top + group.height() * 0.04599f, group.left + group.width() * 0.45214f, group.top + group.height() * 0.04533f, group.left + group.width() * 0.45641f, group.top + group.height() * 0.04533f);
            bezier5Path.cubicTo(group.left + group.width() * 0.46462f, group.top + group.height() * 0.04533f, group.left + group.width() * 0.47436f, group.top + group.height() * 0.04762f, group.left + group.width() * 0.48569f, group.top + group.height() * 0.05212f);
            bezier5Path.lineTo(group.left + group.width() * 0.49569f, group.top + group.height() * 0.03003f);
            bezier5Path.cubicTo(group.left + group.width() * 0.48267f, group.top + group.height() * 0.02495f, group.left + group.width() * 0.4699f, group.top + group.height() * 0.02244f, group.left + group.width() * 0.45739f, group.top + group.height() * 0.02244f);
            bezier5Path.cubicTo(group.left + group.width() * 0.44322f, group.top + group.height() * 0.02244f, group.left + group.width() * 0.43206f, group.top + group.height() * 0.02516f, group.left + group.width() * 0.42399f, group.top + group.height() * 0.03064f);
            bezier5Path.cubicTo(group.left + group.width() * 0.41587f, group.top + group.height() * 0.0361f, group.left + group.width() * 0.41182f, group.top + group.height() * 0.0437f, group.left + group.width() * 0.41182f, group.top + group.height() * 0.05344f);
            bezier5Path.cubicTo(group.left + group.width() * 0.41182f, group.top + group.height() * 0.05867f, group.left + group.width() * 0.41277f, group.top + group.height() * 0.0632f, group.left + group.width() * 0.41467f, group.top + group.height() * 0.06699f);
            bezier5Path.cubicTo(group.left + group.width() * 0.41656f, group.top + group.height() * 0.07081f, group.left + group.width() * 0.4195f, group.top + group.height() * 0.07419f, group.left + group.width() * 0.42343f, group.top + group.height() * 0.07715f);
            bezier5Path.cubicTo(group.left + group.width() * 0.42737f, group.top + group.height() * 0.08007f, group.left + group.width() * 0.43328f, group.top + group.height() * 0.08313f, group.left + group.width() * 0.44118f, group.top + group.height() * 0.08626f);
            bezier5Path.cubicTo(group.left + group.width() * 0.44989f, group.top + group.height() * 0.08971f, group.left + group.width() * 0.45525f, group.top + group.height() * 0.09197f, group.left + group.width() * 0.45728f, group.top + group.height() * 0.09307f);
            bezier5Path.cubicTo(group.left + group.width() * 0.45928f, group.top + group.height() * 0.0942f, group.left + group.width() * 0.46073f, group.top + group.height() * 0.09528f, group.left + group.width() * 0.46163f, group.top + group.height() * 0.09638f);
            bezier5Path.cubicTo(group.left + group.width() * 0.46256f, group.top + group.height() * 0.09746f, group.left + group.width() * 0.46302f, group.top + group.height() * 0.09874f, group.left + group.width() * 0.46302f, group.top + group.height() * 0.10018f);
            bezier5Path.cubicTo(group.left + group.width() * 0.46302f, group.top + group.height() * 0.10251f, group.left + group.width() * 0.46188f, group.top + group.height() * 0.10436f, group.left + group.width() * 0.45963f, group.top + group.height() * 0.10586f);
            bezier5Path.cubicTo(group.left + group.width() * 0.45735f, group.top + group.height() * 0.10735f, group.left + group.width() * 0.45381f, group.top + group.height() * 0.10807f, group.left + group.width() * 0.44893f, group.top + group.height() * 0.10807f);
            bezier5Path.cubicTo(group.left + group.width() * 0.44333f, group.top + group.height() * 0.10807f, group.left + group.width() * 0.43716f, group.top + group.height() * 0.10729f, group.left + group.width() * 0.43042f, group.top + group.height() * 0.10571f);
            bezier5Path.cubicTo(group.left + group.width() * 0.42371f, group.top + group.height() * 0.10414f, group.left + group.width() * 0.41723f, group.top + group.height() * 0.10197f, group.left + group.width() * 0.41099f, group.top + group.height() * 0.09919f);
            bezier5Path.lineTo(group.left + group.width() * 0.41099f, group.top + group.height() * 0.12465f);
            bezier5Path.cubicTo(group.left + group.width() * 0.41688f, group.top + group.height() * 0.12711f, group.left + group.width() * 0.42257f, group.top + group.height() * 0.12885f, group.left + group.width() * 0.42802f, group.top + group.height() * 0.12986f);
            bezier5Path.cubicTo(group.left + group.width() * 0.43349f, group.top + group.height() * 0.13084f, group.left + group.width() * 0.44024f, group.top + group.height() * 0.13133f, group.left + group.width() * 0.44829f, group.top + group.height() * 0.13133f);
            bezier5Path.close();
            bezier5Path.moveTo(group.left + group.width() * 0.59894f, group.top + group.height() * 0.08212f);
            bezier5Path.cubicTo(group.left + group.width() * 0.59894f, group.top + group.height() * 0.07595f, group.left + group.width() * 0.59841f, group.top + group.height() * 0.06699f, group.left + group.width() * 0.59735f, group.top + group.height() * 0.05526f);
            bezier5Path.lineTo(group.left + group.width() * 0.5981f, group.top + group.height() * 0.05526f);
            bezier5Path.lineTo(group.left + group.width() * 0.64228f, group.top + group.height() * 0.1299f);
            bezier5Path.lineTo(group.left + group.width() * 0.68512f, group.top + group.height() * 0.1299f);
            bezier5Path.lineTo(group.left + group.width() * 0.68512f, group.top + group.height() * 0.02395f);
            bezier5Path.lineTo(group.left + group.width() * 0.656f, group.top + group.height() * 0.02395f);
            bezier5Path.lineTo(group.left + group.width() * 0.656f, group.top + group.height() * 0.07187f);
            bezier5Path.cubicTo(group.left + group.width() * 0.656f, group.top + group.height() * 0.07833f, group.left + group.width() * 0.65639f, group.top + group.height() * 0.08688f, group.left + group.width() * 0.65716f, group.top + group.height() * 0.09755f);
            bezier5Path.lineTo(group.left + group.width() * 0.65667f, group.top + group.height() * 0.09755f);
            bezier5Path.lineTo(group.left + group.width() * 0.61266f, group.top + group.height() * 0.02395f);
            bezier5Path.lineTo(group.left + group.width() * 0.56999f, group.top + group.height() * 0.02395f);
            bezier5Path.lineTo(group.left + group.width() * 0.56999f, group.top + group.height() * 0.1299f);
            bezier5Path.lineTo(group.left + group.width() * 0.59894f, group.top + group.height() * 0.1299f);
            bezier5Path.lineTo(group.left + group.width() * 0.59894f, group.top + group.height() * 0.08212f);
            bezier5Path.close();
            bezier5Path.moveTo(group.left + group.width() * 0.51438f, group.top + group.height() * 0.1299f);
            bezier5Path.lineTo(group.left + group.width() * 0.54722f, group.top + group.height() * 0.1299f);
            bezier5Path.lineTo(group.left + group.width() * 0.54722f, group.top + group.height() * 0.02395f);
            bezier5Path.lineTo(group.left + group.width() * 0.51438f, group.top + group.height() * 0.02395f);
            bezier5Path.lineTo(group.left + group.width() * 0.51438f, group.top + group.height() * 0.1299f);
            bezier5Path.close();
            bezier5Path.moveTo(group.left + group.width() * 0.23577f, group.top + group.height() * 0.13133f);
            bezier5Path.cubicTo(group.left + group.width() * 0.24852f, group.top + group.height() * 0.13133f, group.left + group.width() * 0.25994f, group.top + group.height() * 0.1294f, group.left + group.width() * 0.27004f, group.top + group.height() * 0.12546f);
            bezier5Path.lineTo(group.left + group.width() * 0.27004f, group.top + group.height() * 0.10125f);
            bezier5Path.cubicTo(group.left + group.width() * 0.26495f, group.top + group.height() * 0.10311f, group.left + group.width() * 0.2599f, group.top + group.height() * 0.10469f, group.left + group.width() * 0.25489f, group.top + group.height() * 0.10598f);
            bezier5Path.cubicTo(group.left + group.width() * 0.24988f, group.top + group.height() * 0.10728f, group.left + group.width() * 0.24468f, group.top + group.height() * 0.10792f, group.left + group.width() * 0.23934f, group.top + group.height() * 0.10792f);
            bezier5Path.cubicTo(group.left + group.width() * 0.22164f, group.top + group.height() * 0.10792f, group.left + group.width() * 0.21279f, group.top + group.height() * 0.09775f, group.left + group.width() * 0.21279f, group.top + group.height() * 0.07738f);
            bezier5Path.cubicTo(group.left + group.width() * 0.21279f, group.top + group.height() * 0.06752f, group.left + group.width() * 0.21496f, group.top + group.height() * 0.05984f, group.left + group.width() * 0.21933f, group.top + group.height() * 0.05428f);
            bezier5Path.cubicTo(group.left + group.width() * 0.22367f, group.top + group.height() * 0.04871f, group.left + group.width() * 0.22977f, group.top + group.height() * 0.04591f, group.left + group.width() * 0.23752f, group.top + group.height() * 0.04591f);
            bezier5Path.cubicTo(group.left + group.width() * 0.24264f, group.top + group.height() * 0.04591f, group.left + group.width() * 0.24744f, group.top + group.height() * 0.04655f, group.left + group.width() * 0.25193f, group.top + group.height() * 0.0478f);
            bezier5Path.cubicTo(group.left + group.width() * 0.25637f, group.top + group.height() * 0.04904f, group.left + group.width() * 0.26085f, group.top + group.height() * 0.05061f, group.left + group.width() * 0.26531f, group.top + group.height() * 0.05245f);
            bezier5Path.lineTo(group.left + group.width() * 0.27532f, group.top + group.height() * 0.02991f);
            bezier5Path.cubicTo(group.left + group.width() * 0.26343f, group.top + group.height() * 0.02493f, group.left + group.width() * 0.25092f, group.top + group.height() * 0.02244f, group.left + group.width() * 0.23785f, group.top + group.height() * 0.02244f);
            bezier5Path.cubicTo(group.left + group.width() * 0.22588f, group.top + group.height() * 0.02244f, group.left + group.width() * 0.21548f, group.top + group.height() * 0.02466f, group.left + group.width() * 0.20663f, group.top + group.height() * 0.02913f);
            bezier5Path.cubicTo(group.left + group.width() * 0.19778f, group.top + group.height() * 0.03359f, group.left + group.width() * 0.19098f, group.top + group.height() * 0.04f, group.left + group.width() * 0.18628f, group.top + group.height() * 0.04831f);
            bezier5Path.cubicTo(group.left + group.width() * 0.18155f, group.top + group.height() * 0.0566f, group.left + group.width() * 0.17919f, group.top + group.height() * 0.06625f, group.left + group.width() * 0.17919f, group.top + group.height() * 0.0772f);
            bezier5Path.cubicTo(group.left + group.width() * 0.17919f, group.top + group.height() * 0.09475f, group.left + group.width() * 0.18408f, group.top + group.height() * 0.10814f, group.left + group.width() * 0.19381f, group.top + group.height() * 0.11742f);
            bezier5Path.cubicTo(group.left + group.width() * 0.20353f, group.top + group.height() * 0.12668f, group.left + group.width() * 0.21754f, group.top + group.height() * 0.13133f, group.left + group.width() * 0.23577f, group.top + group.height() * 0.13133f);
            bezier5Path.close();
            bezier5Path.moveTo(group.left + group.width() * 0.7624f, group.top + group.height() * 0.04578f);
            bezier5Path.cubicTo(group.left + group.width() * 0.74601f, group.top + group.height() * 0.04578f, group.left + group.width() * 0.73782f, group.top + group.height() * 0.05611f, group.left + group.width() * 0.73782f, group.top + group.height() * 0.07678f);
            bezier5Path.cubicTo(group.left + group.width() * 0.73782f, group.top + group.height() * 0.09727f, group.left + group.width() * 0.74595f, group.top + group.height() * 0.1075f, group.left + group.width() * 0.76221f, group.top + group.height() * 0.1075f);
            bezier5Path.cubicTo(group.left + group.width() * 0.7705f, group.top + group.height() * 0.1075f, group.left + group.width() * 0.77663f, group.top + group.height() * 0.10502f, group.left + group.width() * 0.78062f, group.top + group.height() * 0.10004f);
            bezier5Path.cubicTo(group.left + group.width() * 0.78463f, group.top + group.height() * 0.09507f, group.left + group.width() * 0.78662f, group.top + group.height() * 0.08729f, group.left + group.width() * 0.78662f, group.top + group.height() * 0.07678f);
            bezier5Path.cubicTo(group.left + group.width() * 0.78662f, group.top + group.height() * 0.06618f, group.left + group.width() * 0.78458f, group.top + group.height() * 0.05839f, group.left + group.width() * 0.78053f, group.top + group.height() * 0.05334f);
            bezier5Path.cubicTo(group.left + group.width() * 0.77648f, group.top + group.height() * 0.04831f, group.left + group.width() * 0.77045f, group.top + group.height() * 0.04578f, group.left + group.width() * 0.7624f, group.top + group.height() * 0.04578f);
            bezier5Path.close();
            bezier5Path.moveTo(group.left + group.width() * 0.80614f, group.top + group.height() * 0.03614f);
            bezier5Path.cubicTo(group.left + group.width() * 0.81607f, group.top + group.height() * 0.04535f, group.left + group.width() * 0.82104f, group.top + group.height() * 0.0589f, group.left + group.width() * 0.82104f, group.top + group.height() * 0.07678f);
            bezier5Path.cubicTo(group.left + group.width() * 0.82104f, group.top + group.height() * 0.09459f, group.left + group.width() * 0.81605f, group.top + group.height() * 0.10814f, group.left + group.width() * 0.80606f, group.top + group.height() * 0.11742f);
            bezier5Path.cubicTo(group.left + group.width() * 0.79608f, group.top + group.height() * 0.12668f, group.left + group.width() * 0.78148f, group.top + group.height() * 0.13133f, group.left + group.width() * 0.76221f, group.top + group.height() * 0.13133f);
            bezier5Path.cubicTo(group.left + group.width() * 0.74968f, group.top + group.height() * 0.13133f, group.left + group.width() * 0.73907f, group.top + group.height() * 0.12929f, group.left + group.width() * 0.7304f, group.top + group.height() * 0.12522f);
            bezier5Path.cubicTo(group.left + group.width() * 0.72596f, group.top + group.height() * 0.12313f, group.left + group.width() * 0.72203f, group.top + group.height() * 0.12051f, group.left + group.width() * 0.71861f, group.top + group.height() * 0.11736f);
            bezier5Path.cubicTo(group.left + group.width() * 0.70847f, group.top + group.height() * 0.10803f, group.left + group.width() * 0.70341f, group.top + group.height() * 0.09445f, group.left + group.width() * 0.70341f, group.top + group.height() * 0.07663f);
            bezier5Path.cubicTo(group.left + group.width() * 0.70341f, group.top + group.height() * 0.059f, group.left + group.width() * 0.70843f, group.top + group.height() * 0.04555f, group.left + group.width() * 0.7185f, group.top + group.height() * 0.03623f);
            bezier5Path.cubicTo(group.left + group.width() * 0.72857f, group.top + group.height() * 0.02695f, group.left + group.width() * 0.74321f, group.top + group.height() * 0.0223f, group.left + group.width() * 0.7624f, group.top + group.height() * 0.0223f);
            bezier5Path.cubicTo(group.left + group.width() * 0.78163f, group.top + group.height() * 0.0223f, group.left + group.width() * 0.79622f, group.top + group.height() * 0.02692f, group.left + group.width() * 0.80614f, group.top + group.height() * 0.03614f);
            bezier5Path.close();
            bezier5Path.moveTo(group.left + group.width() * 0.342f, group.top + group.height() * 0.04099f);
            bezier5Path.cubicTo(group.left + group.width() * 0.34149f, group.top + group.height() * 0.04343f, group.left + group.width() * 0.34052f, group.top + group.height() * 0.0475f, group.left + group.width() * 0.33907f, group.top + group.height() * 0.05317f);
            bezier5Path.cubicTo(group.left + group.width() * 0.3376f, group.top + group.height() * 0.05881f, group.left + group.width() * 0.33434f, group.top + group.height() * 0.06994f, group.left + group.width() * 0.32934f, group.top + group.height() * 0.08657f);
            bezier5Path.lineTo(group.left + group.width() * 0.35507f, group.top + group.height() * 0.08657f);
            bezier5Path.lineTo(group.left + group.width() * 0.34986f, group.top + group.height() * 0.06919f);
            bezier5Path.cubicTo(group.left + group.width() * 0.34863f, group.top + group.height() * 0.06531f, group.left + group.width() * 0.34716f, group.top + group.height() * 0.0603f, group.left + group.width() * 0.34541f, group.top + group.height() * 0.05419f);
            bezier5Path.cubicTo(group.left + group.width() * 0.34368f, group.top + group.height() * 0.04803f, group.left + group.width() * 0.34256f, group.top + group.height() * 0.04363f, group.left + group.width() * 0.342f, group.top + group.height() * 0.04099f);
            bezier5Path.close();
            bezier5Path.moveTo(group.left + group.width() * 0.36358f, group.top + group.height() * 0.02354f);
            bezier5Path.cubicTo(group.left + group.width() * 0.36358f, group.top + group.height() * 0.02352f, group.left + group.width() * 0.40354f, group.top + group.height() * 0.1299f, group.left + group.width() * 0.40354f, group.top + group.height() * 0.1299f);
            bezier5Path.lineTo(group.left + group.width() * 0.36779f, group.top + group.height() * 0.1299f);
            bezier5Path.lineTo(group.left + group.width() * 0.36185f, group.top + group.height() * 0.11003f);
            bezier5Path.lineTo(group.left + group.width() * 0.32255f, group.top + group.height() * 0.11003f);
            bezier5Path.cubicTo(group.left + group.width() * 0.32255f, group.top + group.height() * 0.11003f, group.left + group.width() * 0.32211f, group.top + group.height() * 0.11145f, group.left + group.width() * 0.32147f, group.top + group.height() * 0.11354f);
            bezier5Path.cubicTo(group.left + group.width() * 0.31971f, group.top + group.height() * 0.11924f, group.left + group.width() * 0.31643f, group.top + group.height() * 0.1299f, group.left + group.width() * 0.31643f, group.top + group.height() * 0.1299f);
            bezier5Path.lineTo(group.left + group.width() * 0.28053f, group.top + group.height() * 0.1299f);
            bezier5Path.cubicTo(group.left + group.width() * 0.28053f, group.top + group.height() * 0.1299f, group.left + group.width() * 0.28486f, group.top + group.height() * 0.11824f, group.left + group.width() * 0.29064f, group.top + group.height() * 0.10265f);
            bezier5Path.cubicTo(group.left + group.width() * 0.30233f, group.top + group.height() * 0.07113f, group.left + group.width() * 0.31999f, group.top + group.height() * 0.02352f, group.left + group.width() * 0.31999f, group.top + group.height() * 0.02352f);
            bezier5Path.lineTo(group.left + group.width() * 0.36358f, group.top + group.height() * 0.02352f);
            bezier5Path.lineTo(group.left + group.width() * 0.36358f, group.top + group.height() * 0.02354f);
            bezier5Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.bianco);
            canvas.drawPath(bezier5Path, paint);
            
            // Bezier 6
            RectF bezier6Rect = CacheForHome.bezier6Rect;
            bezier6Rect.set(group.left,
                group.top,
                group.left + (float) Math.floor(group.width() + 0.5f),
                group.top + (float) Math.floor(group.height() * 0.12266f - 0.19f) + 0.69f);
            Path bezier6Path = CacheForHome.bezier6Path;
            bezier6Path.reset();
            bezier6Path.moveTo(group.left + group.width() * 0.88085f, group.top + group.height() * 0.12266f);
            bezier6Path.lineTo(group.left + group.width() * 0.92636f, group.top + group.height() * 0.09371f);
            bezier6Path.lineTo(group.left + group.width() * 0.97187f, group.top + group.height() * 0.12266f);
            bezier6Path.lineTo(group.left + group.width() * 0.95449f, group.top + group.height() * 0.07582f);
            bezier6Path.lineTo(group.left + group.width(), group.top + group.height() * 0.04686f);
            bezier6Path.lineTo(group.left + group.width() * 0.94374f, group.top + group.height() * 0.04686f);
            bezier6Path.lineTo(group.left + group.width() * 0.92636f, group.top);
            bezier6Path.lineTo(group.left + group.width() * 0.90897f, group.top + group.height() * 0.04686f);
            bezier6Path.lineTo(group.left + group.width() * 0.85272f, group.top + group.height() * 0.04686f);
            bezier6Path.lineTo(group.left + group.width() * 0.89824f, group.top + group.height() * 0.07582f);
            bezier6Path.lineTo(group.left + group.width() * 0.88085f, group.top + group.height() * 0.12266f);
            bezier6Path.close();
            bezier6Path.moveTo(group.left + group.width() * 0.02813f, group.top + group.height() * 0.12266f);
            bezier6Path.lineTo(group.left + group.width() * 0.07364f, group.top + group.height() * 0.09371f);
            bezier6Path.lineTo(group.left + group.width() * 0.11916f, group.top + group.height() * 0.12266f);
            bezier6Path.lineTo(group.left + group.width() * 0.10177f, group.top + group.height() * 0.07582f);
            bezier6Path.lineTo(group.left + group.width() * 0.14728f, group.top + group.height() * 0.04686f);
            bezier6Path.lineTo(group.left + group.width() * 0.09103f, group.top + group.height() * 0.04686f);
            bezier6Path.lineTo(group.left + group.width() * 0.07364f, group.top);
            bezier6Path.lineTo(group.left + group.width() * 0.05627f, group.top + group.height() * 0.04686f);
            bezier6Path.lineTo(group.left, group.top + group.height() * 0.04686f);
            bezier6Path.lineTo(group.left + group.width() * 0.0455f, group.top + group.height() * 0.07582f);
            bezier6Path.lineTo(group.left + group.width() * 0.02813f, group.top + group.height() * 0.12266f);
            bezier6Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.bianco);
            canvas.drawPath(bezier6Path, paint);
        }
        
        // Group 2
        {
            RectF group2 = CacheForHome.group2;
            group2.set(frame.left + 12f,
                frame.top + 8f,
                frame.right - 12f,
                frame.bottom - 7f);
            
            // Bezier 10
            if (highlited) {
                RectF bezier10Rect = CacheForHome.bezier10Rect;
                bezier10Rect.set(group2.left + (float) Math.floor(group2.width() * 0.00245f + 0.07f) + 0.43f,
                    group2.top + (float) Math.floor(group2.height() * 0.16814f + 0.39f) + 0.11f,
                    group2.left + (float) Math.floor(group2.width() * 0.9978f - 0.11f) + 0.61f,
                    group2.top + (float) Math.floor(group2.height() * 1f - 0.5f) + 1f);
                Path bezier10Path = CacheForHome.bezier10Path;
                bezier10Path.reset();
                bezier10Path.moveTo(group2.left + group2.width() * 0.00245f, group2.top + group2.height() * 0.25896f);
                bezier10Path.lineTo(group2.left + group2.width() * 0.05222f, group2.top + group2.height() * 0.25896f);
                bezier10Path.lineTo(group2.left + group2.width() * 0.05222f, group2.top + group2.height() * 0.90918f);
                bezier10Path.lineTo(group2.left + group2.width() * 0.00245f, group2.top + group2.height() * 0.90918f);
                bezier10Path.lineTo(group2.left + group2.width() * 0.00245f, group2.top + group2.height());
                bezier10Path.lineTo(group2.left + group2.width() * 0.39643f, group2.top + group2.height());
                bezier10Path.lineTo(group2.left + group2.width() * 0.39643f, group2.top + group2.height() * 0.79272f);
                bezier10Path.lineTo(group2.left + group2.width() * 0.6038f, group2.top + group2.height() * 0.79272f);
                bezier10Path.lineTo(group2.left + group2.width() * 0.6038f, group2.top + group2.height());
                bezier10Path.lineTo(group2.left + group2.width() * 0.9978f, group2.top + group2.height());
                bezier10Path.lineTo(group2.left + group2.width() * 0.9978f, group2.top + group2.height() * 0.90918f);
                bezier10Path.lineTo(group2.left + group2.width() * 0.94803f, group2.top + group2.height() * 0.90918f);
                bezier10Path.lineTo(group2.left + group2.width() * 0.94803f, group2.top + group2.height() * 0.25896f);
                bezier10Path.lineTo(group2.left + group2.width() * 0.9978f, group2.top + group2.height() * 0.25896f);
                bezier10Path.lineTo(group2.left + group2.width() * 0.9978f, group2.top + group2.height() * 0.16814f);
                bezier10Path.lineTo(group2.left + group2.width() * 0.00245f, group2.top + group2.height() * 0.16814f);
                bezier10Path.lineTo(group2.left + group2.width() * 0.00245f, group2.top + group2.height() * 0.25896f);
                bezier10Path.close();
                
                paint.reset();
                paint.setFlags(Paint.ANTI_ALIAS_FLAG);
                paint.setStyle(Paint.Style.FILL);
                paint.setColor(StyleKit.oroScuro);
                canvas.drawPath(bezier10Path, paint);
                
                paint.reset();
                paint.setFlags(Paint.ANTI_ALIAS_FLAG);
                paint.setStrokeWidth(2.5f);
                paint.setStrokeMiter(10f);
                canvas.save();
                paint.setStyle(Paint.Style.STROKE);
                paint.setColor(StyleKit.oroScuro);
                canvas.drawPath(bezier10Path, paint);
                canvas.restore();
            }
            
            // Bezier 7
            if (highlited) {
                RectF bezier7Rect = CacheForHome.bezier7Rect;
                bezier7Rect.set(group2.left,
                    group2.top,
                    group2.left + (float) Math.floor(group2.width() + 0.5f),
                    group2.top + (float) Math.floor(group2.height() * 0.12266f - 0.19f) + 0.69f);
                Path bezier7Path = CacheForHome.bezier7Path;
                bezier7Path.reset();
                bezier7Path.moveTo(group2.left + group2.width() * 0.88085f, group2.top + group2.height() * 0.12266f);
                bezier7Path.lineTo(group2.left + group2.width() * 0.92636f, group2.top + group2.height() * 0.09371f);
                bezier7Path.lineTo(group2.left + group2.width() * 0.97187f, group2.top + group2.height() * 0.12266f);
                bezier7Path.lineTo(group2.left + group2.width() * 0.95449f, group2.top + group2.height() * 0.07582f);
                bezier7Path.lineTo(group2.left + group2.width(), group2.top + group2.height() * 0.04686f);
                bezier7Path.lineTo(group2.left + group2.width() * 0.94374f, group2.top + group2.height() * 0.04686f);
                bezier7Path.lineTo(group2.left + group2.width() * 0.92636f, group2.top);
                bezier7Path.lineTo(group2.left + group2.width() * 0.90897f, group2.top + group2.height() * 0.04686f);
                bezier7Path.lineTo(group2.left + group2.width() * 0.85272f, group2.top + group2.height() * 0.04686f);
                bezier7Path.lineTo(group2.left + group2.width() * 0.89824f, group2.top + group2.height() * 0.07582f);
                bezier7Path.lineTo(group2.left + group2.width() * 0.88085f, group2.top + group2.height() * 0.12266f);
                bezier7Path.close();
                bezier7Path.moveTo(group2.left + group2.width() * 0.02813f, group2.top + group2.height() * 0.12266f);
                bezier7Path.lineTo(group2.left + group2.width() * 0.07364f, group2.top + group2.height() * 0.09371f);
                bezier7Path.lineTo(group2.left + group2.width() * 0.11916f, group2.top + group2.height() * 0.12266f);
                bezier7Path.lineTo(group2.left + group2.width() * 0.10177f, group2.top + group2.height() * 0.07582f);
                bezier7Path.lineTo(group2.left + group2.width() * 0.14728f, group2.top + group2.height() * 0.04686f);
                bezier7Path.lineTo(group2.left + group2.width() * 0.09103f, group2.top + group2.height() * 0.04686f);
                bezier7Path.lineTo(group2.left + group2.width() * 0.07364f, group2.top);
                bezier7Path.lineTo(group2.left + group2.width() * 0.05627f, group2.top + group2.height() * 0.04686f);
                bezier7Path.lineTo(group2.left, group2.top + group2.height() * 0.04686f);
                bezier7Path.lineTo(group2.left + group2.width() * 0.0455f, group2.top + group2.height() * 0.07582f);
                bezier7Path.lineTo(group2.left + group2.width() * 0.02813f, group2.top + group2.height() * 0.12266f);
                bezier7Path.close();
                
                paint.reset();
                paint.setFlags(Paint.ANTI_ALIAS_FLAG);
                paint.setStyle(Paint.Style.FILL);
                paint.setColor(StyleKit.oroScuro);
                canvas.drawPath(bezier7Path, paint);
            }
            
            // Bezier 2
            if (highlited) {
                RectF bezier2Rect = CacheForHome.bezier2Rect;
                bezier2Rect.set(group2.left + (float) Math.floor(group2.width() * 0.17919f - 0.04f) + 0.54f,
                    group2.top + (float) Math.floor(group2.height() * 0.0223f + 0.37f) + 0.13f,
                    group2.left + (float) Math.floor(group2.width() * 0.82104f - 0f) + 0.5f,
                    group2.top + (float) Math.floor(group2.height() * 0.13133f + 0.2f) + 0.3f);
                Path bezier2Path = CacheForHome.bezier2Path;
                bezier2Path.reset();
                bezier2Path.moveTo(group2.left + group2.width() * 0.44829f, group2.top + group2.height() * 0.13133f);
                bezier2Path.cubicTo(group2.left + group2.width() * 0.45793f, group2.top + group2.height() * 0.13133f, group2.left + group2.width() * 0.46635f, group2.top + group2.height() * 0.12991f, group2.left + group2.width() * 0.47353f, group2.top + group2.height() * 0.12708f);
                bezier2Path.cubicTo(group2.left + group2.width() * 0.48069f, group2.top + group2.height() * 0.12429f, group2.left + group2.width() * 0.48616f, group2.top + group2.height() * 0.12033f, group2.left + group2.width() * 0.48997f, group2.top + group2.height() * 0.11522f);
                bezier2Path.cubicTo(group2.left + group2.width() * 0.49378f, group2.top + group2.height() * 0.11011f, group2.left + group2.width() * 0.49569f, group2.top + group2.height() * 0.10429f, group2.left + group2.width() * 0.49569f, group2.top + group2.height() * 0.09773f);
                bezier2Path.cubicTo(group2.left + group2.width() * 0.49569f, group2.top + group2.height() * 0.09058f, group2.left + group2.width() * 0.49368f, group2.top + group2.height() * 0.08466f, group2.left + group2.width() * 0.48961f, group2.top + group2.height() * 0.07992f);
                bezier2Path.cubicTo(group2.left + group2.width() * 0.48557f, group2.top + group2.height() * 0.07522f, group2.left + group2.width() * 0.47831f, group2.top + group2.height() * 0.07081f, group2.left + group2.width() * 0.46789f, group2.top + group2.height() * 0.06669f);
                bezier2Path.cubicTo(group2.left + group2.width() * 0.45703f, group2.top + group2.height() * 0.06236f, group2.left + group2.width() * 0.45037f, group2.top + group2.height() * 0.05935f, group2.left + group2.width() * 0.44791f, group2.top + group2.height() * 0.05771f);
                bezier2Path.cubicTo(group2.left + group2.width() * 0.44546f, group2.top + group2.height() * 0.05608f, group2.left + group2.width() * 0.44422f, group2.top + group2.height() * 0.05422f, group2.left + group2.width() * 0.44422f, group2.top + group2.height() * 0.05212f);
                bezier2Path.cubicTo(group2.left + group2.width() * 0.44422f, group2.top + group2.height() * 0.05022f, group2.left + group2.width() * 0.44521f, group2.top + group2.height() * 0.04859f, group2.left + group2.width() * 0.44713f, group2.top + group2.height() * 0.04728f);
                bezier2Path.cubicTo(group2.left + group2.width() * 0.44906f, group2.top + group2.height() * 0.04599f, group2.left + group2.width() * 0.45214f, group2.top + group2.height() * 0.04533f, group2.left + group2.width() * 0.45641f, group2.top + group2.height() * 0.04533f);
                bezier2Path.cubicTo(group2.left + group2.width() * 0.46462f, group2.top + group2.height() * 0.04533f, group2.left + group2.width() * 0.47436f, group2.top + group2.height() * 0.04762f, group2.left + group2.width() * 0.48569f, group2.top + group2.height() * 0.05212f);
                bezier2Path.lineTo(group2.left + group2.width() * 0.49569f, group2.top + group2.height() * 0.03003f);
                bezier2Path.cubicTo(group2.left + group2.width() * 0.48267f, group2.top + group2.height() * 0.02495f, group2.left + group2.width() * 0.4699f, group2.top + group2.height() * 0.02244f, group2.left + group2.width() * 0.45739f, group2.top + group2.height() * 0.02244f);
                bezier2Path.cubicTo(group2.left + group2.width() * 0.44322f, group2.top + group2.height() * 0.02244f, group2.left + group2.width() * 0.43206f, group2.top + group2.height() * 0.02516f, group2.left + group2.width() * 0.42399f, group2.top + group2.height() * 0.03064f);
                bezier2Path.cubicTo(group2.left + group2.width() * 0.41587f, group2.top + group2.height() * 0.0361f, group2.left + group2.width() * 0.41182f, group2.top + group2.height() * 0.0437f, group2.left + group2.width() * 0.41182f, group2.top + group2.height() * 0.05344f);
                bezier2Path.cubicTo(group2.left + group2.width() * 0.41182f, group2.top + group2.height() * 0.05867f, group2.left + group2.width() * 0.41277f, group2.top + group2.height() * 0.0632f, group2.left + group2.width() * 0.41467f, group2.top + group2.height() * 0.06699f);
                bezier2Path.cubicTo(group2.left + group2.width() * 0.41656f, group2.top + group2.height() * 0.07081f, group2.left + group2.width() * 0.4195f, group2.top + group2.height() * 0.07419f, group2.left + group2.width() * 0.42343f, group2.top + group2.height() * 0.07715f);
                bezier2Path.cubicTo(group2.left + group2.width() * 0.42737f, group2.top + group2.height() * 0.08007f, group2.left + group2.width() * 0.43328f, group2.top + group2.height() * 0.08313f, group2.left + group2.width() * 0.44118f, group2.top + group2.height() * 0.08626f);
                bezier2Path.cubicTo(group2.left + group2.width() * 0.44989f, group2.top + group2.height() * 0.08971f, group2.left + group2.width() * 0.45525f, group2.top + group2.height() * 0.09197f, group2.left + group2.width() * 0.45728f, group2.top + group2.height() * 0.09307f);
                bezier2Path.cubicTo(group2.left + group2.width() * 0.45928f, group2.top + group2.height() * 0.0942f, group2.left + group2.width() * 0.46073f, group2.top + group2.height() * 0.09528f, group2.left + group2.width() * 0.46163f, group2.top + group2.height() * 0.09638f);
                bezier2Path.cubicTo(group2.left + group2.width() * 0.46256f, group2.top + group2.height() * 0.09746f, group2.left + group2.width() * 0.46302f, group2.top + group2.height() * 0.09874f, group2.left + group2.width() * 0.46302f, group2.top + group2.height() * 0.10018f);
                bezier2Path.cubicTo(group2.left + group2.width() * 0.46302f, group2.top + group2.height() * 0.10251f, group2.left + group2.width() * 0.46188f, group2.top + group2.height() * 0.10436f, group2.left + group2.width() * 0.45963f, group2.top + group2.height() * 0.10586f);
                bezier2Path.cubicTo(group2.left + group2.width() * 0.45735f, group2.top + group2.height() * 0.10735f, group2.left + group2.width() * 0.45381f, group2.top + group2.height() * 0.10807f, group2.left + group2.width() * 0.44893f, group2.top + group2.height() * 0.10807f);
                bezier2Path.cubicTo(group2.left + group2.width() * 0.44333f, group2.top + group2.height() * 0.10807f, group2.left + group2.width() * 0.43716f, group2.top + group2.height() * 0.10729f, group2.left + group2.width() * 0.43042f, group2.top + group2.height() * 0.10571f);
                bezier2Path.cubicTo(group2.left + group2.width() * 0.42371f, group2.top + group2.height() * 0.10414f, group2.left + group2.width() * 0.41723f, group2.top + group2.height() * 0.10197f, group2.left + group2.width() * 0.41099f, group2.top + group2.height() * 0.09919f);
                bezier2Path.lineTo(group2.left + group2.width() * 0.41099f, group2.top + group2.height() * 0.12465f);
                bezier2Path.cubicTo(group2.left + group2.width() * 0.41688f, group2.top + group2.height() * 0.12711f, group2.left + group2.width() * 0.42257f, group2.top + group2.height() * 0.12885f, group2.left + group2.width() * 0.42802f, group2.top + group2.height() * 0.12986f);
                bezier2Path.cubicTo(group2.left + group2.width() * 0.43349f, group2.top + group2.height() * 0.13084f, group2.left + group2.width() * 0.44024f, group2.top + group2.height() * 0.13133f, group2.left + group2.width() * 0.44829f, group2.top + group2.height() * 0.13133f);
                bezier2Path.close();
                bezier2Path.moveTo(group2.left + group2.width() * 0.59894f, group2.top + group2.height() * 0.08212f);
                bezier2Path.cubicTo(group2.left + group2.width() * 0.59894f, group2.top + group2.height() * 0.07595f, group2.left + group2.width() * 0.59841f, group2.top + group2.height() * 0.06699f, group2.left + group2.width() * 0.59735f, group2.top + group2.height() * 0.05526f);
                bezier2Path.lineTo(group2.left + group2.width() * 0.5981f, group2.top + group2.height() * 0.05526f);
                bezier2Path.lineTo(group2.left + group2.width() * 0.64228f, group2.top + group2.height() * 0.1299f);
                bezier2Path.lineTo(group2.left + group2.width() * 0.68512f, group2.top + group2.height() * 0.1299f);
                bezier2Path.lineTo(group2.left + group2.width() * 0.68512f, group2.top + group2.height() * 0.02395f);
                bezier2Path.lineTo(group2.left + group2.width() * 0.656f, group2.top + group2.height() * 0.02395f);
                bezier2Path.lineTo(group2.left + group2.width() * 0.656f, group2.top + group2.height() * 0.07187f);
                bezier2Path.cubicTo(group2.left + group2.width() * 0.656f, group2.top + group2.height() * 0.07833f, group2.left + group2.width() * 0.65639f, group2.top + group2.height() * 0.08688f, group2.left + group2.width() * 0.65716f, group2.top + group2.height() * 0.09755f);
                bezier2Path.lineTo(group2.left + group2.width() * 0.65667f, group2.top + group2.height() * 0.09755f);
                bezier2Path.lineTo(group2.left + group2.width() * 0.61266f, group2.top + group2.height() * 0.02395f);
                bezier2Path.lineTo(group2.left + group2.width() * 0.56999f, group2.top + group2.height() * 0.02395f);
                bezier2Path.lineTo(group2.left + group2.width() * 0.56999f, group2.top + group2.height() * 0.1299f);
                bezier2Path.lineTo(group2.left + group2.width() * 0.59894f, group2.top + group2.height() * 0.1299f);
                bezier2Path.lineTo(group2.left + group2.width() * 0.59894f, group2.top + group2.height() * 0.08212f);
                bezier2Path.close();
                bezier2Path.moveTo(group2.left + group2.width() * 0.51438f, group2.top + group2.height() * 0.1299f);
                bezier2Path.lineTo(group2.left + group2.width() * 0.54722f, group2.top + group2.height() * 0.1299f);
                bezier2Path.lineTo(group2.left + group2.width() * 0.54722f, group2.top + group2.height() * 0.02395f);
                bezier2Path.lineTo(group2.left + group2.width() * 0.51438f, group2.top + group2.height() * 0.02395f);
                bezier2Path.lineTo(group2.left + group2.width() * 0.51438f, group2.top + group2.height() * 0.1299f);
                bezier2Path.close();
                bezier2Path.moveTo(group2.left + group2.width() * 0.23577f, group2.top + group2.height() * 0.13133f);
                bezier2Path.cubicTo(group2.left + group2.width() * 0.24852f, group2.top + group2.height() * 0.13133f, group2.left + group2.width() * 0.25994f, group2.top + group2.height() * 0.1294f, group2.left + group2.width() * 0.27004f, group2.top + group2.height() * 0.12546f);
                bezier2Path.lineTo(group2.left + group2.width() * 0.27004f, group2.top + group2.height() * 0.10125f);
                bezier2Path.cubicTo(group2.left + group2.width() * 0.26495f, group2.top + group2.height() * 0.10311f, group2.left + group2.width() * 0.2599f, group2.top + group2.height() * 0.10469f, group2.left + group2.width() * 0.25489f, group2.top + group2.height() * 0.10598f);
                bezier2Path.cubicTo(group2.left + group2.width() * 0.24988f, group2.top + group2.height() * 0.10728f, group2.left + group2.width() * 0.24468f, group2.top + group2.height() * 0.10792f, group2.left + group2.width() * 0.23934f, group2.top + group2.height() * 0.10792f);
                bezier2Path.cubicTo(group2.left + group2.width() * 0.22164f, group2.top + group2.height() * 0.10792f, group2.left + group2.width() * 0.21279f, group2.top + group2.height() * 0.09775f, group2.left + group2.width() * 0.21279f, group2.top + group2.height() * 0.07738f);
                bezier2Path.cubicTo(group2.left + group2.width() * 0.21279f, group2.top + group2.height() * 0.06752f, group2.left + group2.width() * 0.21496f, group2.top + group2.height() * 0.05984f, group2.left + group2.width() * 0.21933f, group2.top + group2.height() * 0.05428f);
                bezier2Path.cubicTo(group2.left + group2.width() * 0.22367f, group2.top + group2.height() * 0.04871f, group2.left + group2.width() * 0.22977f, group2.top + group2.height() * 0.04591f, group2.left + group2.width() * 0.23752f, group2.top + group2.height() * 0.04591f);
                bezier2Path.cubicTo(group2.left + group2.width() * 0.24264f, group2.top + group2.height() * 0.04591f, group2.left + group2.width() * 0.24744f, group2.top + group2.height() * 0.04655f, group2.left + group2.width() * 0.25193f, group2.top + group2.height() * 0.0478f);
                bezier2Path.cubicTo(group2.left + group2.width() * 0.25637f, group2.top + group2.height() * 0.04904f, group2.left + group2.width() * 0.26085f, group2.top + group2.height() * 0.05061f, group2.left + group2.width() * 0.26531f, group2.top + group2.height() * 0.05245f);
                bezier2Path.lineTo(group2.left + group2.width() * 0.27532f, group2.top + group2.height() * 0.02991f);
                bezier2Path.cubicTo(group2.left + group2.width() * 0.26343f, group2.top + group2.height() * 0.02493f, group2.left + group2.width() * 0.25092f, group2.top + group2.height() * 0.02244f, group2.left + group2.width() * 0.23785f, group2.top + group2.height() * 0.02244f);
                bezier2Path.cubicTo(group2.left + group2.width() * 0.22588f, group2.top + group2.height() * 0.02244f, group2.left + group2.width() * 0.21548f, group2.top + group2.height() * 0.02466f, group2.left + group2.width() * 0.20663f, group2.top + group2.height() * 0.02913f);
                bezier2Path.cubicTo(group2.left + group2.width() * 0.19778f, group2.top + group2.height() * 0.03359f, group2.left + group2.width() * 0.19098f, group2.top + group2.height() * 0.04f, group2.left + group2.width() * 0.18628f, group2.top + group2.height() * 0.04831f);
                bezier2Path.cubicTo(group2.left + group2.width() * 0.18155f, group2.top + group2.height() * 0.0566f, group2.left + group2.width() * 0.17919f, group2.top + group2.height() * 0.06625f, group2.left + group2.width() * 0.17919f, group2.top + group2.height() * 0.0772f);
                bezier2Path.cubicTo(group2.left + group2.width() * 0.17919f, group2.top + group2.height() * 0.09475f, group2.left + group2.width() * 0.18408f, group2.top + group2.height() * 0.10814f, group2.left + group2.width() * 0.19381f, group2.top + group2.height() * 0.11742f);
                bezier2Path.cubicTo(group2.left + group2.width() * 0.20353f, group2.top + group2.height() * 0.12668f, group2.left + group2.width() * 0.21754f, group2.top + group2.height() * 0.13133f, group2.left + group2.width() * 0.23577f, group2.top + group2.height() * 0.13133f);
                bezier2Path.close();
                bezier2Path.moveTo(group2.left + group2.width() * 0.7624f, group2.top + group2.height() * 0.04578f);
                bezier2Path.cubicTo(group2.left + group2.width() * 0.74601f, group2.top + group2.height() * 0.04578f, group2.left + group2.width() * 0.73782f, group2.top + group2.height() * 0.05611f, group2.left + group2.width() * 0.73782f, group2.top + group2.height() * 0.07678f);
                bezier2Path.cubicTo(group2.left + group2.width() * 0.73782f, group2.top + group2.height() * 0.09727f, group2.left + group2.width() * 0.74595f, group2.top + group2.height() * 0.1075f, group2.left + group2.width() * 0.76221f, group2.top + group2.height() * 0.1075f);
                bezier2Path.cubicTo(group2.left + group2.width() * 0.7705f, group2.top + group2.height() * 0.1075f, group2.left + group2.width() * 0.77663f, group2.top + group2.height() * 0.10502f, group2.left + group2.width() * 0.78062f, group2.top + group2.height() * 0.10004f);
                bezier2Path.cubicTo(group2.left + group2.width() * 0.78463f, group2.top + group2.height() * 0.09507f, group2.left + group2.width() * 0.78662f, group2.top + group2.height() * 0.08729f, group2.left + group2.width() * 0.78662f, group2.top + group2.height() * 0.07678f);
                bezier2Path.cubicTo(group2.left + group2.width() * 0.78662f, group2.top + group2.height() * 0.06618f, group2.left + group2.width() * 0.78458f, group2.top + group2.height() * 0.05839f, group2.left + group2.width() * 0.78053f, group2.top + group2.height() * 0.05334f);
                bezier2Path.cubicTo(group2.left + group2.width() * 0.77648f, group2.top + group2.height() * 0.04831f, group2.left + group2.width() * 0.77045f, group2.top + group2.height() * 0.04578f, group2.left + group2.width() * 0.7624f, group2.top + group2.height() * 0.04578f);
                bezier2Path.close();
                bezier2Path.moveTo(group2.left + group2.width() * 0.80614f, group2.top + group2.height() * 0.03614f);
                bezier2Path.cubicTo(group2.left + group2.width() * 0.81607f, group2.top + group2.height() * 0.04535f, group2.left + group2.width() * 0.82104f, group2.top + group2.height() * 0.0589f, group2.left + group2.width() * 0.82104f, group2.top + group2.height() * 0.07678f);
                bezier2Path.cubicTo(group2.left + group2.width() * 0.82104f, group2.top + group2.height() * 0.09459f, group2.left + group2.width() * 0.81605f, group2.top + group2.height() * 0.10814f, group2.left + group2.width() * 0.80606f, group2.top + group2.height() * 0.11742f);
                bezier2Path.cubicTo(group2.left + group2.width() * 0.79608f, group2.top + group2.height() * 0.12668f, group2.left + group2.width() * 0.78148f, group2.top + group2.height() * 0.13133f, group2.left + group2.width() * 0.76221f, group2.top + group2.height() * 0.13133f);
                bezier2Path.cubicTo(group2.left + group2.width() * 0.74968f, group2.top + group2.height() * 0.13133f, group2.left + group2.width() * 0.73907f, group2.top + group2.height() * 0.12929f, group2.left + group2.width() * 0.7304f, group2.top + group2.height() * 0.12522f);
                bezier2Path.cubicTo(group2.left + group2.width() * 0.72596f, group2.top + group2.height() * 0.12313f, group2.left + group2.width() * 0.72203f, group2.top + group2.height() * 0.12051f, group2.left + group2.width() * 0.71861f, group2.top + group2.height() * 0.11736f);
                bezier2Path.cubicTo(group2.left + group2.width() * 0.70847f, group2.top + group2.height() * 0.10803f, group2.left + group2.width() * 0.70341f, group2.top + group2.height() * 0.09445f, group2.left + group2.width() * 0.70341f, group2.top + group2.height() * 0.07663f);
                bezier2Path.cubicTo(group2.left + group2.width() * 0.70341f, group2.top + group2.height() * 0.059f, group2.left + group2.width() * 0.70843f, group2.top + group2.height() * 0.04555f, group2.left + group2.width() * 0.7185f, group2.top + group2.height() * 0.03623f);
                bezier2Path.cubicTo(group2.left + group2.width() * 0.72857f, group2.top + group2.height() * 0.02695f, group2.left + group2.width() * 0.74321f, group2.top + group2.height() * 0.0223f, group2.left + group2.width() * 0.7624f, group2.top + group2.height() * 0.0223f);
                bezier2Path.cubicTo(group2.left + group2.width() * 0.78163f, group2.top + group2.height() * 0.0223f, group2.left + group2.width() * 0.79622f, group2.top + group2.height() * 0.02692f, group2.left + group2.width() * 0.80614f, group2.top + group2.height() * 0.03614f);
                bezier2Path.close();
                bezier2Path.moveTo(group2.left + group2.width() * 0.342f, group2.top + group2.height() * 0.04099f);
                bezier2Path.cubicTo(group2.left + group2.width() * 0.34149f, group2.top + group2.height() * 0.04343f, group2.left + group2.width() * 0.34052f, group2.top + group2.height() * 0.0475f, group2.left + group2.width() * 0.33907f, group2.top + group2.height() * 0.05317f);
                bezier2Path.cubicTo(group2.left + group2.width() * 0.3376f, group2.top + group2.height() * 0.05881f, group2.left + group2.width() * 0.33434f, group2.top + group2.height() * 0.06994f, group2.left + group2.width() * 0.32934f, group2.top + group2.height() * 0.08657f);
                bezier2Path.lineTo(group2.left + group2.width() * 0.35507f, group2.top + group2.height() * 0.08657f);
                bezier2Path.lineTo(group2.left + group2.width() * 0.34986f, group2.top + group2.height() * 0.06919f);
                bezier2Path.cubicTo(group2.left + group2.width() * 0.34863f, group2.top + group2.height() * 0.06531f, group2.left + group2.width() * 0.34716f, group2.top + group2.height() * 0.0603f, group2.left + group2.width() * 0.34541f, group2.top + group2.height() * 0.05419f);
                bezier2Path.cubicTo(group2.left + group2.width() * 0.34368f, group2.top + group2.height() * 0.04803f, group2.left + group2.width() * 0.34256f, group2.top + group2.height() * 0.04363f, group2.left + group2.width() * 0.342f, group2.top + group2.height() * 0.04099f);
                bezier2Path.close();
                bezier2Path.moveTo(group2.left + group2.width() * 0.36358f, group2.top + group2.height() * 0.02354f);
                bezier2Path.cubicTo(group2.left + group2.width() * 0.36358f, group2.top + group2.height() * 0.02352f, group2.left + group2.width() * 0.40354f, group2.top + group2.height() * 0.1299f, group2.left + group2.width() * 0.40354f, group2.top + group2.height() * 0.1299f);
                bezier2Path.lineTo(group2.left + group2.width() * 0.36779f, group2.top + group2.height() * 0.1299f);
                bezier2Path.lineTo(group2.left + group2.width() * 0.36185f, group2.top + group2.height() * 0.11003f);
                bezier2Path.lineTo(group2.left + group2.width() * 0.32255f, group2.top + group2.height() * 0.11003f);
                bezier2Path.cubicTo(group2.left + group2.width() * 0.32255f, group2.top + group2.height() * 0.11003f, group2.left + group2.width() * 0.32211f, group2.top + group2.height() * 0.11145f, group2.left + group2.width() * 0.32147f, group2.top + group2.height() * 0.11354f);
                bezier2Path.cubicTo(group2.left + group2.width() * 0.31971f, group2.top + group2.height() * 0.11924f, group2.left + group2.width() * 0.31643f, group2.top + group2.height() * 0.1299f, group2.left + group2.width() * 0.31643f, group2.top + group2.height() * 0.1299f);
                bezier2Path.lineTo(group2.left + group2.width() * 0.28053f, group2.top + group2.height() * 0.1299f);
                bezier2Path.cubicTo(group2.left + group2.width() * 0.28053f, group2.top + group2.height() * 0.1299f, group2.left + group2.width() * 0.28486f, group2.top + group2.height() * 0.11824f, group2.left + group2.width() * 0.29064f, group2.top + group2.height() * 0.10265f);
                bezier2Path.cubicTo(group2.left + group2.width() * 0.30233f, group2.top + group2.height() * 0.07113f, group2.left + group2.width() * 0.31999f, group2.top + group2.height() * 0.02352f, group2.left + group2.width() * 0.31999f, group2.top + group2.height() * 0.02352f);
                bezier2Path.lineTo(group2.left + group2.width() * 0.36358f, group2.top + group2.height() * 0.02352f);
                bezier2Path.lineTo(group2.left + group2.width() * 0.36358f, group2.top + group2.height() * 0.02354f);
                bezier2Path.close();
                
                paint.reset();
                paint.setFlags(Paint.ANTI_ALIAS_FLAG);
                paint.setStyle(Paint.Style.FILL);
                paint.setColor(StyleKit.rosso);
                canvas.drawPath(bezier2Path, paint);
            }
            
            // Bezier 3
            if (highlited) {
                RectF bezier3Rect = CacheForHome.bezier3Rect;
                bezier3Rect.set(group2.left + (float) Math.floor(group2.width() * 0.12245f - 0.05f) + 0.55f,
                    group2.top + (float) Math.floor(group2.height() * 0.28994f - 0.14f) + 0.64f,
                    group2.left + (float) Math.floor(group2.width() * 0.88435f - 0.15f) + 0.65f,
                    group2.top + (float) Math.floor(group2.height() * 0.91716f - 0.17f) + 0.67f);
                Path bezier3Path = CacheForHome.bezier3Path;
                bezier3Path.reset();
                bezier3Path.moveTo(group2.left + group2.width() * 0.26531f, group2.top + group2.height() * 0.7929f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.26531f, group2.top + group2.height() * 0.7929f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.26531f, group2.top + group2.height() * 0.7929f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.26769f, group2.top + group2.height() * 0.7929f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.28633f, group2.top + group2.height() * 0.7929f, group2.left + group2.width() * 0.30298f, group2.top + group2.height() * 0.80304f, group2.left + group2.width() * 0.30936f, group2.top + group2.height() * 0.81828f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.31293f, group2.top + group2.height() * 0.82809f, group2.left + group2.width() * 0.31293f, group2.top + group2.height() * 0.83721f, group2.left + group2.width() * 0.31293f, group2.top + group2.height() * 0.85544f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.31293f, group2.top + group2.height() * 0.91716f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.26531f, group2.top + group2.height() * 0.91716f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.21769f, group2.top + group2.height() * 0.91716f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.21769f, group2.top + group2.height() * 0.87193f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.21769f, group2.top + group2.height() * 0.83721f, group2.left + group2.width() * 0.21769f, group2.top + group2.height() * 0.82809f, group2.left + group2.width() * 0.22081f, group2.top + group2.height() * 0.81987f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.22125f, group2.top + group2.height() * 0.81828f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.22763f, group2.top + group2.height() * 0.80304f, group2.left + group2.width() * 0.24428f, group2.top + group2.height() * 0.7929f, group2.left + group2.width() * 0.26293f, group2.top + group2.height() * 0.7929f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.26531f, group2.top + group2.height() * 0.7929f, group2.left + group2.width() * 0.26531f, group2.top + group2.height() * 0.7929f, group2.left + group2.width() * 0.26531f, group2.top + group2.height() * 0.7929f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.26531f, group2.top + group2.height() * 0.7929f);
                bezier3Path.close();
                bezier3Path.moveTo(group2.left + group2.width() * 0.7415f, group2.top + group2.height() * 0.7929f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.7415f, group2.top + group2.height() * 0.7929f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.7415f, group2.top + group2.height() * 0.7929f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.74388f, group2.top + group2.height() * 0.7929f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.76252f, group2.top + group2.height() * 0.7929f, group2.left + group2.width() * 0.77917f, group2.top + group2.height() * 0.80304f, group2.left + group2.width() * 0.78555f, group2.top + group2.height() * 0.81828f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.78912f, group2.top + group2.height() * 0.82809f, group2.left + group2.width() * 0.78912f, group2.top + group2.height() * 0.83721f, group2.left + group2.width() * 0.78912f, group2.top + group2.height() * 0.85544f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.78912f, group2.top + group2.height() * 0.91716f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.7415f, group2.top + group2.height() * 0.91716f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.69388f, group2.top + group2.height() * 0.91716f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.69388f, group2.top + group2.height() * 0.87193f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.69388f, group2.top + group2.height() * 0.83721f, group2.left + group2.width() * 0.69388f, group2.top + group2.height() * 0.82809f, group2.left + group2.width() * 0.697f, group2.top + group2.height() * 0.81987f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.69744f, group2.top + group2.height() * 0.81828f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.70382f, group2.top + group2.height() * 0.80304f, group2.left + group2.width() * 0.72047f, group2.top + group2.height() * 0.7929f, group2.left + group2.width() * 0.73912f, group2.top + group2.height() * 0.7929f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.7415f, group2.top + group2.height() * 0.7929f, group2.left + group2.width() * 0.7415f, group2.top + group2.height() * 0.7929f, group2.left + group2.width() * 0.7415f, group2.top + group2.height() * 0.7929f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.7415f, group2.top + group2.height() * 0.7929f);
                bezier3Path.close();
                bezier3Path.moveTo(group2.left + group2.width() * 0.62585f, group2.top + group2.height() * 0.28994f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.62585f, group2.top + group2.height() * 0.28994f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.62585f, group2.top + group2.height() * 0.28994f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.62823f, group2.top + group2.height() * 0.28994f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.64687f, group2.top + group2.height() * 0.28994f, group2.left + group2.width() * 0.66353f, group2.top + group2.height() * 0.30008f, group2.left + group2.width() * 0.6699f, group2.top + group2.height() * 0.31532f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.67347f, group2.top + group2.height() * 0.32513f, group2.left + group2.width() * 0.67347f, group2.top + group2.height() * 0.33425f, group2.left + group2.width() * 0.67347f, group2.top + group2.height() * 0.35248f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.67347f, group2.top + group2.height() * 0.4142f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.62585f, group2.top + group2.height() * 0.4142f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.57823f, group2.top + group2.height() * 0.4142f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.57823f, group2.top + group2.height() * 0.36897f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.57823f, group2.top + group2.height() * 0.33425f, group2.left + group2.width() * 0.57823f, group2.top + group2.height() * 0.32513f, group2.left + group2.width() * 0.58135f, group2.top + group2.height() * 0.31691f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.5818f, group2.top + group2.height() * 0.31532f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.58817f, group2.top + group2.height() * 0.30008f, group2.left + group2.width() * 0.60483f, group2.top + group2.height() * 0.28994f, group2.left + group2.width() * 0.62347f, group2.top + group2.height() * 0.28994f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.62585f, group2.top + group2.height() * 0.28994f, group2.left + group2.width() * 0.62585f, group2.top + group2.height() * 0.28994f, group2.left + group2.width() * 0.62585f, group2.top + group2.height() * 0.28994f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.62585f, group2.top + group2.height() * 0.28994f);
                bezier3Path.close();
                bezier3Path.moveTo(group2.left + group2.width() * 0.5034f, group2.top + group2.height() * 0.28994f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.5034f, group2.top + group2.height() * 0.28994f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.5034f, group2.top + group2.height() * 0.28994f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.50578f, group2.top + group2.height() * 0.28994f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.52442f, group2.top + group2.height() * 0.28994f, group2.left + group2.width() * 0.54108f, group2.top + group2.height() * 0.30008f, group2.left + group2.width() * 0.54745f, group2.top + group2.height() * 0.31532f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.55102f, group2.top + group2.height() * 0.32513f, group2.left + group2.width() * 0.55102f, group2.top + group2.height() * 0.33425f, group2.left + group2.width() * 0.55102f, group2.top + group2.height() * 0.35248f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.55102f, group2.top + group2.height() * 0.4142f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.5034f, group2.top + group2.height() * 0.4142f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.45578f, group2.top + group2.height() * 0.4142f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.45578f, group2.top + group2.height() * 0.36897f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.45578f, group2.top + group2.height() * 0.33425f, group2.left + group2.width() * 0.45578f, group2.top + group2.height() * 0.32513f, group2.left + group2.width() * 0.4589f, group2.top + group2.height() * 0.31691f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.45935f, group2.top + group2.height() * 0.31532f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.46573f, group2.top + group2.height() * 0.30008f, group2.left + group2.width() * 0.48238f, group2.top + group2.height() * 0.28994f, group2.left + group2.width() * 0.50102f, group2.top + group2.height() * 0.28994f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.5034f, group2.top + group2.height() * 0.28994f, group2.left + group2.width() * 0.5034f, group2.top + group2.height() * 0.28994f, group2.left + group2.width() * 0.5034f, group2.top + group2.height() * 0.28994f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.5034f, group2.top + group2.height() * 0.28994f);
                bezier3Path.close();
                bezier3Path.moveTo(group2.left + group2.width() * 0.38095f, group2.top + group2.height() * 0.28994f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.38095f, group2.top + group2.height() * 0.28994f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.38095f, group2.top + group2.height() * 0.28994f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.38333f, group2.top + group2.height() * 0.28994f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.40198f, group2.top + group2.height() * 0.28994f, group2.left + group2.width() * 0.41863f, group2.top + group2.height() * 0.30008f, group2.left + group2.width() * 0.425f, group2.top + group2.height() * 0.31532f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.42857f, group2.top + group2.height() * 0.32513f, group2.left + group2.width() * 0.42857f, group2.top + group2.height() * 0.33425f, group2.left + group2.width() * 0.42857f, group2.top + group2.height() * 0.35248f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.42857f, group2.top + group2.height() * 0.4142f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.38095f, group2.top + group2.height() * 0.4142f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.33333f, group2.top + group2.height() * 0.4142f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.33333f, group2.top + group2.height() * 0.36897f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.33333f, group2.top + group2.height() * 0.33425f, group2.left + group2.width() * 0.33333f, group2.top + group2.height() * 0.32513f, group2.left + group2.width() * 0.33645f, group2.top + group2.height() * 0.31691f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.3369f, group2.top + group2.height() * 0.31532f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.34328f, group2.top + group2.height() * 0.30008f, group2.left + group2.width() * 0.35993f, group2.top + group2.height() * 0.28994f, group2.left + group2.width() * 0.37857f, group2.top + group2.height() * 0.28994f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.38095f, group2.top + group2.height() * 0.28994f, group2.left + group2.width() * 0.38095f, group2.top + group2.height() * 0.28994f, group2.left + group2.width() * 0.38095f, group2.top + group2.height() * 0.28994f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.38095f, group2.top + group2.height() * 0.28994f);
                bezier3Path.close();
                bezier3Path.moveTo(group2.left + group2.width() * 0.83673f, group2.top + group2.height() * 0.28994f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.83673f, group2.top + group2.height() * 0.28994f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.83673f, group2.top + group2.height() * 0.28994f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.83912f, group2.top + group2.height() * 0.28994f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.85776f, group2.top + group2.height() * 0.28994f, group2.left + group2.width() * 0.87441f, group2.top + group2.height() * 0.30008f, group2.left + group2.width() * 0.88079f, group2.top + group2.height() * 0.31532f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.88435f, group2.top + group2.height() * 0.32513f, group2.left + group2.width() * 0.88435f, group2.top + group2.height() * 0.33425f, group2.left + group2.width() * 0.88435f, group2.top + group2.height() * 0.35248f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.88435f, group2.top + group2.height() * 0.4142f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.83673f, group2.top + group2.height() * 0.4142f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.78912f, group2.top + group2.height() * 0.4142f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.78912f, group2.top + group2.height() * 0.36897f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.78912f, group2.top + group2.height() * 0.33425f, group2.left + group2.width() * 0.78912f, group2.top + group2.height() * 0.32513f, group2.left + group2.width() * 0.79223f, group2.top + group2.height() * 0.31691f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.79268f, group2.top + group2.height() * 0.31532f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.79906f, group2.top + group2.height() * 0.30008f, group2.left + group2.width() * 0.81571f, group2.top + group2.height() * 0.28994f, group2.left + group2.width() * 0.83435f, group2.top + group2.height() * 0.28994f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.83673f, group2.top + group2.height() * 0.28994f, group2.left + group2.width() * 0.83673f, group2.top + group2.height() * 0.28994f, group2.left + group2.width() * 0.83673f, group2.top + group2.height() * 0.28994f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.83673f, group2.top + group2.height() * 0.28994f);
                bezier3Path.close();
                bezier3Path.moveTo(group2.left + group2.width() * 0.17007f, group2.top + group2.height() * 0.28994f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.17007f, group2.top + group2.height() * 0.28994f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.17007f, group2.top + group2.height() * 0.28994f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.17245f, group2.top + group2.height() * 0.28994f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.19109f, group2.top + group2.height() * 0.28994f, group2.left + group2.width() * 0.20774f, group2.top + group2.height() * 0.30008f, group2.left + group2.width() * 0.21412f, group2.top + group2.height() * 0.31532f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.21769f, group2.top + group2.height() * 0.32513f, group2.left + group2.width() * 0.21769f, group2.top + group2.height() * 0.33425f, group2.left + group2.width() * 0.21769f, group2.top + group2.height() * 0.35248f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.21769f, group2.top + group2.height() * 0.4142f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.17007f, group2.top + group2.height() * 0.4142f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.12245f, group2.top + group2.height() * 0.4142f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.12245f, group2.top + group2.height() * 0.36897f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.12245f, group2.top + group2.height() * 0.33425f, group2.left + group2.width() * 0.12245f, group2.top + group2.height() * 0.32513f, group2.left + group2.width() * 0.12557f, group2.top + group2.height() * 0.31691f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.12602f, group2.top + group2.height() * 0.31532f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.13239f, group2.top + group2.height() * 0.30008f, group2.left + group2.width() * 0.14904f, group2.top + group2.height() * 0.28994f, group2.left + group2.width() * 0.16769f, group2.top + group2.height() * 0.28994f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.17007f, group2.top + group2.height() * 0.28994f, group2.left + group2.width() * 0.17007f, group2.top + group2.height() * 0.28994f, group2.left + group2.width() * 0.17007f, group2.top + group2.height() * 0.28994f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.17007f, group2.top + group2.height() * 0.28994f);
                bezier3Path.close();
                bezier3Path.moveTo(group2.left + group2.width() * 0.62585f, group2.top + group2.height() * 0.48521f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.62585f, group2.top + group2.height() * 0.48521f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.62585f, group2.top + group2.height() * 0.48521f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.62823f, group2.top + group2.height() * 0.48521f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.64687f, group2.top + group2.height() * 0.48521f, group2.left + group2.width() * 0.66353f, group2.top + group2.height() * 0.49535f, group2.left + group2.width() * 0.6699f, group2.top + group2.height() * 0.51059f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.67347f, group2.top + group2.height() * 0.5204f, group2.left + group2.width() * 0.67347f, group2.top + group2.height() * 0.52952f, group2.left + group2.width() * 0.67347f, group2.top + group2.height() * 0.54775f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.67347f, group2.top + group2.height() * 0.60947f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.62585f, group2.top + group2.height() * 0.60947f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.57823f, group2.top + group2.height() * 0.60947f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.57823f, group2.top + group2.height() * 0.56424f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.57823f, group2.top + group2.height() * 0.52952f, group2.left + group2.width() * 0.57823f, group2.top + group2.height() * 0.5204f, group2.left + group2.width() * 0.58135f, group2.top + group2.height() * 0.51218f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.5818f, group2.top + group2.height() * 0.51059f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.58817f, group2.top + group2.height() * 0.49535f, group2.left + group2.width() * 0.60483f, group2.top + group2.height() * 0.48521f, group2.left + group2.width() * 0.62347f, group2.top + group2.height() * 0.48521f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.62585f, group2.top + group2.height() * 0.48521f, group2.left + group2.width() * 0.62585f, group2.top + group2.height() * 0.48521f, group2.left + group2.width() * 0.62585f, group2.top + group2.height() * 0.48521f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.62585f, group2.top + group2.height() * 0.48521f);
                bezier3Path.close();
                bezier3Path.moveTo(group2.left + group2.width() * 0.5034f, group2.top + group2.height() * 0.48521f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.5034f, group2.top + group2.height() * 0.48521f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.5034f, group2.top + group2.height() * 0.48521f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.50578f, group2.top + group2.height() * 0.48521f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.52442f, group2.top + group2.height() * 0.48521f, group2.left + group2.width() * 0.54108f, group2.top + group2.height() * 0.49535f, group2.left + group2.width() * 0.54745f, group2.top + group2.height() * 0.51059f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.55102f, group2.top + group2.height() * 0.5204f, group2.left + group2.width() * 0.55102f, group2.top + group2.height() * 0.52952f, group2.left + group2.width() * 0.55102f, group2.top + group2.height() * 0.54775f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.55102f, group2.top + group2.height() * 0.60947f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.5034f, group2.top + group2.height() * 0.60947f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.45578f, group2.top + group2.height() * 0.60947f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.45578f, group2.top + group2.height() * 0.56424f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.45578f, group2.top + group2.height() * 0.52952f, group2.left + group2.width() * 0.45578f, group2.top + group2.height() * 0.5204f, group2.left + group2.width() * 0.4589f, group2.top + group2.height() * 0.51218f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.45935f, group2.top + group2.height() * 0.51059f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.46573f, group2.top + group2.height() * 0.49535f, group2.left + group2.width() * 0.48238f, group2.top + group2.height() * 0.48521f, group2.left + group2.width() * 0.50102f, group2.top + group2.height() * 0.48521f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.5034f, group2.top + group2.height() * 0.48521f, group2.left + group2.width() * 0.5034f, group2.top + group2.height() * 0.48521f, group2.left + group2.width() * 0.5034f, group2.top + group2.height() * 0.48521f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.5034f, group2.top + group2.height() * 0.48521f);
                bezier3Path.close();
                bezier3Path.moveTo(group2.left + group2.width() * 0.38095f, group2.top + group2.height() * 0.48521f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.38095f, group2.top + group2.height() * 0.48521f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.38095f, group2.top + group2.height() * 0.48521f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.38333f, group2.top + group2.height() * 0.48521f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.40198f, group2.top + group2.height() * 0.48521f, group2.left + group2.width() * 0.41863f, group2.top + group2.height() * 0.49535f, group2.left + group2.width() * 0.425f, group2.top + group2.height() * 0.51059f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.42857f, group2.top + group2.height() * 0.5204f, group2.left + group2.width() * 0.42857f, group2.top + group2.height() * 0.52952f, group2.left + group2.width() * 0.42857f, group2.top + group2.height() * 0.54775f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.42857f, group2.top + group2.height() * 0.60947f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.38095f, group2.top + group2.height() * 0.60947f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.33333f, group2.top + group2.height() * 0.60947f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.33333f, group2.top + group2.height() * 0.56424f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.33333f, group2.top + group2.height() * 0.52952f, group2.left + group2.width() * 0.33333f, group2.top + group2.height() * 0.5204f, group2.left + group2.width() * 0.33645f, group2.top + group2.height() * 0.51218f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.3369f, group2.top + group2.height() * 0.51059f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.34328f, group2.top + group2.height() * 0.49535f, group2.left + group2.width() * 0.35993f, group2.top + group2.height() * 0.48521f, group2.left + group2.width() * 0.37857f, group2.top + group2.height() * 0.48521f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.38095f, group2.top + group2.height() * 0.48521f, group2.left + group2.width() * 0.38095f, group2.top + group2.height() * 0.48521f, group2.left + group2.width() * 0.38095f, group2.top + group2.height() * 0.48521f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.38095f, group2.top + group2.height() * 0.48521f);
                bezier3Path.close();
                bezier3Path.moveTo(group2.left + group2.width() * 0.83673f, group2.top + group2.height() * 0.48521f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.83673f, group2.top + group2.height() * 0.48521f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.83673f, group2.top + group2.height() * 0.48521f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.83912f, group2.top + group2.height() * 0.48521f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.85776f, group2.top + group2.height() * 0.48521f, group2.left + group2.width() * 0.87441f, group2.top + group2.height() * 0.49535f, group2.left + group2.width() * 0.88079f, group2.top + group2.height() * 0.51059f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.88435f, group2.top + group2.height() * 0.5204f, group2.left + group2.width() * 0.88435f, group2.top + group2.height() * 0.52952f, group2.left + group2.width() * 0.88435f, group2.top + group2.height() * 0.54775f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.88435f, group2.top + group2.height() * 0.60947f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.83673f, group2.top + group2.height() * 0.60947f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.78912f, group2.top + group2.height() * 0.60947f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.78912f, group2.top + group2.height() * 0.56424f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.78912f, group2.top + group2.height() * 0.52952f, group2.left + group2.width() * 0.78912f, group2.top + group2.height() * 0.5204f, group2.left + group2.width() * 0.79223f, group2.top + group2.height() * 0.51218f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.79268f, group2.top + group2.height() * 0.51059f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.79906f, group2.top + group2.height() * 0.49535f, group2.left + group2.width() * 0.81571f, group2.top + group2.height() * 0.48521f, group2.left + group2.width() * 0.83435f, group2.top + group2.height() * 0.48521f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.83673f, group2.top + group2.height() * 0.48521f, group2.left + group2.width() * 0.83673f, group2.top + group2.height() * 0.48521f, group2.left + group2.width() * 0.83673f, group2.top + group2.height() * 0.48521f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.83673f, group2.top + group2.height() * 0.48521f);
                bezier3Path.close();
                bezier3Path.moveTo(group2.left + group2.width() * 0.17007f, group2.top + group2.height() * 0.48521f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.17007f, group2.top + group2.height() * 0.48521f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.17007f, group2.top + group2.height() * 0.48521f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.17245f, group2.top + group2.height() * 0.48521f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.19109f, group2.top + group2.height() * 0.48521f, group2.left + group2.width() * 0.20774f, group2.top + group2.height() * 0.49535f, group2.left + group2.width() * 0.21412f, group2.top + group2.height() * 0.51059f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.21769f, group2.top + group2.height() * 0.5204f, group2.left + group2.width() * 0.21769f, group2.top + group2.height() * 0.52952f, group2.left + group2.width() * 0.21769f, group2.top + group2.height() * 0.54775f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.21769f, group2.top + group2.height() * 0.60947f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.17007f, group2.top + group2.height() * 0.60947f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.12245f, group2.top + group2.height() * 0.60947f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.12245f, group2.top + group2.height() * 0.56424f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.12245f, group2.top + group2.height() * 0.52952f, group2.left + group2.width() * 0.12245f, group2.top + group2.height() * 0.5204f, group2.left + group2.width() * 0.12557f, group2.top + group2.height() * 0.51218f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.12602f, group2.top + group2.height() * 0.51059f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.13239f, group2.top + group2.height() * 0.49535f, group2.left + group2.width() * 0.14904f, group2.top + group2.height() * 0.48521f, group2.left + group2.width() * 0.16769f, group2.top + group2.height() * 0.48521f);
                bezier3Path.cubicTo(group2.left + group2.width() * 0.17007f, group2.top + group2.height() * 0.48521f, group2.left + group2.width() * 0.17007f, group2.top + group2.height() * 0.48521f, group2.left + group2.width() * 0.17007f, group2.top + group2.height() * 0.48521f);
                bezier3Path.lineTo(group2.left + group2.width() * 0.17007f, group2.top + group2.height() * 0.48521f);
                bezier3Path.close();
                
                paint.reset();
                paint.setFlags(Paint.ANTI_ALIAS_FLAG);
                paint.setStyle(Paint.Style.FILL);
                paint.setColor(StyleKit.bianco);
                canvas.drawPath(bezier3Path, paint);
            }
        }
    }
    
    private static class CacheForTel {
        private static Paint paint = new Paint();
        private static RectF bezierRect = new RectF();
        private static Path bezierPath = new Path();
    }
    
    
    public static void drawTel(Canvas canvas, RectF frame) {
        // General Declarations
        Paint paint = CacheForTel.paint;
        
        // Bezier
        RectF bezierRect = CacheForTel.bezierRect;
        bezierRect.set(frame.left,
            frame.top,
            frame.left + 106f,
            frame.top + 104f);
        Path bezierPath = CacheForTel.bezierPath;
        bezierPath.reset();
        bezierPath.moveTo(frame.left + frame.width() * 0.20725f, frame.top + frame.height() * 0.01164f);
        bezierPath.cubicTo(frame.left + frame.width() * 0.20773f, frame.top + frame.height() * 0.01189f, frame.left + frame.width() * 0.39135f, frame.top + frame.height() * 0.19487f, frame.left + frame.width() * 0.39135f, frame.top + frame.height() * 0.19487f);
        bezierPath.cubicTo(frame.left + frame.width() * 0.43439f, frame.top + frame.height() * 0.24181f, frame.left + frame.width() * 0.39231f, frame.top + frame.height() * 0.28588f, frame.left + frame.width() * 0.39231f, frame.top + frame.height() * 0.28588f);
        bezierPath.cubicTo(frame.left + frame.width() * 0.39231f, frame.top + frame.height() * 0.28588f, frame.left + frame.width() * 0.30469f, frame.top + frame.height() * 0.37365f, frame.left + frame.width() * 0.28452f, frame.top + frame.height() * 0.39386f);
        bezierPath.cubicTo(frame.left + frame.width() * 0.2819f, frame.top + frame.height() * 0.39649f, frame.left + frame.width() * 0.28041f, frame.top + frame.height() * 0.39797f, frame.left + frame.width() * 0.28041f, frame.top + frame.height() * 0.39797f);
        bezierPath.lineTo(frame.left + frame.width() * 0.41455f, frame.top + frame.height() * 0.57705f);
        bezierPath.cubicTo(frame.left + frame.width() * 0.41431f, frame.top + frame.height() * 0.57712f, frame.left + frame.width() * 0.41602f, frame.top + frame.height() * 0.57881f, frame.left + frame.width() * 0.41913f, frame.top + frame.height() * 0.58182f);
        bezierPath.cubicTo(frame.left + frame.width() * 0.42217f, frame.top + frame.height() * 0.58497f, frame.left + frame.width() * 0.42387f, frame.top + frame.height() * 0.5867f, frame.left + frame.width() * 0.42387f, frame.top + frame.height() * 0.5867f);
        bezierPath.cubicTo(frame.left + frame.width() * 0.42389f, frame.top + frame.height() * 0.5864f, frame.left + frame.width() * 0.60271f, frame.top + frame.height() * 0.71987f, frame.left + frame.width() * 0.60271f, frame.top + frame.height() * 0.71987f);
        bezierPath.lineTo(frame.left + frame.width() * 0.71461f, frame.top + frame.height() * 0.60778f);
        bezierPath.cubicTo(frame.left + frame.width() * 0.71461f, frame.top + frame.height() * 0.60778f, frame.left + frame.width() * 0.7586f, frame.top + frame.height() * 0.56562f, frame.left + frame.width() * 0.80547f, frame.top + frame.height() * 0.60874f);
        bezierPath.lineTo(frame.left + frame.width() * 0.98813f, frame.top + frame.height() * 0.79172f);
        bezierPath.cubicTo(frame.left + frame.width() * 0.98813f, frame.top + frame.height() * 0.79172f, frame.left + frame.width() * 1.01778f, frame.top + frame.height() * 0.84633f, frame.left + frame.width() * 0.98335f, frame.top + frame.height() * 0.87986f);
        bezierPath.lineTo(frame.left + frame.width() * 0.89441f, frame.top + frame.height() * 0.96895f);
        bezierPath.cubicTo(frame.left + frame.width() * 0.89441f, frame.top + frame.height() * 0.96895f, frame.left + frame.width() * 0.73756f, frame.top + frame.height() * 1.06955f, frame.left + frame.width() * 0.48604f, frame.top + frame.height() * 0.9086f);
        bezierPath.cubicTo(frame.left + frame.width() * 0.48604f, frame.top + frame.height() * 0.9086f, frame.left + frame.width() * 0.3729f, frame.top + frame.height() * 0.84919f, frame.left + frame.width() * 0.26516f, frame.top + frame.height() * 0.74199f);
        bezierPath.cubicTo(frame.left + frame.width() * 0.26259f, frame.top + frame.height() * 0.73943f, frame.left + frame.width() * 0.26002f, frame.top + frame.height() * 0.73685f, frame.left + frame.width() * 0.25746f, frame.top + frame.height() * 0.73424f);
        bezierPath.cubicTo(frame.left + frame.width() * 0.25739f, frame.top + frame.height() * 0.73427f, frame.left + frame.width() * 0.09219f, frame.top + frame.height() * 0.51519f, frame.left + frame.width() * 0.09219f, frame.top + frame.height() * 0.51519f);
        bezierPath.cubicTo(frame.left + frame.width() * -0.06962f, frame.top + frame.height() * 0.26289f, frame.left + frame.width() * 0.0308f, frame.top + frame.height() * 0.10577f, frame.left + frame.width() * 0.0308f, frame.top + frame.height() * 0.10577f);
        bezierPath.cubicTo(frame.left + frame.width() * 0.0308f, frame.top + frame.height() * 0.10577f, frame.left + frame.width() * 0.04241f, frame.top + frame.height() * 0.09414f, frame.left + frame.width() * 0.05725f, frame.top + frame.height() * 0.07928f);
        bezierPath.cubicTo(frame.left + frame.width() * 0.08347f, frame.top + frame.height() * 0.05302f, frame.left + frame.width() * 0.11974f, frame.top + frame.height() * 0.01668f, frame.left + frame.width() * 0.11974f, frame.top + frame.height() * 0.01668f);
        bezierPath.cubicTo(frame.left + frame.width() * 0.15322f, frame.top + frame.height() * -0.01781f, frame.left + frame.width() * 0.20773f, frame.top + frame.height() * 0.01189f, frame.left + frame.width() * 0.20773f, frame.top + frame.height() * 0.01189f);
        bezierPath.lineTo(frame.left + frame.width() * 0.20725f, frame.top + frame.height() * 0.01164f);
        bezierPath.close();
        
        paint.reset();
        paint.setFlags(Paint.ANTI_ALIAS_FLAG);
        paint.setStyle(Paint.Style.FILL);
        paint.setColor(StyleKit.bianco);
        canvas.drawPath(bezierPath, paint);
    }
    
    private static class CacheForDoveAnd {
        private static Paint paint = new Paint();
        private static RectF originalFrame = new RectF(0f, 0f, 70f, 100f);
        private static RectF resizedFrame = new RectF();
        private static RectF bezier2Rect = new RectF();
        private static Path bezier2Path = new Path();
        private static RectF bezierRect = new RectF();
        private static Path bezierPath = new Path();
    }
    
    public static void drawDoveAnd(Canvas canvas, int color) {
        StyleKit.drawDoveAnd(canvas, new RectF(0f, 0f, 70f, 100f), ResizingBehavior.AspectFit, color);
    }
    
    public static void drawDoveAnd(Canvas canvas, RectF targetFrame, ResizingBehavior resizing, int color) {
        // General Declarations
        Paint paint = CacheForDoveAnd.paint;
        
        // Resize to Target Frame
        canvas.save();
        RectF resizedFrame = CacheForDoveAnd.resizedFrame;
        StyleKit.resizingBehaviorApply(resizing, CacheForDoveAnd.originalFrame, targetFrame, resizedFrame);
        canvas.translate(resizedFrame.left, resizedFrame.top);
        canvas.scale(resizedFrame.width() / 70f, resizedFrame.height() / 100f);
        
        // Bezier 2
        RectF bezier2Rect = CacheForDoveAnd.bezier2Rect;
        bezier2Rect.set(23.23f, 21.76f, 48.54f, 47.17f);
        Path bezier2Path = CacheForDoveAnd.bezier2Path;
        bezier2Path.reset();
        bezier2Path.moveTo(35.97f, 21.76f);
        bezier2Path.lineTo(35.89f, 21.76f);
        bezier2Path.cubicTo(28.89f, 21.76f, 23.23f, 27.45f, 23.23f, 34.47f);
        bezier2Path.cubicTo(23.23f, 41.48f, 28.89f, 47.17f, 35.89f, 47.17f);
        bezier2Path.cubicTo(42.88f, 47.17f, 48.54f, 41.48f, 48.54f, 34.47f);
        bezier2Path.cubicTo(48.54f, 34.39f, 48.54f, 34.32f, 48.54f, 34.24f);
        bezier2Path.lineTo(48.54f, 34.47f);
        bezier2Path.cubicTo(48.54f, 27.54f, 43.01f, 21.88f, 36.11f, 21.76f);
        bezier2Path.lineTo(35.97f, 21.76f);
        bezier2Path.close();
        bezier2Path.moveTo(35.97f, 43.53f);
        bezier2Path.lineTo(35.97f, 43.53f);
        bezier2Path.cubicTo(31.05f, 43.53f, 27.06f, 39.53f, 27.06f, 34.58f);
        bezier2Path.cubicTo(27.06f, 29.64f, 31.05f, 25.64f, 35.97f, 25.64f);
        bezier2Path.cubicTo(40.9f, 25.64f, 44.89f, 29.64f, 44.89f, 34.58f);
        bezier2Path.lineTo(44.89f, 34.58f);
        bezier2Path.cubicTo(44.89f, 39.53f, 40.9f, 43.53f, 35.97f, 43.53f);
        bezier2Path.close();
        
        paint.reset();
        paint.setFlags(Paint.ANTI_ALIAS_FLAG);
        paint.setStyle(Paint.Style.FILL);
        paint.setColor(color);
        canvas.drawPath(bezier2Path, paint);
        
        // Bezier
        RectF bezierRect = CacheForDoveAnd.bezierRect;
        bezierRect.set(-0f, 0f, 69.33f, 99.3f);
        Path bezierPath = CacheForDoveAnd.bezierPath;
        bezierPath.reset();
        bezierPath.moveTo(59.16f, 10.19f);
        bezierPath.lineTo(59.16f, 10.19f);
        bezierPath.cubicTo(45.63f, -3.39f, 23.69f, -3.39f, 10.16f, 10.19f);
        bezierPath.cubicTo(-1.96f, 22.33f, -3.47f, 45.2f, 6.9f, 59.04f);
        bezierPath.lineTo(34.65f, 99.3f);
        bezierPath.lineTo(62.4f, 59.1f);
        bezierPath.cubicTo(72.8f, 45.2f, 71.31f, 22.33f, 59.19f, 10.16f);
        bezierPath.lineTo(59.16f, 10.19f);
        bezierPath.close();
        bezierPath.moveTo(59.46f, 57.01f);
        bezierPath.lineTo(34.68f, 92.8f);
        bezierPath.lineTo(9.81f, 56.92f);
        bezierPath.cubicTo(0.42f, 44.37f, 1.78f, 23.85f, 12.72f, 12.75f);
        bezierPath.lineTo(12.63f, 12.84f);
        bezierPath.cubicTo(24.76f, 0.67f, 44.42f, 0.67f, 56.54f, 12.84f);
        bezierPath.cubicTo(67.39f, 23.73f, 68.73f, 44.37f, 59.43f, 57.01f);
        bezierPath.lineTo(59.46f, 57.01f);
        bezierPath.close();
        
        paint.reset();
        paint.setFlags(Paint.ANTI_ALIAS_FLAG);
        paint.setStyle(Paint.Style.FILL);
        paint.setColor(color);
        canvas.drawPath(bezierPath, paint);
        
        canvas.restore();
    }
    
    
    // Canvas Images
    // Icone
    
    public static Bitmap imageOfIconaDove(PointF imageSize, int color) {
        Bitmap imageOfIconaDove = Bitmap.createBitmap((int) imageSize.x, (int) imageSize.y, Bitmap.Config.ARGB_8888);
        Canvas canvas = new Canvas(imageOfIconaDove);
        StyleKit.drawIconaDove(canvas, new RectF(0f, 0f, imageSize.x, imageSize.y), color);
        
        return imageOfIconaDove;
    }
    
    public static Bitmap imageOfIconaQuando(PointF imageSize, int color) {
        Bitmap imageOfIconaQuando = Bitmap.createBitmap((int) imageSize.x, (int) imageSize.y, Bitmap.Config.ARGB_8888);
        Canvas canvas = new Canvas(imageOfIconaQuando);
        StyleKit.drawIconaQuando(canvas, new RectF(0f, 0f, imageSize.x, imageSize.y), color);
        
        return imageOfIconaQuando;
    }
    
    public static Bitmap imageOfEvents(PointF imageSize, boolean highlited) {
        Bitmap imageOfEvents = Bitmap.createBitmap((int) imageSize.x, (int) imageSize.y, Bitmap.Config.ARGB_8888);
        Canvas canvas = new Canvas(imageOfEvents);
        StyleKit.drawEvents(canvas, new RectF(0f, 0f, imageSize.x, imageSize.y), highlited);
        
        return imageOfEvents;
    }
    
    public static Bitmap imageOfMic(PointF imageSize, int color, boolean highlited) {
        Bitmap imageOfMic = Bitmap.createBitmap((int) imageSize.x, (int) imageSize.y, Bitmap.Config.ARGB_8888);
        Canvas canvas = new Canvas(imageOfMic);
        StyleKit.drawMic(canvas, new RectF(0f, 0f, imageSize.x, imageSize.y), color, highlited);
        
        return imageOfMic;
    }
    
    public static Bitmap imageOfPercentuale(PointF imageSize, int color) {
        Bitmap imageOfPercentuale = Bitmap.createBitmap((int) imageSize.x, (int) imageSize.y, Bitmap.Config.ARGB_8888);
        Canvas canvas = new Canvas(imageOfPercentuale);
        StyleKit.drawPercentuale(canvas, new RectF(0f, 0f, imageSize.x, imageSize.y), color);
        
        return imageOfPercentuale;
    }
    
    public static Bitmap imageOfSpeaking(PointF imageSize, int color) {
        Bitmap imageOfSpeaking = Bitmap.createBitmap((int) imageSize.x, (int) imageSize.y, Bitmap.Config.ARGB_8888);
        Canvas canvas = new Canvas(imageOfSpeaking);
        StyleKit.drawSpeaking(canvas, new RectF(0f, 0f, imageSize.x, imageSize.y), color);
        
        return imageOfSpeaking;
    }
    
    public static Bitmap imageOfSpeak_acceso(PointF imageSize) {
        Bitmap imageOfSpeak_acceso = Bitmap.createBitmap((int) imageSize.x, (int) imageSize.y, Bitmap.Config.ARGB_8888);
        Canvas canvas = new Canvas(imageOfSpeak_acceso);
        StyleKit.drawSpeak_acceso(canvas, new RectF(0f, 0f, imageSize.x, imageSize.y));
        
        return imageOfSpeak_acceso;
    }
    
    public static Bitmap imageOfGiochi(PointF imageSize, boolean highlited) {
        Bitmap imageOfGiochi = Bitmap.createBitmap((int) imageSize.x, (int) imageSize.y, Bitmap.Config.ARGB_8888);
        Canvas canvas = new Canvas(imageOfGiochi);
        StyleKit.drawGiochi(canvas, new RectF(0f, 0f, imageSize.x, imageSize.y), highlited);
        
        return imageOfGiochi;
    }
    
    public static Bitmap imageOfEventi(PointF imageSize, boolean highlited) {
        Bitmap imageOfEventi = Bitmap.createBitmap((int) imageSize.x, (int) imageSize.y, Bitmap.Config.ARGB_8888);
        Canvas canvas = new Canvas(imageOfEventi);
        StyleKit.drawEventi(canvas, new RectF(0f, 0f, imageSize.x, imageSize.y), highlited);
        
        return imageOfEventi;
    }
    
    public static Bitmap imageOfGiochiLista(PointF imageSize, boolean highlited) {
        Bitmap imageOfGiochiLista = Bitmap.createBitmap((int) imageSize.x, (int) imageSize.y, Bitmap.Config.ARGB_8888);
        Canvas canvas = new Canvas(imageOfGiochiLista);
        StyleKit.drawGiochiLista(canvas, new RectF(0f, 0f, imageSize.x, imageSize.y), highlited);
        
        return imageOfGiochiLista;
    }
    
    public static Bitmap imageOfPromozioni(PointF imageSize, boolean highlited) {
        Bitmap imageOfPromozioni = Bitmap.createBitmap((int) imageSize.x, (int) imageSize.y, Bitmap.Config.ARGB_8888);
        Canvas canvas = new Canvas(imageOfPromozioni);
        StyleKit.drawPromozioni(canvas, new RectF(0f, 0f, imageSize.x, imageSize.y), highlited);
        
        return imageOfPromozioni;
    }
    
    public static Bitmap imageOfHome(PointF imageSize, boolean highlited) {
        Bitmap imageOfHome = Bitmap.createBitmap((int) imageSize.x, (int) imageSize.y, Bitmap.Config.ARGB_8888);
        Canvas canvas = new Canvas(imageOfHome);
        StyleKit.drawHome(canvas, new RectF(0f, 0f, imageSize.x, imageSize.y), highlited);
        
        return imageOfHome;
    }
    
    public static Bitmap imageOfTel(PointF imageSize) {
        Bitmap imageOfTel = Bitmap.createBitmap((int) imageSize.x, (int) imageSize.y, Bitmap.Config.ARGB_8888);
        Canvas canvas = new Canvas(imageOfTel);
        StyleKit.drawTel(canvas, new RectF(0f, 0f, imageSize.x, imageSize.y));
        
        return imageOfTel;
    }
    
    
    // Resizing Behavior
    public static void resizingBehaviorApply(ResizingBehavior behavior, RectF rect, RectF target, RectF result) {
        if (rect.equals(target) || target == null) {
            result.set(rect);
            return;
        }
        
        if (behavior == ResizingBehavior.Stretch) {
            result.set(target);
            return;
        }
        
        float xRatio = Math.abs(target.width() / rect.width());
        float yRatio = Math.abs(target.height() / rect.height());
        float scale = 0f;
        
        switch (behavior) {
            case AspectFit: {
                scale = Math.min(xRatio, yRatio);
                break;
            }
            case AspectFill: {
                scale = Math.max(xRatio, yRatio);
                break;
            }
            case Center: {
                scale = 1f;
                break;
            }
        }
        
        float newWidth = Math.abs(rect.width() * scale);
        float newHeight = Math.abs(rect.height() * scale);
        result.set(target.centerX() - newWidth / 2,
            target.centerY() - newHeight / 2,
            target.centerX() + newWidth / 2,
            target.centerY() + newHeight / 2);
    }
    
    
}

class PaintCodeColor extends Color {
    private static float[] ColorToHSV(int originalColor) {
        float hsv[] = new float[3];
        RGBToHSV(red(originalColor), green(originalColor), blue(originalColor), hsv);
        return hsv;
    }
    
    public static int colorByChangingHue(int originalColor, float newHue) {
        float hsv[] = ColorToHSV(originalColor);
        hsv[0] = newHue;
        return HSVToColor(alpha(originalColor), hsv);
    }
    
    public static int colorByChangingSaturation(int originalColor, float newSaturation) {
        float hsv[] = ColorToHSV(originalColor);
        hsv[1] = newSaturation;
        return HSVToColor(alpha(originalColor), hsv);
    }
    
    public static int colorByChangingValue(int originalColor, float newValue) {
        float hsv[] = ColorToHSV(originalColor);
        hsv[2] = newValue;
        return HSVToColor(alpha(originalColor), hsv);
    }
    
    public static float hue(int color) {
        return ColorToHSV(color)[0];
    }
    
    public static float saturation(int color) {
        return ColorToHSV(color)[1];
    }
    
    public static float brightness(int color) {
        return ColorToHSV(color)[2];
    }
    
    public static int colorByChangingAlpha(int color, int newAlpha) {
        return argb(newAlpha, red(color), green(color), blue(color));
    }
    
    public static int colorByBlendingColors(int c1, float ratio, int c2) {
        return argb((int) ((1f - ratio) * alpha(c1) + ratio * alpha(c2)),
            (int) ((1f - ratio) * red(c1) + ratio * red(c2)),
            (int) ((1f - ratio) * green(c1) + ratio * green(c2)),
            (int) ((1f - ratio) * blue(c1) + ratio * blue(c2)));
    }
    
    public static int colorByApplyingHighlight(int color, float ratio) {
        return colorByBlendingColors(color, ratio, colorByChangingAlpha(WHITE, alpha(color)));
    }
    
    public static int colorByApplyingShadow(int color, float ratio) {
        return colorByBlendingColors(color, ratio, colorByChangingAlpha(BLACK, alpha(color)));
    }
}